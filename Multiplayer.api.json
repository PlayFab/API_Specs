{
  "name": "Multiplayer",
  "url": "/Multiplayer",
  "description": "API methods that capture a wide variety of Multiplayer interactions between your players.",
  "apiDescriptionList": [
    "API methods that capture a wide variety of Multiplayer interactions between your players."
  ],
  "AnyInclusiveFlags": [
    "Beta"
  ],
  "datatypes": {
    "AssetReference": {
      "name": "AssetReference",
      "className": "AssetReference",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "properties": [
        {
          "name": "MountPath",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "Name",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "AssetReferenceParams": {
      "name": "AssetReferenceParams",
      "className": "AssetReferenceParams",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "properties": [
        {
          "name": "MountPath",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        },
        {
          "name": "Name",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "AssetSummary": {
      "name": "AssetSummary",
      "className": "AssetSummary",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "properties": [
        {
          "name": "Metadata",
          "collection": "map",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "Name",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "AzureRegion": {
      "name": "AzureRegion",
      "className": "AzureRegion",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isenum": true,
      "enumvalues": [
        {
          "name": "EastUs"
        },
        {
          "name": "CentralUs"
        },
        {
          "name": "WestUs"
        },
        {
          "name": "NorthEurope"
        },
        {
          "name": "WestEurope"
        }
      ]
    },
    "AzureVmSize": {
      "name": "AzureVmSize",
      "className": "AzureVmSize",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isenum": true,
      "enumvalues": [
        {
          "name": "Standard_A1_v2"
        },
        {
          "name": "Standard_A2_v2"
        },
        {
          "name": "Standard_A4_v2"
        },
        {
          "name": "Standard_A8_v2"
        },
        {
          "name": "Standard_D1_v2"
        },
        {
          "name": "Standard_D2_v2"
        },
        {
          "name": "Standard_D3_v2"
        },
        {
          "name": "Standard_D4_v2"
        },
        {
          "name": "Standard_D5_v2"
        },
        {
          "name": "Standard_F1"
        },
        {
          "name": "Standard_F2"
        },
        {
          "name": "Standard_F4"
        },
        {
          "name": "Standard_F8"
        },
        {
          "name": "Standard_F16"
        },
        {
          "name": "Standard_NC6"
        },
        {
          "name": "Standard_NC12"
        },
        {
          "name": "Standard_NC24"
        },
        {
          "name": "Standard_NC24r"
        },
        {
          "name": "Standard_NV6"
        },
        {
          "name": "Standard_NV12"
        },
        {
          "name": "Standard_NV24"
        }
      ]
    },
    "BuildRegion": {
      "name": "BuildRegion",
      "className": "BuildRegion",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "properties": [
        {
          "name": "MaxSessions",
          "jsontype": "Number",
          "actualtype": "int32",
          "optional": false
        },
        {
          "name": "Region",
          "jsontype": "String",
          "actualtype": "AzureRegion",
          "isenum": true,
          "optional": true
        },
        {
          "name": "StandbySessions",
          "jsontype": "Number",
          "actualtype": "int32",
          "optional": false
        },
        {
          "name": "Status",
          "jsontype": "String",
          "actualtype": "BuildRegionStatus",
          "isenum": true,
          "optional": true
        }
      ]
    },
    "BuildRegionParams": {
      "name": "BuildRegionParams",
      "className": "BuildRegionParams",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "properties": [
        {
          "name": "MaxSessions",
          "jsontype": "Number",
          "actualtype": "int32",
          "optional": false
        },
        {
          "name": "Region",
          "jsontype": "String",
          "actualtype": "AzureRegion",
          "isenum": true,
          "optional": false
        },
        {
          "name": "StandbySessions",
          "jsontype": "Number",
          "actualtype": "int32",
          "optional": false
        }
      ]
    },
    "BuildRegionStatus": {
      "name": "BuildRegionStatus",
      "className": "BuildRegionStatus",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isenum": true,
      "enumvalues": [
        {
          "name": "Unknown"
        },
        {
          "name": "Initializing"
        },
        {
          "name": "InProbation"
        },
        {
          "name": "Succeeded"
        },
        {
          "name": "Unhealthy"
        },
        {
          "name": "PendingDeletion"
        }
      ]
    },
    "BuildSummary": {
      "name": "BuildSummary",
      "className": "BuildSummary",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "properties": [
        {
          "name": "BuildId",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "BuildName",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "ContainerFlavor",
          "jsontype": "String",
          "actualtype": "ContainerFlavor",
          "isenum": true,
          "optional": true
        },
        {
          "name": "CustomGameContainerImage",
          "jsontype": "Object",
          "actualtype": "ContainerImageReference",
          "isclass": true,
          "optional": true
        },
        {
          "name": "GameAssetReferences",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "AssetReference",
          "isclass": true,
          "optional": true
        },
        {
          "name": "GameCertificateReferences",
          "collection": "array",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "MappedPorts",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "Port",
          "isclass": true,
          "optional": true
        },
        {
          "name": "Metadata",
          "collection": "map",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "MultiplayerServerCountPerVm",
          "jsontype": "Number",
          "actualtype": "int32",
          "optional": false
        },
        {
          "name": "RegionConfigurations",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "BuildRegion",
          "isclass": true,
          "optional": true
        },
        {
          "name": "StartGameCommand",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "VmSize",
          "jsontype": "String",
          "actualtype": "AzureVmSize",
          "isenum": true,
          "optional": true
        }
      ]
    },
    "CancellationReason": {
      "name": "CancellationReason",
      "className": "CancellationReason",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isenum": true,
      "enumvalues": [
        {
          "name": "Requested"
        },
        {
          "name": "Internal"
        },
        {
          "name": "Timeout"
        }
      ]
    },
    "CancelMatchmakingTicketRequest": {
      "name": "CancelMatchmakingTicketRequest",
      "className": "CancelMatchmakingTicketRequest",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isRequest": true,
      "properties": [
        {
          "name": "Entity",
          "description": "The entity to perform this action on.",
          "jsontype": "Object",
          "actualtype": "EntityKey",
          "isclass": true,
          "optional": true
        },
        {
          "name": "QueueName",
          "description": "The Id of the queue to join.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        },
        {
          "name": "TicketId",
          "description": "The Id of the ticket to find a match for.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        }
      ]
    },
    "CancelMatchmakingTicketResult": {
      "name": "CancelMatchmakingTicketResult",
      "className": "CancelMatchmakingTicketResult",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isResult": true,
      "properties": []
    },
    "Certificate": {
      "name": "Certificate",
      "className": "Certificate",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "properties": [
        {
          "name": "Base64EncodedValue",
          "description": "Base64 encoded string contents of the certificate.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        },
        {
          "name": "Name",
          "description": "A name for the certificate. This is used to reference certificates in build configurations.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        },
        {
          "name": "Password",
          "description": "If required for your PFX certificate, use this field to provide a password that will be used to install the certificate on the container.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "CertificateSummary": {
      "name": "CertificateSummary",
      "className": "CertificateSummary",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "properties": [
        {
          "name": "Name",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "Thumbprint",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "ConnectedPlayer": {
      "name": "ConnectedPlayer",
      "className": "ConnectedPlayer",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "properties": [
        {
          "name": "PlayerId",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "ContainerFlavor": {
      "name": "ContainerFlavor",
      "className": "ContainerFlavor",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isenum": true,
      "enumvalues": [
        {
          "name": "WindowsServerCorePlayFab"
        },
        {
          "name": "LinuxCustom"
        }
      ]
    },
    "ContainerImageReference": {
      "name": "ContainerImageReference",
      "className": "ContainerImageReference",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "properties": [
        {
          "name": "ImageName",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        },
        {
          "name": "Tag",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "CreateBuildResponse": {
      "name": "CreateBuildResponse",
      "className": "CreateBuildResponse",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isResult": true,
      "properties": [
        {
          "name": "BuildSummary",
          "jsontype": "Object",
          "actualtype": "BuildSummary",
          "isclass": true,
          "optional": true
        }
      ]
    },
    "CreateBuildWithCustomContainerRequest": {
      "name": "CreateBuildWithCustomContainerRequest",
      "className": "CreateBuildWithCustomContainerRequest",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isRequest": true,
      "properties": [
        {
          "name": "BuildName",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        },
        {
          "name": "ContainerRepositoryName",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        },
        {
          "name": "ContainerTag",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "GameAssetReferences",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "AssetReferenceParams",
          "isclass": true,
          "optional": true
        },
        {
          "name": "GameCertificateReferences",
          "collection": "array",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "MappedPorts",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "Port",
          "isclass": true,
          "optional": false
        },
        {
          "name": "Metadata",
          "collection": "map",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "MultiplayerServerCountPerVm",
          "jsontype": "Number",
          "actualtype": "int32",
          "optional": false
        },
        {
          "name": "RegionConfiguration",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "BuildRegionParams",
          "isclass": true,
          "optional": false
        },
        {
          "name": "StartGameCommand",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "VmSize",
          "jsontype": "String",
          "actualtype": "AzureVmSize",
          "isenum": true,
          "optional": true
        }
      ]
    },
    "CreateBuildWithManagedContainerRequest": {
      "name": "CreateBuildWithManagedContainerRequest",
      "className": "CreateBuildWithManagedContainerRequest",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isRequest": true,
      "properties": [
        {
          "name": "BuildName",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        },
        {
          "name": "ContainerFlavor",
          "jsontype": "String",
          "actualtype": "ContainerFlavor",
          "isenum": true,
          "optional": true
        },
        {
          "name": "GameAssetReferences",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "AssetReferenceParams",
          "isclass": true,
          "optional": false
        },
        {
          "name": "GameCertificateReferences",
          "collection": "array",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "MappedPorts",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "Port",
          "isclass": true,
          "optional": false
        },
        {
          "name": "Metadata",
          "collection": "map",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "MultiplayerServerCountPerVm",
          "jsontype": "Number",
          "actualtype": "int32",
          "optional": false
        },
        {
          "name": "RegionConfiguration",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "BuildRegionParams",
          "isclass": true,
          "optional": false
        },
        {
          "name": "StartGameCommand",
          "description": "The command that is used to start the game server application, including any arguments",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        },
        {
          "name": "VmSize",
          "jsontype": "String",
          "actualtype": "AzureVmSize",
          "isenum": true,
          "optional": true
        }
      ]
    },
    "CreateMatchmakingTicketRequest": {
      "name": "CreateMatchmakingTicketRequest",
      "className": "CreateMatchmakingTicketRequest",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isRequest": true,
      "properties": [
        {
          "name": "Creator",
          "description": "The User who created this ticket.",
          "jsontype": "Object",
          "actualtype": "MatchmakingPlayer",
          "isclass": true,
          "optional": false
        },
        {
          "name": "Entity",
          "description": "The entity to perform this action on.",
          "jsontype": "Object",
          "actualtype": "EntityKey",
          "isclass": true,
          "optional": true
        },
        {
          "name": "GiveUpAfterSeconds",
          "description": "How long to attempt matching this ticket in seconds.",
          "jsontype": "Number",
          "actualtype": "int32",
          "optional": false
        },
        {
          "name": "MembersToMatchWith",
          "description": "A list of Entity Keys of other users to match with.",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "EntityKey",
          "isclass": true,
          "optional": true
        },
        {
          "name": "QueueName",
          "description": "The Id of a match queue.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        }
      ]
    },
    "CreateMatchmakingTicketResult": {
      "name": "CreateMatchmakingTicketResult",
      "className": "CreateMatchmakingTicketResult",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isResult": true,
      "properties": [
        {
          "name": "TicketId",
          "description": "The Id of the ticket to find a match for.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        }
      ]
    },
    "CreateRemoteUserRequest": {
      "name": "CreateRemoteUserRequest",
      "className": "CreateRemoteUserRequest",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isRequest": true,
      "properties": [
        {
          "name": "BuildId",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        },
        {
          "name": "ExpirationTime",
          "description": "The expiration time for the remote user created. Defaults to expiring in one day if not specified.",
          "jsontype": "String",
          "actualtype": "DateTime",
          "optional": true
        },
        {
          "name": "Password",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        },
        {
          "name": "Region",
          "jsontype": "String",
          "actualtype": "AzureRegion",
          "isenum": true,
          "optional": false
        },
        {
          "name": "Username",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        },
        {
          "name": "VmId",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        }
      ]
    },
    "CreateRemoteUserResponse": {
      "name": "CreateRemoteUserResponse",
      "className": "CreateRemoteUserResponse",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isResult": true,
      "properties": []
    },
    "CreateServerMatchmakingTicketRequest": {
      "name": "CreateServerMatchmakingTicketRequest",
      "className": "CreateServerMatchmakingTicketRequest",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isRequest": true,
      "properties": [
        {
          "name": "Entity",
          "description": "The entity to perform this action on.",
          "jsontype": "Object",
          "actualtype": "EntityKey",
          "isclass": true,
          "optional": true
        },
        {
          "name": "GiveUpAfterSeconds",
          "description": "How long to attempt matching this ticket in seconds.",
          "jsontype": "Number",
          "actualtype": "int32",
          "optional": false
        },
        {
          "name": "Members",
          "description": "The users who will be part of this ticket.",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "MatchmakingPlayer",
          "isclass": true,
          "optional": false
        },
        {
          "name": "QueueName",
          "description": "The Id of a match queue.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        }
      ]
    },
    "DeleteBuildRequest": {
      "name": "DeleteBuildRequest",
      "className": "DeleteBuildRequest",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isRequest": true,
      "properties": [
        {
          "name": "BuildId",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        }
      ]
    },
    "DeleteBuildResponse": {
      "name": "DeleteBuildResponse",
      "className": "DeleteBuildResponse",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isResult": true,
      "properties": []
    },
    "DeleteRemoteUserRequest": {
      "name": "DeleteRemoteUserRequest",
      "className": "DeleteRemoteUserRequest",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isRequest": true,
      "properties": [
        {
          "name": "BuildId",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        },
        {
          "name": "Region",
          "jsontype": "String",
          "actualtype": "AzureRegion",
          "isenum": true,
          "optional": false
        },
        {
          "name": "Username",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        },
        {
          "name": "VmId",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        }
      ]
    },
    "DeleteRemoteUserResponse": {
      "name": "DeleteRemoteUserResponse",
      "className": "DeleteRemoteUserResponse",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isResult": true,
      "properties": []
    },
    "DisableMultiplayerServersForTitleRequest": {
      "name": "DisableMultiplayerServersForTitleRequest",
      "className": "DisableMultiplayerServersForTitleRequest",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isRequest": true,
      "properties": []
    },
    "DisableMultiplayerServersForTitleResponse": {
      "name": "DisableMultiplayerServersForTitleResponse",
      "className": "DisableMultiplayerServersForTitleResponse",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isResult": true,
      "properties": []
    },
    "EnableMultiplayerServersForTitleRequest": {
      "name": "EnableMultiplayerServersForTitleRequest",
      "className": "EnableMultiplayerServersForTitleRequest",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isRequest": true,
      "properties": []
    },
    "EnableMultiplayerServersForTitleResponse": {
      "name": "EnableMultiplayerServersForTitleResponse",
      "className": "EnableMultiplayerServersForTitleResponse",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isResult": true,
      "properties": [
        {
          "name": "Status",
          "jsontype": "String",
          "actualtype": "MultiplayerServerEnabledStatus",
          "isenum": true,
          "optional": true
        }
      ]
    },
    "EntityKey": {
      "name": "EntityKey",
      "className": "EntityKey",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "description": "Entity identifier class that contains both the ID and type.",
      "properties": [
        {
          "name": "Id",
          "description": "Entity profile ID.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        },
        {
          "name": "Type",
          "description": "Entity type. See https://api.playfab.com/docs/tutorials/entities/entitytypes",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        }
      ]
    },
    "EntityTypes": {
      "name": "EntityTypes",
      "className": "EntityTypes",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isenum": true,
      "enumvalues": [
        {
          "name": "title"
        },
        {
          "name": "master_player_account"
        },
        {
          "name": "title_player_account"
        },
        {
          "name": "character"
        },
        {
          "name": "group"
        },
        {
          "name": "service"
        }
      ]
    },
    "GetAssetUploadUrlRequest": {
      "name": "GetAssetUploadUrlRequest",
      "className": "GetAssetUploadUrlRequest",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isRequest": true,
      "properties": [
        {
          "name": "Metadata",
          "collection": "map",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "Name",
          "description": "The asset's file name and associated metadata.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        }
      ]
    },
    "GetAssetUploadUrlResponse": {
      "name": "GetAssetUploadUrlResponse",
      "className": "GetAssetUploadUrlResponse",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isResult": true,
      "properties": [
        {
          "name": "AssetUploadUrl",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "Metadata",
          "collection": "map",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "Name",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "GetBuildRequest": {
      "name": "GetBuildRequest",
      "className": "GetBuildRequest",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isRequest": true,
      "properties": [
        {
          "name": "BuildId",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        }
      ]
    },
    "GetBuildResponse": {
      "name": "GetBuildResponse",
      "className": "GetBuildResponse",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isResult": true,
      "properties": [
        {
          "name": "BuildSummary",
          "jsontype": "Object",
          "actualtype": "BuildSummary",
          "isclass": true,
          "optional": true
        }
      ]
    },
    "GetMatchmakingTicketRequest": {
      "name": "GetMatchmakingTicketRequest",
      "className": "GetMatchmakingTicketRequest",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isRequest": true,
      "properties": [
        {
          "name": "Entity",
          "description": "The entity to perform this action on.",
          "jsontype": "Object",
          "actualtype": "EntityKey",
          "isclass": true,
          "optional": true
        },
        {
          "name": "EscapeObject",
          "description": "Determines whether the matchmaking attributes will be returned as an escaped JSON string or as an un-escaped JSON object.",
          "jsontype": "Boolean",
          "actualtype": "Boolean",
          "optional": false
        },
        {
          "name": "QueueName",
          "description": "The Id of the queue to find a match for.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        },
        {
          "name": "TicketId",
          "description": "The Id of the ticket to find a match for.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        }
      ]
    },
    "GetMatchmakingTicketResult": {
      "name": "GetMatchmakingTicketResult",
      "className": "GetMatchmakingTicketResult",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isResult": true,
      "properties": [
        {
          "name": "CancellationReason",
          "description": "The reason why the current ticket was canceled. This field is only set if the ticket is in canceled state.",
          "jsontype": "String",
          "actualtype": "CancellationReason",
          "isenum": true,
          "optional": true
        },
        {
          "name": "Created",
          "description": "The server date and time at which ticket was created.",
          "jsontype": "String",
          "actualtype": "DateTime",
          "optional": false
        },
        {
          "name": "Creator",
          "description": "The Creator's entity key.",
          "jsontype": "Object",
          "actualtype": "EntityKey",
          "isclass": true,
          "optional": false
        },
        {
          "name": "GiveUpAfterSeconds",
          "description": "How long to attempt matching this ticket in seconds.",
          "jsontype": "Number",
          "actualtype": "int32",
          "optional": false
        },
        {
          "name": "MatchId",
          "description": "The Id of a match.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "Members",
          "description": "A list of Users that have joined this ticket.",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "MatchmakingPlayer",
          "isclass": true,
          "optional": false
        },
        {
          "name": "MembersToMatchWith",
          "description": "A list of PlayFab Ids of Users to match with.",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "EntityKey",
          "isclass": true,
          "optional": true
        },
        {
          "name": "QueueName",
          "description": "The Id of a match queue.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        },
        {
          "name": "Status",
          "description": "The current ticket status.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        },
        {
          "name": "TicketId",
          "description": "The Id of the ticket to find a match for.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        }
      ]
    },
    "GetMatchRequest": {
      "name": "GetMatchRequest",
      "className": "GetMatchRequest",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isRequest": true,
      "properties": [
        {
          "name": "Entity",
          "description": "The entity to perform this action on.",
          "jsontype": "Object",
          "actualtype": "EntityKey",
          "isclass": true,
          "optional": true
        },
        {
          "name": "EscapeObject",
          "description": "Determines whether the matchmaking attributes will be returned as an escaped JSON string or as an un-escaped JSON object.",
          "jsontype": "Boolean",
          "actualtype": "Boolean",
          "optional": false
        },
        {
          "name": "MatchId",
          "description": "The Id of a match.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        },
        {
          "name": "QueueName",
          "description": "The Id of the queue to join.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        }
      ]
    },
    "GetMatchResult": {
      "name": "GetMatchResult",
      "className": "GetMatchResult",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isResult": true,
      "properties": [
        {
          "name": "MatchId",
          "description": "The Id of a match.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        },
        {
          "name": "Members",
          "description": "A list of Users that are matched together, along with their team assignments.",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "MatchmakingPlayerWithTeamAssignment",
          "isclass": true,
          "optional": false
        }
      ]
    },
    "GetMultiplayerServerDetailsRequest": {
      "name": "GetMultiplayerServerDetailsRequest",
      "className": "GetMultiplayerServerDetailsRequest",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isRequest": true,
      "properties": [
        {
          "name": "BuildId",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        },
        {
          "name": "Region",
          "jsontype": "String",
          "actualtype": "AzureRegion",
          "isenum": true,
          "optional": false
        },
        {
          "name": "SessionId",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        }
      ]
    },
    "GetMultiplayerServerDetailsResponse": {
      "name": "GetMultiplayerServerDetailsResponse",
      "className": "GetMultiplayerServerDetailsResponse",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isResult": true,
      "properties": [
        {
          "name": "ConnectedPlayers",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "ConnectedPlayer",
          "isclass": true,
          "optional": true
        },
        {
          "name": "IPv4Address",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "Ports",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "Port",
          "isclass": true,
          "optional": true
        },
        {
          "name": "Region",
          "jsontype": "String",
          "actualtype": "AzureRegion",
          "isenum": true,
          "optional": true
        },
        {
          "name": "ServerId",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "SessionId",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "State",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "VmId",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "GetMultiplayerServerLogsRequest": {
      "name": "GetMultiplayerServerLogsRequest",
      "className": "GetMultiplayerServerLogsRequest",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isRequest": true,
      "properties": [
        {
          "name": "BuildId",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        },
        {
          "name": "Region",
          "jsontype": "String",
          "actualtype": "AzureRegion",
          "isenum": true,
          "optional": false
        },
        {
          "name": "ServerId",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        }
      ]
    },
    "GetMultiplayerServerLogsResponse": {
      "name": "GetMultiplayerServerLogsResponse",
      "className": "GetMultiplayerServerLogsResponse",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isResult": true,
      "properties": [
        {
          "name": "LogDownloadUri",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "GetRemoteLoginEndpointRequest": {
      "name": "GetRemoteLoginEndpointRequest",
      "className": "GetRemoteLoginEndpointRequest",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isRequest": true,
      "properties": [
        {
          "name": "BuildId",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        },
        {
          "name": "Region",
          "jsontype": "String",
          "actualtype": "AzureRegion",
          "isenum": true,
          "optional": false
        },
        {
          "name": "VmId",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        }
      ]
    },
    "GetRemoteLoginEndpointResponse": {
      "name": "GetRemoteLoginEndpointResponse",
      "className": "GetRemoteLoginEndpointResponse",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isResult": true,
      "properties": [
        {
          "name": "IpV4Address",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "Port",
          "jsontype": "Number",
          "actualtype": "int32",
          "optional": false
        }
      ]
    },
    "GetTitleEnabledForMultiplayerServersStatusRequest": {
      "name": "GetTitleEnabledForMultiplayerServersStatusRequest",
      "className": "GetTitleEnabledForMultiplayerServersStatusRequest",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isRequest": true,
      "properties": []
    },
    "GetTitleEnabledForMultiplayerServersStatusResponse": {
      "name": "GetTitleEnabledForMultiplayerServersStatusResponse",
      "className": "GetTitleEnabledForMultiplayerServersStatusResponse",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isResult": true,
      "properties": [
        {
          "name": "Status",
          "jsontype": "String",
          "actualtype": "MultiplayerServerEnabledStatus",
          "isenum": true,
          "optional": true
        }
      ]
    },
    "JoinMatchmakingTicketRequest": {
      "name": "JoinMatchmakingTicketRequest",
      "className": "JoinMatchmakingTicketRequest",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isRequest": true,
      "properties": [
        {
          "name": "Entity",
          "description": "The entity to perform this action on.",
          "jsontype": "Object",
          "actualtype": "EntityKey",
          "isclass": true,
          "optional": true
        },
        {
          "name": "Member",
          "description": "The User who wants to join the ticket. Their Id must be listed in PlayFabIdsToMatchWith.",
          "jsontype": "Object",
          "actualtype": "MatchmakingPlayer",
          "isclass": true,
          "optional": false
        },
        {
          "name": "QueueName",
          "description": "The Id of the queue to join.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        },
        {
          "name": "TicketId",
          "description": "The Id of the ticket to find a match for.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        }
      ]
    },
    "JoinMatchmakingTicketResult": {
      "name": "JoinMatchmakingTicketResult",
      "className": "JoinMatchmakingTicketResult",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isResult": true,
      "properties": []
    },
    "ListAssetsRequest": {
      "name": "ListAssetsRequest",
      "className": "ListAssetsRequest",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isRequest": true,
      "properties": [
        {
          "name": "NumItems",
          "jsontype": "Number",
          "actualtype": "int32",
          "optional": true
        },
        {
          "name": "SkipToken",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "ListAssetsResponse": {
      "name": "ListAssetsResponse",
      "className": "ListAssetsResponse",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isResult": true,
      "properties": [
        {
          "name": "AssetSummaries",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "AssetSummary",
          "isclass": true,
          "optional": true
        },
        {
          "name": "NumItems",
          "jsontype": "Number",
          "actualtype": "int32",
          "optional": false
        },
        {
          "name": "SkipToken",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "ListBuildsRequest": {
      "name": "ListBuildsRequest",
      "className": "ListBuildsRequest",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isRequest": true,
      "properties": [
        {
          "name": "NumItems",
          "jsontype": "Number",
          "actualtype": "int32",
          "optional": true
        },
        {
          "name": "SkipToken",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "ListBuildsResponse": {
      "name": "ListBuildsResponse",
      "className": "ListBuildsResponse",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isResult": true,
      "properties": [
        {
          "name": "BuildSummaries",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "BuildSummary",
          "isclass": true,
          "optional": true
        },
        {
          "name": "NumItems",
          "jsontype": "Number",
          "actualtype": "int32",
          "optional": false
        },
        {
          "name": "SkipToken",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "ListCertificatesRequest": {
      "name": "ListCertificatesRequest",
      "className": "ListCertificatesRequest",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isRequest": true,
      "properties": [
        {
          "name": "NumItems",
          "jsontype": "Number",
          "actualtype": "int32",
          "optional": true
        },
        {
          "name": "SkipToken",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "ListCertificatesResponse": {
      "name": "ListCertificatesResponse",
      "className": "ListCertificatesResponse",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isResult": true,
      "properties": [
        {
          "name": "CertificateSummaries",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "CertificateSummary",
          "isclass": true,
          "optional": true
        },
        {
          "name": "NumItems",
          "jsontype": "Number",
          "actualtype": "int32",
          "optional": false
        },
        {
          "name": "SkipToken",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "ListMultiplayerServersRequest": {
      "name": "ListMultiplayerServersRequest",
      "className": "ListMultiplayerServersRequest",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isRequest": true,
      "properties": [
        {
          "name": "BuildId",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        },
        {
          "name": "NumItems",
          "jsontype": "Number",
          "actualtype": "int32",
          "optional": true
        },
        {
          "name": "Region",
          "jsontype": "String",
          "actualtype": "AzureRegion",
          "isenum": true,
          "optional": false
        },
        {
          "name": "SkipToken",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "ListMultiplayerServersResponse": {
      "name": "ListMultiplayerServersResponse",
      "className": "ListMultiplayerServersResponse",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isResult": true,
      "properties": [
        {
          "name": "MultiplayerServerSummaries",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "MultiplayerServerSummary",
          "isclass": true,
          "optional": true
        },
        {
          "name": "NumItems",
          "jsontype": "Number",
          "actualtype": "int32",
          "optional": false
        },
        {
          "name": "SkipToken",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "ListQosServersRequest": {
      "name": "ListQosServersRequest",
      "className": "ListQosServersRequest",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isRequest": true,
      "properties": [
        {
          "name": "NumItems",
          "jsontype": "Number",
          "actualtype": "int32",
          "optional": true
        },
        {
          "name": "SkipToken",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "ListQosServersResponse": {
      "name": "ListQosServersResponse",
      "className": "ListQosServersResponse",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isResult": true,
      "properties": [
        {
          "name": "NumItems",
          "jsontype": "Number",
          "actualtype": "int32",
          "optional": false
        },
        {
          "name": "QosServers",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "QosServer",
          "isclass": true,
          "optional": true
        },
        {
          "name": "SkipToken",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "ListVirtualMachinesRequest": {
      "name": "ListVirtualMachinesRequest",
      "className": "ListVirtualMachinesRequest",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isRequest": true,
      "properties": [
        {
          "name": "BuildId",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        },
        {
          "name": "NumItems",
          "jsontype": "Number",
          "actualtype": "int32",
          "optional": true
        },
        {
          "name": "Region",
          "jsontype": "String",
          "actualtype": "AzureRegion",
          "isenum": true,
          "optional": false
        },
        {
          "name": "SkipToken",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "ListVirtualMachinesResponse": {
      "name": "ListVirtualMachinesResponse",
      "className": "ListVirtualMachinesResponse",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isResult": true,
      "properties": [
        {
          "name": "NumItems",
          "jsontype": "Number",
          "actualtype": "int32",
          "optional": false
        },
        {
          "name": "SkipToken",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "VirtualMachines",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "VirtualMachine",
          "isclass": true,
          "optional": true
        }
      ]
    },
    "MatchmakingPlayer": {
      "name": "MatchmakingPlayer",
      "className": "MatchmakingPlayer",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "description": "A user in a matchmaking ticket.",
      "properties": [
        {
          "name": "Attributes",
          "description": "The user's attributes custom to the title.",
          "jsontype": "Object",
          "actualtype": "MatchmakingPlayerAttributes",
          "isclass": true,
          "optional": true
        },
        {
          "name": "Entity",
          "description": "The entity key of the matchmaking user.",
          "jsontype": "Object",
          "actualtype": "EntityKey",
          "isclass": true,
          "optional": false
        }
      ]
    },
    "MatchmakingPlayerAttributes": {
      "name": "MatchmakingPlayerAttributes",
      "className": "MatchmakingPlayerAttributes",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "description": "The matchmaking attributes for a user.",
      "properties": [
        {
          "name": "DataObject",
          "description": "A data object representing a user's attributes.",
          "jsontype": "Object",
          "actualtype": "object",
          "optional": true
        },
        {
          "name": "EscapedDataObject",
          "description": "An escaped data object representing a user's attributes.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "MatchmakingPlayerWithTeamAssignment": {
      "name": "MatchmakingPlayerWithTeamAssignment",
      "className": "MatchmakingPlayerWithTeamAssignment",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "description": "A player in a created matchmaking match with a team assignment.",
      "properties": [
        {
          "name": "Entity",
          "description": "The entity key of the matchmaking user.",
          "jsontype": "Object",
          "actualtype": "EntityKey",
          "isclass": true,
          "optional": false
        },
        {
          "name": "TeamId",
          "description": "The Id of the team the User has been assigned to by matchmaking.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "MultiplayerServerEnabledStatus": {
      "name": "MultiplayerServerEnabledStatus",
      "className": "MultiplayerServerEnabledStatus",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isenum": true,
      "enumvalues": [
        {
          "name": "Initializing"
        },
        {
          "name": "Enabled"
        },
        {
          "name": "Disabled"
        }
      ]
    },
    "MultiplayerServerSummary": {
      "name": "MultiplayerServerSummary",
      "className": "MultiplayerServerSummary",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "properties": [
        {
          "name": "ConnectedPlayers",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "ConnectedPlayer",
          "isclass": true,
          "optional": true
        },
        {
          "name": "Region",
          "jsontype": "String",
          "actualtype": "AzureRegion",
          "isenum": true,
          "optional": true
        },
        {
          "name": "ServerId",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "State",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "VmId",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "Port": {
      "name": "Port",
      "className": "Port",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "properties": [
        {
          "name": "Name",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        },
        {
          "name": "Num",
          "jsontype": "Number",
          "actualtype": "int32",
          "optional": false
        },
        {
          "name": "Protocol",
          "jsontype": "String",
          "actualtype": "ProtocolType",
          "isenum": true,
          "optional": false
        }
      ]
    },
    "ProtocolType": {
      "name": "ProtocolType",
      "className": "ProtocolType",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isenum": true,
      "enumvalues": [
        {
          "name": "TCP"
        },
        {
          "name": "UDP"
        }
      ]
    },
    "QosServer": {
      "name": "QosServer",
      "className": "QosServer",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "properties": [
        {
          "name": "Region",
          "jsontype": "String",
          "actualtype": "AzureRegion",
          "isenum": true,
          "optional": true
        },
        {
          "name": "ServerUrl",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "RequestMultiplayerServerRequest": {
      "name": "RequestMultiplayerServerRequest",
      "className": "RequestMultiplayerServerRequest",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isRequest": true,
      "properties": [
        {
          "name": "BuildId",
          "description": "BuildId to allocate against, must be a GUID.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        },
        {
          "name": "PreferredRegions",
          "collection": "array",
          "jsontype": "String",
          "actualtype": "AzureRegion",
          "isenum": true,
          "optional": false
        },
        {
          "name": "SessionCookie",
          "description": "Data encoded as a string that is passed to the game server when allocated. This can be used to share a cryptographic secret for servers to authenticate clients, or to communication information such as game mode or map through the allocation flow.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "SessionId",
          "description": "An identifer you create to track the session over its life. Must be a GUID.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        }
      ]
    },
    "RequestMultiplayerServerResponse": {
      "name": "RequestMultiplayerServerResponse",
      "className": "RequestMultiplayerServerResponse",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isResult": true,
      "properties": [
        {
          "name": "ConnectedPlayers",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "ConnectedPlayer",
          "isclass": true,
          "optional": true
        },
        {
          "name": "IPv4Address",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "Ports",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "Port",
          "isclass": true,
          "optional": true
        },
        {
          "name": "Region",
          "jsontype": "String",
          "actualtype": "AzureRegion",
          "isenum": true,
          "optional": true
        },
        {
          "name": "ServerId",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "SessionId",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "State",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "VmId",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "ShutdownMultiplayerServerRequest": {
      "name": "ShutdownMultiplayerServerRequest",
      "className": "ShutdownMultiplayerServerRequest",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isRequest": true,
      "properties": [
        {
          "name": "BuildId",
          "description": "BuildID of the session host to be deleted, must be a GUID.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        },
        {
          "name": "Region",
          "jsontype": "String",
          "actualtype": "AzureRegion",
          "isenum": true,
          "optional": false
        },
        {
          "name": "SessionId",
          "description": "SessionID of the session host to be deleted, must be a GUID.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        }
      ]
    },
    "ShutdownMultiplayerServerResponse": {
      "name": "ShutdownMultiplayerServerResponse",
      "className": "ShutdownMultiplayerServerResponse",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isResult": true,
      "properties": []
    },
    "UpdateBuildRegionsRequest": {
      "name": "UpdateBuildRegionsRequest",
      "className": "UpdateBuildRegionsRequest",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isRequest": true,
      "properties": [
        {
          "name": "BuildId",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        },
        {
          "name": "BuildRegions",
          "description": "The updated region configuration that should be applied to the specified build.",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "BuildRegionParams",
          "isclass": true,
          "optional": false
        }
      ]
    },
    "UpdateBuildRegionsResponse": {
      "name": "UpdateBuildRegionsResponse",
      "className": "UpdateBuildRegionsResponse",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isResult": true,
      "properties": []
    },
    "UploadCertificateRequest": {
      "name": "UploadCertificateRequest",
      "className": "UploadCertificateRequest",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isRequest": true,
      "properties": [
        {
          "name": "GameCertificate",
          "jsontype": "Object",
          "actualtype": "Certificate",
          "isclass": true,
          "optional": false
        }
      ]
    },
    "UploadCertificateResponse": {
      "name": "UploadCertificateResponse",
      "className": "UploadCertificateResponse",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isResult": true,
      "properties": []
    },
    "VirtualMachine": {
      "name": "VirtualMachine",
      "className": "VirtualMachine",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "properties": [
        {
          "name": "State",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "VmId",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    }
  },
  "subgroups": [
    {
      "name": "GameServer",
      "methods": [
        "CreateBuildWithCustomContainer",
        "CreateBuildWithManagedContainer",
        "CreateRemoteUser",
        "DeleteBuild",
        "DeleteRemoteUser",
        "DisableMultiplayerServersForTitle",
        "EnableMultiplayerServersForTitle",
        "GetAssetUploadUrl",
        "GetBuild",
        "GetMultiplayerServerDetails",
        "GetMultiplayerServerLogs",
        "GetRemoteLoginEndpoint",
        "GetTitleEnabledForMultiplayerServersStatus",
        "ListAssets",
        "ListBuilds",
        "ListCertificates",
        "ListMultiplayerServers",
        "ListQosServers",
        "ListVirtualMachines",
        "RequestMultiplayerServer",
        "ShutdownMultiplayerServer",
        "UpdateBuildRegions",
        "UploadCertificate"
      ]
    },
    {
      "name": "Matchmaking",
      "methods": [
        "CancelMatchmakingTicket",
        "CreateMatchmakingTicket",
        "CreateServerMatchmakingTicket",
        "GetMatch",
        "GetMatchmakingTicket",
        "JoinMatchmakingTicket"
      ]
    }
  ],
  "calls": [
    {
      "name": "CancelMatchmakingTicket",
      "summary": "Cancel a matchmaking ticket.",
      "requestDetails": "Users can cancel a matchmaking ticket at anytime. Anyone in the matchmaking ticket can cancel it. We do not allow resubmitting a cancelled ticket because the players must consent to enter matchmaking again after the cancellation which is the same as creating a new ticket. The ticket can be in different states when it is cancelled: * The ticket has not started matching because not everyone has joined the ticket. If the ticket is cancelled, it will be deleted and never match. * The ticket is matching. If the ticket is cancelled, it will stop matching and it will be deleted. * The ticket has been matched. A matched ticket cannot be cancelled. There may be race conditions due to latency between the ticket being matched and the client being notified the match is ready. The client must handle the possibility that the cancel request may fail if the match has been made but the notification has not arrived.",
      "subgroup": "Matchmaking",
      "titleTiers": null,
      "url": "/Match/CancelMatchmakingTicket",
      "auth": "EntityToken",
      "method": "POST",
      "request": "CancelMatchmakingTicketRequest",
      "requestExample": "{\r\n  \"TicketId\": \"1c4b0daa-150e-47ae-9923-d770c0f9b07c\",\r\n  \"QueueName\": \"custom123\"\r\n}",
      "result": "CancelMatchmakingTicketResult",
      "resultExample": "{\r\n  \"code\": 200,\r\n  \"status\": \"OK\",\r\n  \"data\": {}\r\n}",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "errors": [
        "MatchmakingCancelTicketServerIdentityInvalid",
        "MatchmakingCancelTicketUserIdentityMismatch",
        "MatchmakingEntityInvalid",
        "MatchmakingQueueNameMissing",
        "MatchmakingTicketAlreadyCompleted",
        "MatchmakingTicketIdIdMissing",
        "MatchmakingTicketIdMissing",
        "MatchmakingTicketNotFound",
        "MatchmakingTitleIdMissing"
      ]
    },
    {
      "name": "CreateBuildWithCustomContainer",
      "subgroup": "GameServer",
      "titleTiers": null,
      "url": "/MultiplayerServer/CreateBuildWithCustomContainer",
      "auth": "EntityToken",
      "method": "POST",
      "request": "CreateBuildWithCustomContainerRequest",
      "requestExample": "",
      "result": "CreateBuildResponse",
      "resultExample": "",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "seeAlso": [
        "MultiplayerServer/CreateBuildWithManagedContainer",
        "MultiplayerServer/DeleteBuild",
        "MultiplayerServer/GetBuild",
        "MultiplayerServer/ListBuilds"
      ],
      "errors": [
        "GameServerBadRequest",
        "GameServerConflict",
        "GameServerForbidden",
        "GameServerInternalServerError",
        "GameServerOk",
        "GameServerUnauthorized"
      ]
    },
    {
      "name": "CreateBuildWithManagedContainer",
      "subgroup": "GameServer",
      "titleTiers": null,
      "url": "/MultiplayerServer/CreateBuildWithManagedContainer",
      "auth": "EntityToken",
      "method": "POST",
      "request": "CreateBuildWithManagedContainerRequest",
      "requestExample": "",
      "result": "CreateBuildResponse",
      "resultExample": "",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "seeAlso": [
        "MultiplayerServer/DeleteBuild",
        "MultiplayerServer/GetBuild",
        "MultiplayerServer/ListBuilds"
      ],
      "errors": [
        "GameServerBadRequest",
        "GameServerConflict",
        "GameServerForbidden",
        "GameServerInternalServerError",
        "GameServerOk",
        "GameServerUnauthorized"
      ]
    },
    {
      "name": "CreateMatchmakingTicket",
      "summary": "Create a matchmaking ticket as a client.",
      "requestDetails": "The client specifies the creator's attributes and optionally a list of other users to match with.",
      "subgroup": "Matchmaking",
      "titleTiers": null,
      "url": "/Match/CreateMatchmakingTicket",
      "auth": "EntityToken",
      "method": "POST",
      "request": "CreateMatchmakingTicketRequest",
      "requestExample": "{\r\n  \"Creator\": {},\r\n  \"MembersToMatchWith\": [],\r\n  \"GiveUpAfterSeconds\": 100,\r\n  \"QueueName\": \"custom123\"\r\n}",
      "result": "CreateMatchmakingTicketResult",
      "resultExample": "{\r\n  \"code\": 200,\r\n  \"status\": \"OK\",\r\n  \"data\": {\r\n    \"TicketId\": \"1c4b0daa-150e-47ae-9923-d770c0f9b07c\"\r\n  }\r\n}",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "errors": [
        "MatchmakingCreateRequestCreatorIdMissing",
        "MatchmakingCreateRequestCreatorMissing",
        "MatchmakingCreateRequestGiveUpAfterInvalid",
        "MatchmakingCreateRequestMissing",
        "MatchmakingCreateTicketClientIdentityInvalid",
        "MatchmakingEntityInvalid",
        "MatchmakingPlayerAttributesInvalid",
        "MatchmakingPlayerIdentityMismatch",
        "MatchmakingPlayerIdMissing",
        "MatchmakingQueueNameMissing",
        "MatchmakingTicketIdMissing",
        "MatchmakingTitleIdMissing"
      ]
    },
    {
      "name": "CreateRemoteUser",
      "subgroup": "GameServer",
      "titleTiers": null,
      "url": "/MultiplayerServer/CreateRemoteUser",
      "auth": "EntityToken",
      "method": "POST",
      "request": "CreateRemoteUserRequest",
      "requestExample": "",
      "result": "CreateRemoteUserResponse",
      "resultExample": "",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "seeAlso": [
        "MultiplayerServer/DeleteRemoteUser",
        "MultiplayerServer/GetRemoteLoginEndpoint"
      ],
      "errors": [
        "GameServerAccepted",
        "GameServerBadRequest",
        "GameServerConflict",
        "GameServerForbidden",
        "GameServerInternalServerError",
        "GameServerNoContent",
        "GameServerNotFound",
        "GameServerOk",
        "GameServerServiceUnavailable",
        "GameServerUnauthorized"
      ]
    },
    {
      "name": "CreateServerMatchmakingTicket",
      "summary": "Create a matchmaking ticket as a server.",
      "requestDetails": "The server specifies all the creators and their attributes.",
      "subgroup": "Matchmaking",
      "titleTiers": null,
      "url": "/Match/CreateServerMatchmakingTicket",
      "auth": "EntityToken",
      "method": "POST",
      "request": "CreateServerMatchmakingTicketRequest",
      "requestExample": "{\r\n  \"Members\": [],\r\n  \"GiveUpAfterSeconds\": 100,\r\n  \"QueueName\": \"custom123\"\r\n}",
      "result": "CreateMatchmakingTicketResult",
      "resultExample": "{\r\n  \"code\": 200,\r\n  \"status\": \"OK\",\r\n  \"data\": {\r\n    \"TicketId\": \"1c4b0daa-150e-47ae-9923-d770c0f9b07c\"\r\n  }\r\n}",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "errors": [
        "MatchmakingCreateRequestGiveUpAfterInvalid",
        "MatchmakingCreateRequestUserListMissing",
        "MatchmakingCreateTicketServerIdentityInvalid",
        "MatchmakingEntityInvalid",
        "MatchmakingMemberProfileInvalid",
        "MatchmakingPlayerAttributesInvalid",
        "MatchmakingPlayerIdMissing",
        "MatchmakingQueueNameMissing",
        "MatchmakingTicketIdMissing",
        "MatchmakingTitleIdMissing"
      ]
    },
    {
      "name": "DeleteBuild",
      "subgroup": "GameServer",
      "titleTiers": null,
      "url": "/MultiplayerServer/DeleteBuild",
      "auth": "EntityToken",
      "method": "POST",
      "request": "DeleteBuildRequest",
      "requestExample": "",
      "result": "DeleteBuildResponse",
      "resultExample": "",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "seeAlso": [
        "MultiplayerServer/CreateBuildWithManagedContainer",
        "MultiplayerServer/GetBuild",
        "MultiplayerServer/ListBuilds"
      ],
      "errors": [
        "GameServerAccepted",
        "GameServerConflict",
        "GameServerForbidden",
        "GameServerInternalServerError",
        "GameServerNotFound",
        "GameServerUnauthorized"
      ]
    },
    {
      "name": "DeleteRemoteUser",
      "subgroup": "GameServer",
      "titleTiers": null,
      "url": "/MultiplayerServer/DeleteRemoteUser",
      "auth": "EntityToken",
      "method": "POST",
      "request": "DeleteRemoteUserRequest",
      "requestExample": "",
      "result": "DeleteRemoteUserResponse",
      "resultExample": "",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "seeAlso": [
        "MultiplayerServer/CreateRemoteUser",
        "MultiplayerServer/GetRemoteLoginEndpoint"
      ],
      "errors": [
        "GameServerAccepted",
        "GameServerBadRequest",
        "GameServerConflict",
        "GameServerForbidden",
        "GameServerInternalServerError",
        "GameServerNoContent",
        "GameServerNotFound",
        "GameServerOk",
        "GameServerServiceUnavailable",
        "GameServerUnauthorized"
      ]
    },
    {
      "name": "DisableMultiplayerServersForTitle",
      "subgroup": "GameServer",
      "titleTiers": null,
      "url": "/MultiplayerServer/DisableMultiplayerServersForTitle",
      "auth": "EntityToken",
      "method": "POST",
      "request": "DisableMultiplayerServersForTitleRequest",
      "requestExample": "",
      "result": "DisableMultiplayerServersForTitleResponse",
      "resultExample": "",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "seeAlso": [
        "MultiplayerServer/EnableMultiplayerServersForTitle",
        "MultiplayerServer/GetTitleEnabledForMultiplayerServersStatus"
      ],
      "errors": [
        "GameServerBadRequest",
        "GameServerForbidden",
        "GameServerInternalServerError",
        "GameServerOk",
        "GameServerUnauthorized"
      ]
    },
    {
      "name": "EnableMultiplayerServersForTitle",
      "subgroup": "GameServer",
      "titleTiers": null,
      "url": "/MultiplayerServer/EnableMultiplayerServersForTitle",
      "auth": "EntityToken",
      "method": "POST",
      "request": "EnableMultiplayerServersForTitleRequest",
      "requestExample": "",
      "result": "EnableMultiplayerServersForTitleResponse",
      "resultExample": "",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "seeAlso": [
        "MultiplayerServer/DisableMultiplayerServersForTitle",
        "MultiplayerServer/GetTitleEnabledForMultiplayerServersStatus"
      ],
      "errors": [
        "GameServerBadRequest",
        "GameServerForbidden",
        "GameServerInternalServerError",
        "GameServerOk",
        "GameServerUnauthorized"
      ]
    },
    {
      "name": "GetAssetUploadUrl",
      "subgroup": "GameServer",
      "titleTiers": null,
      "url": "/MultiplayerServer/GetAssetUploadUrl",
      "auth": "EntityToken",
      "method": "POST",
      "request": "GetAssetUploadUrlRequest",
      "requestExample": "{\r\n  \"Name\": \"gameserver.zip\",\r\n  \"Metadata\": {\r\n    \"AssetData1\": \"SomeData\"\r\n  }\r\n}",
      "result": "GetAssetUploadUrlResponse",
      "resultExample": "",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "seeAlso": [
        "MultiplayerServer/ListAssets",
        "MultiplayerServer/ListCertificates",
        "MultiplayerServer/UploadCertificate"
      ],
      "errors": [
        "GameServerAccepted",
        "GameServerBadRequest",
        "GameServerConflict",
        "GameServerForbidden",
        "GameServerInternalServerError",
        "GameServerNoContent",
        "GameServerNotFound",
        "GameServerOk",
        "GameServerServiceUnavailable",
        "GameServerUnauthorized"
      ]
    },
    {
      "name": "GetBuild",
      "subgroup": "GameServer",
      "titleTiers": null,
      "url": "/MultiplayerServer/GetBuild",
      "auth": "EntityToken",
      "method": "POST",
      "request": "GetBuildRequest",
      "requestExample": "",
      "result": "GetBuildResponse",
      "resultExample": "",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "seeAlso": [
        "MultiplayerServer/CreateBuildWithManagedContainer",
        "MultiplayerServer/DeleteBuild",
        "MultiplayerServer/ListBuilds"
      ],
      "errors": [
        "GameServerBadRequest",
        "GameServerConflict",
        "GameServerForbidden",
        "GameServerInternalServerError",
        "GameServerNotFound",
        "GameServerOk",
        "GameServerUnauthorized"
      ]
    },
    {
      "name": "GetMatch",
      "summary": "Get a match.",
      "requestDetails": "When matchmaking has successfully matched together a collection of tickets, it produces a 'match' with an ID. The match contains all of the players that were matched together, server connection information, etc. The match ID is usually sent to the matched players using the activity service. Only the players in the original ticket can get the match.",
      "subgroup": "Matchmaking",
      "titleTiers": null,
      "url": "/Match/GetMatch",
      "auth": "EntityToken",
      "method": "POST",
      "request": "GetMatchRequest",
      "requestExample": "{\r\n  \"MatchId\": \"4e0c5fd7-80e9-4744-b0ce-061a7f067ff5\",\r\n  \"QueueName\": \"custom123\",\r\n  \"EscapeObject\": false\r\n}",
      "result": "GetMatchResult",
      "resultExample": "{\r\n  \"code\": 200,\r\n  \"status\": \"OK\",\r\n  \"data\": {\r\n    \"MatchId\": \"4e0c5fd7-80e9-4744-b0ce-061a7f067ff5\",\r\n    \"Members\": []\r\n  }\r\n}",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "errors": [
        "MatchmakingEntityInvalid",
        "MatchmakingMatchIdIdMissing",
        "MatchmakingMatchIdMissing",
        "MatchmakingMatchNotFound",
        "MatchmakingQueueNameMissing",
        "MatchmakingTitleIdMissing"
      ]
    },
    {
      "name": "GetMatchmakingTicket",
      "summary": "Get a matchmaking ticket by ticket ID.",
      "requestDetails": "The ticket includes the players who have joined, their attributes, who still hasn't joined, etc. Only the ticket creator and invited players can get the ticket.",
      "subgroup": "Matchmaking",
      "titleTiers": null,
      "url": "/Match/GetMatchmakingTicket",
      "auth": "EntityToken",
      "method": "POST",
      "request": "GetMatchmakingTicketRequest",
      "requestExample": "{\r\n  \"TicketId\": \"1c4b0daa-150e-47ae-9923-d770c0f9b07c\",\r\n  \"QueueName\": \"custom123\",\r\n  \"EscapeObject\": false\r\n}",
      "result": "GetMatchmakingTicketResult",
      "resultExample": "{\r\n  \"code\": 200,\r\n  \"status\": \"OK\",\r\n  \"data\": {\r\n    \"TicketId\": \"1c4b0daa-150e-47ae-9923-d770c0f9b07c\",\r\n    \"QueueName\": \"custom123\",\r\n    \"MatchId\": \"4e0c5fd7-80e9-4744-b0ce-061a7f067ff5\",\r\n    \"Created\": \"2016-08-23T12:33:14Z\",\r\n    \"Status\": \"MATCHED\",\r\n    \"GiveUpAfterSeconds\": 100,\r\n    \"MembersToMatchWith\": [\r\n      {\r\n        \"Id\": \"123123123\",\r\n        \"TypeString\": \"title_player_acount\"\r\n      }\r\n    ],\r\n    \"Members\": [],\r\n    \"Creator\": {\r\n      \"Id\": \"123123123\",\r\n      \"TypeString\": \"title_player_acount\"\r\n    }\r\n  }\r\n}",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "errors": [
        "MatchmakingEntityInvalid",
        "MatchmakingGetMatchIdentityMismatch",
        "MatchmakingGetTicketUserMismatch",
        "MatchmakingQueueNameMissing",
        "MatchmakingTicketIdIdMissing",
        "MatchmakingTicketIdMissing",
        "MatchmakingTicketNotFound",
        "MatchmakingTitleIdMissing"
      ]
    },
    {
      "name": "GetMultiplayerServerDetails",
      "subgroup": "GameServer",
      "titleTiers": null,
      "url": "/MultiplayerServer/GetMultiplayerServerDetails",
      "auth": "EntityToken",
      "method": "POST",
      "request": "GetMultiplayerServerDetailsRequest",
      "requestExample": "",
      "result": "GetMultiplayerServerDetailsResponse",
      "resultExample": "",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "seeAlso": [
        "MultiplayerServer/RequestMultiplayerServer"
      ],
      "errors": [
        "GameServerBadRequest",
        "GameServerForbidden",
        "GameServerInternalServerError",
        "GameServerNotFound",
        "GameServerOk",
        "GameServerServiceUnavailable",
        "GameServerUnauthorized"
      ]
    },
    {
      "name": "GetMultiplayerServerLogs",
      "subgroup": "GameServer",
      "titleTiers": null,
      "url": "/MultiplayerServer/GetMultiplayerServerLogs",
      "auth": "EntityToken",
      "method": "POST",
      "request": "GetMultiplayerServerLogsRequest",
      "requestExample": "",
      "result": "GetMultiplayerServerLogsResponse",
      "resultExample": "",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "seeAlso": [
        "MultiplayerServer/GetMultiplayerServerDetails",
        "MultiplayerServer/RequestMultiplayerServer"
      ],
      "errors": [
        "GameServerAccepted",
        "GameServerBadRequest",
        "GameServerConflict",
        "GameServerForbidden",
        "GameServerInternalServerError",
        "GameServerNoContent",
        "GameServerNotFound",
        "GameServerOk",
        "GameServerServiceUnavailable",
        "GameServerUnauthorized"
      ]
    },
    {
      "name": "GetRemoteLoginEndpoint",
      "subgroup": "GameServer",
      "titleTiers": null,
      "url": "/MultiplayerServer/GetRemoteLoginEndpoint",
      "auth": "EntityToken",
      "method": "POST",
      "request": "GetRemoteLoginEndpointRequest",
      "requestExample": "",
      "result": "GetRemoteLoginEndpointResponse",
      "resultExample": "",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "seeAlso": [
        "MultiplayerServer/CreateRemoteUser"
      ],
      "errors": [
        "GameServerAccepted",
        "GameServerBadRequest",
        "GameServerConflict",
        "GameServerForbidden",
        "GameServerInternalServerError",
        "GameServerNoContent",
        "GameServerNotFound",
        "GameServerOk",
        "GameServerServiceUnavailable",
        "GameServerUnauthorized"
      ]
    },
    {
      "name": "GetTitleEnabledForMultiplayerServersStatus",
      "subgroup": "GameServer",
      "titleTiers": null,
      "url": "/MultiplayerServer/GetTitleEnabledForMultiplayerServersStatus",
      "auth": "EntityToken",
      "method": "POST",
      "request": "GetTitleEnabledForMultiplayerServersStatusRequest",
      "requestExample": "",
      "result": "GetTitleEnabledForMultiplayerServersStatusResponse",
      "resultExample": "",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "seeAlso": [
        "MultiplayerServer/DisableMultiplayerServersForTitle",
        "MultiplayerServer/EnableMultiplayerServersForTitle"
      ],
      "errors": [
        "GameServerBadRequest",
        "GameServerForbidden",
        "GameServerInternalServerError",
        "GameServerNotFound",
        "GameServerOk",
        "GameServerUnauthorized"
      ]
    },
    {
      "name": "JoinMatchmakingTicket",
      "summary": "Join a matchmaking ticket.",
      "requestDetails": "Add the user to a matchmaking ticket and specify all the user's matchmaking attributes. Users can only join a ticket if and only if they were 'invited' to join the ticket by the ticket creator in the CreateMatchmakingTicket call. The matchmaking service automatically starts matching the ticket against other matchmaking tickets once all players have joined the ticket. Therefore, it is not possible to join a ticket once it has started matching.",
      "subgroup": "Matchmaking",
      "titleTiers": null,
      "url": "/Match/JoinMatchmakingTicket",
      "auth": "EntityToken",
      "method": "POST",
      "request": "JoinMatchmakingTicketRequest",
      "requestExample": "{\r\n  \"TicketId\": \"1c4b0daa-150e-47ae-9923-d770c0f9b07c\",\r\n  \"QueueName\": \"custom123\",\r\n  \"Member\": {}\r\n}",
      "result": "JoinMatchmakingTicketResult",
      "resultExample": "{\r\n  \"code\": 200,\r\n  \"status\": \"OK\",\r\n  \"data\": {}\r\n}",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "errors": [
        "MatchmakingAlreadyJoinedTicket",
        "MatchmakingEntityInvalid",
        "MatchmakingJoinRequestUserMissing",
        "MatchmakingJoinTicketServerIdentityInvalid",
        "MatchmakingJoinTicketUserIdentityMismatch",
        "MatchmakingMemberProfileInvalid",
        "MatchmakingPlayerAttributesInvalid",
        "MatchmakingPlayerIdentityMismatch",
        "MatchmakingPlayerIdMissing",
        "MatchmakingQueueNameMissing",
        "MatchmakingTicketAlreadyCompleted",
        "MatchmakingTicketIdIdMissing",
        "MatchmakingTicketIdMissing",
        "MatchmakingTicketNotFound",
        "MatchmakingTitleIdMissing"
      ]
    },
    {
      "name": "ListAssets",
      "subgroup": "GameServer",
      "titleTiers": null,
      "url": "/MultiplayerServer/ListAssets",
      "auth": "EntityToken",
      "method": "POST",
      "request": "ListAssetsRequest",
      "requestExample": "",
      "result": "ListAssetsResponse",
      "resultExample": "",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "seeAlso": [
        "MultiplayerServer/GetAssetUploadUrl",
        "MultiplayerServer/ListCertificates",
        "MultiplayerServer/UploadCertificate"
      ],
      "errors": [
        "GameServerAccepted",
        "GameServerBadRequest",
        "GameServerConflict",
        "GameServerForbidden",
        "GameServerInternalServerError",
        "GameServerNoContent",
        "GameServerNotFound",
        "GameServerOk",
        "GameServerServiceUnavailable",
        "GameServerUnauthorized"
      ]
    },
    {
      "name": "ListBuilds",
      "subgroup": "GameServer",
      "titleTiers": null,
      "url": "/MultiplayerServer/ListBuilds",
      "auth": "EntityToken",
      "method": "POST",
      "request": "ListBuildsRequest",
      "requestExample": "",
      "result": "ListBuildsResponse",
      "resultExample": "",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "seeAlso": [
        "MultiplayerServer/CreateBuildWithManagedContainer",
        "MultiplayerServer/DeleteBuild",
        "MultiplayerServer/GetBuild"
      ],
      "errors": [
        "GameServerBadRequest",
        "GameServerForbidden",
        "GameServerInternalServerError",
        "GameServerNotFound",
        "GameServerOk",
        "GameServerUnauthorized"
      ]
    },
    {
      "name": "ListCertificates",
      "subgroup": "GameServer",
      "titleTiers": null,
      "url": "/MultiplayerServer/ListCertificates",
      "auth": "EntityToken",
      "method": "POST",
      "request": "ListCertificatesRequest",
      "requestExample": "",
      "result": "ListCertificatesResponse",
      "resultExample": "",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "seeAlso": [
        "MultiplayerServer/GetAssetUploadUrl",
        "MultiplayerServer/ListAssets",
        "MultiplayerServer/UploadCertificate"
      ],
      "errors": [
        "GameServerAccepted",
        "GameServerBadRequest",
        "GameServerConflict",
        "GameServerForbidden",
        "GameServerInternalServerError",
        "GameServerNoContent",
        "GameServerNotFound",
        "GameServerOk",
        "GameServerServiceUnavailable",
        "GameServerUnauthorized"
      ]
    },
    {
      "name": "ListMultiplayerServers",
      "subgroup": "GameServer",
      "titleTiers": null,
      "url": "/MultiplayerServer/ListMultiplayerServers",
      "auth": "EntityToken",
      "method": "POST",
      "request": "ListMultiplayerServersRequest",
      "requestExample": "",
      "result": "ListMultiplayerServersResponse",
      "resultExample": "",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "seeAlso": [
        "MultiplayerServer/RequestMultiplayerServer"
      ],
      "errors": [
        "GameServerBadRequest",
        "GameServerForbidden",
        "GameServerInternalServerError",
        "GameServerNotFound",
        "GameServerOk",
        "GameServerServiceUnavailable",
        "GameServerUnauthorized"
      ]
    },
    {
      "name": "ListQosServers",
      "subgroup": "GameServer",
      "titleTiers": null,
      "url": "/MultiplayerServer/ListQosServers",
      "auth": "EntityToken",
      "method": "POST",
      "request": "ListQosServersRequest",
      "requestExample": "",
      "result": "ListQosServersResponse",
      "resultExample": "",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "errors": [
        "GameServerBadRequest",
        "GameServerForbidden",
        "GameServerInternalServerError",
        "GameServerOk",
        "GameServerUnauthorized"
      ]
    },
    {
      "name": "ListVirtualMachines",
      "subgroup": "GameServer",
      "titleTiers": null,
      "url": "/MultiplayerServer/ListVirtualMachines",
      "auth": "EntityToken",
      "method": "POST",
      "request": "ListVirtualMachinesRequest",
      "requestExample": "",
      "result": "ListVirtualMachinesResponse",
      "resultExample": "",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "errors": [
        "GameServerBadRequest",
        "GameServerForbidden",
        "GameServerInternalServerError",
        "GameServerNotFound",
        "GameServerOk",
        "GameServerServiceUnavailable",
        "GameServerUnauthorized"
      ]
    },
    {
      "name": "RequestMultiplayerServer",
      "subgroup": "GameServer",
      "titleTiers": null,
      "url": "/MultiplayerServer/RequestMultiplayerServer",
      "auth": "EntityToken",
      "method": "POST",
      "request": "RequestMultiplayerServerRequest",
      "requestExample": "",
      "result": "RequestMultiplayerServerResponse",
      "resultExample": "",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "seeAlso": [
        "MultiplayerServer/GetMultiplayerServerDetails"
      ],
      "errors": [
        "GameServerAccepted",
        "GameServerBadRequest",
        "GameServerForbidden",
        "GameServerInternalServerError",
        "GameServerNotFound",
        "GameServerOk",
        "GameServerServiceUnavailable",
        "GameServerUnauthorized"
      ]
    },
    {
      "name": "ShutdownMultiplayerServer",
      "subgroup": "GameServer",
      "titleTiers": null,
      "url": "/MultiplayerServer/ShutdownMultiplayerServer",
      "auth": "EntityToken",
      "method": "POST",
      "request": "ShutdownMultiplayerServerRequest",
      "requestExample": "",
      "result": "ShutdownMultiplayerServerResponse",
      "resultExample": "",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "seeAlso": [
        "MultiplayerServer/GetMultiplayerServerDetails",
        "MultiplayerServer/RequestMultiplayerServer"
      ],
      "errors": [
        "GameServerAccepted",
        "GameServerForbidden",
        "GameServerInternalServerError",
        "GameServerNoContent",
        "GameServerNotFound",
        "GameServerUnauthorized"
      ]
    },
    {
      "name": "UpdateBuildRegions",
      "subgroup": "GameServer",
      "titleTiers": null,
      "url": "/MultiplayerServer/UpdateBuildRegions",
      "auth": "EntityToken",
      "method": "POST",
      "request": "UpdateBuildRegionsRequest",
      "requestExample": "",
      "result": "UpdateBuildRegionsResponse",
      "resultExample": "",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "seeAlso": [
        "MultiplayerServer/DeleteBuild",
        "MultiplayerServer/GetBuild",
        "MultiplayerServer/ListBuilds"
      ],
      "errors": [
        "GameServerBadRequest",
        "GameServerConflict",
        "GameServerForbidden",
        "GameServerInternalServerError",
        "GameServerOk",
        "GameServerUnauthorized"
      ]
    },
    {
      "name": "UploadCertificate",
      "subgroup": "GameServer",
      "titleTiers": null,
      "url": "/MultiplayerServer/UploadCertificate",
      "auth": "EntityToken",
      "method": "POST",
      "request": "UploadCertificateRequest",
      "requestExample": "",
      "result": "UploadCertificateResponse",
      "resultExample": "",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "seeAlso": [
        "MultiplayerServer/GetAssetUploadUrl",
        "MultiplayerServer/ListAssets",
        "MultiplayerServer/ListCertificates"
      ],
      "errors": [
        "GameServerAccepted",
        "GameServerBadRequest",
        "GameServerConflict",
        "GameServerForbidden",
        "GameServerInternalServerError",
        "GameServerNoContent",
        "GameServerNotFound",
        "GameServerOk",
        "GameServerServiceUnavailable",
        "GameServerUnauthorized"
      ]
    }
  ],
  "errors": {
    "Success": {
      "id": 0,
      "name": "Success"
    },
    "UnkownError": {
      "id": 500,
      "name": "UnkownError"
    },
    "InvalidParams": {
      "id": 1000,
      "name": "InvalidParams"
    },
    "AccountNotFound": {
      "id": 1001,
      "name": "AccountNotFound"
    },
    "AccountBanned": {
      "id": 1002,
      "name": "AccountBanned"
    },
    "InvalidUsernameOrPassword": {
      "id": 1003,
      "name": "InvalidUsernameOrPassword"
    },
    "InvalidTitleId": {
      "id": 1004,
      "name": "InvalidTitleId"
    },
    "InvalidEmailAddress": {
      "id": 1005,
      "name": "InvalidEmailAddress"
    },
    "EmailAddressNotAvailable": {
      "id": 1006,
      "name": "EmailAddressNotAvailable"
    },
    "InvalidUsername": {
      "id": 1007,
      "name": "InvalidUsername"
    },
    "InvalidPassword": {
      "id": 1008,
      "name": "InvalidPassword"
    },
    "UsernameNotAvailable": {
      "id": 1009,
      "name": "UsernameNotAvailable"
    },
    "InvalidSteamTicket": {
      "id": 1010,
      "name": "InvalidSteamTicket"
    },
    "AccountAlreadyLinked": {
      "id": 1011,
      "name": "AccountAlreadyLinked"
    },
    "LinkedAccountAlreadyClaimed": {
      "id": 1012,
      "name": "LinkedAccountAlreadyClaimed"
    },
    "InvalidFacebookToken": {
      "id": 1013,
      "name": "InvalidFacebookToken"
    },
    "AccountNotLinked": {
      "id": 1014,
      "name": "AccountNotLinked"
    },
    "FailedByPaymentProvider": {
      "id": 1015,
      "name": "FailedByPaymentProvider"
    },
    "CouponCodeNotFound": {
      "id": 1016,
      "name": "CouponCodeNotFound"
    },
    "InvalidContainerItem": {
      "id": 1017,
      "name": "InvalidContainerItem"
    },
    "ContainerNotOwned": {
      "id": 1018,
      "name": "ContainerNotOwned"
    },
    "KeyNotOwned": {
      "id": 1019,
      "name": "KeyNotOwned"
    },
    "InvalidItemIdInTable": {
      "id": 1020,
      "name": "InvalidItemIdInTable"
    },
    "InvalidReceipt": {
      "id": 1021,
      "name": "InvalidReceipt"
    },
    "ReceiptAlreadyUsed": {
      "id": 1022,
      "name": "ReceiptAlreadyUsed"
    },
    "ReceiptCancelled": {
      "id": 1023,
      "name": "ReceiptCancelled"
    },
    "GameNotFound": {
      "id": 1024,
      "name": "GameNotFound"
    },
    "GameModeNotFound": {
      "id": 1025,
      "name": "GameModeNotFound"
    },
    "InvalidGoogleToken": {
      "id": 1026,
      "name": "InvalidGoogleToken"
    },
    "UserIsNotPartOfDeveloper": {
      "id": 1027,
      "name": "UserIsNotPartOfDeveloper"
    },
    "InvalidTitleForDeveloper": {
      "id": 1028,
      "name": "InvalidTitleForDeveloper"
    },
    "TitleNameConflicts": {
      "id": 1029,
      "name": "TitleNameConflicts"
    },
    "UserisNotValid": {
      "id": 1030,
      "name": "UserisNotValid"
    },
    "ValueAlreadyExists": {
      "id": 1031,
      "name": "ValueAlreadyExists"
    },
    "BuildNotFound": {
      "id": 1032,
      "name": "BuildNotFound"
    },
    "PlayerNotInGame": {
      "id": 1033,
      "name": "PlayerNotInGame"
    },
    "InvalidTicket": {
      "id": 1034,
      "name": "InvalidTicket"
    },
    "InvalidDeveloper": {
      "id": 1035,
      "name": "InvalidDeveloper"
    },
    "InvalidOrderInfo": {
      "id": 1036,
      "name": "InvalidOrderInfo"
    },
    "RegistrationIncomplete": {
      "id": 1037,
      "name": "RegistrationIncomplete"
    },
    "InvalidPlatform": {
      "id": 1038,
      "name": "InvalidPlatform"
    },
    "UnknownError": {
      "id": 1039,
      "name": "UnknownError"
    },
    "SteamApplicationNotOwned": {
      "id": 1040,
      "name": "SteamApplicationNotOwned"
    },
    "WrongSteamAccount": {
      "id": 1041,
      "name": "WrongSteamAccount"
    },
    "TitleNotActivated": {
      "id": 1042,
      "name": "TitleNotActivated"
    },
    "RegistrationSessionNotFound": {
      "id": 1043,
      "name": "RegistrationSessionNotFound"
    },
    "NoSuchMod": {
      "id": 1044,
      "name": "NoSuchMod"
    },
    "FileNotFound": {
      "id": 1045,
      "name": "FileNotFound"
    },
    "DuplicateEmail": {
      "id": 1046,
      "name": "DuplicateEmail"
    },
    "ItemNotFound": {
      "id": 1047,
      "name": "ItemNotFound"
    },
    "ItemNotOwned": {
      "id": 1048,
      "name": "ItemNotOwned"
    },
    "ItemNotRecycleable": {
      "id": 1049,
      "name": "ItemNotRecycleable"
    },
    "ItemNotAffordable": {
      "id": 1050,
      "name": "ItemNotAffordable"
    },
    "InvalidVirtualCurrency": {
      "id": 1051,
      "name": "InvalidVirtualCurrency"
    },
    "WrongVirtualCurrency": {
      "id": 1052,
      "name": "WrongVirtualCurrency"
    },
    "WrongPrice": {
      "id": 1053,
      "name": "WrongPrice"
    },
    "NonPositiveValue": {
      "id": 1054,
      "name": "NonPositiveValue"
    },
    "InvalidRegion": {
      "id": 1055,
      "name": "InvalidRegion"
    },
    "RegionAtCapacity": {
      "id": 1056,
      "name": "RegionAtCapacity"
    },
    "ServerFailedToStart": {
      "id": 1057,
      "name": "ServerFailedToStart"
    },
    "NameNotAvailable": {
      "id": 1058,
      "name": "NameNotAvailable"
    },
    "InsufficientFunds": {
      "id": 1059,
      "name": "InsufficientFunds"
    },
    "InvalidDeviceID": {
      "id": 1060,
      "name": "InvalidDeviceID"
    },
    "InvalidPushNotificationToken": {
      "id": 1061,
      "name": "InvalidPushNotificationToken"
    },
    "NoRemainingUses": {
      "id": 1062,
      "name": "NoRemainingUses"
    },
    "InvalidPaymentProvider": {
      "id": 1063,
      "name": "InvalidPaymentProvider"
    },
    "PurchaseInitializationFailure": {
      "id": 1064,
      "name": "PurchaseInitializationFailure"
    },
    "DuplicateUsername": {
      "id": 1065,
      "name": "DuplicateUsername"
    },
    "InvalidBuyerInfo": {
      "id": 1066,
      "name": "InvalidBuyerInfo"
    },
    "NoGameModeParamsSet": {
      "id": 1067,
      "name": "NoGameModeParamsSet"
    },
    "BodyTooLarge": {
      "id": 1068,
      "name": "BodyTooLarge"
    },
    "ReservedWordInBody": {
      "id": 1069,
      "name": "ReservedWordInBody"
    },
    "InvalidTypeInBody": {
      "id": 1070,
      "name": "InvalidTypeInBody"
    },
    "InvalidRequest": {
      "id": 1071,
      "name": "InvalidRequest"
    },
    "ReservedEventName": {
      "id": 1072,
      "name": "ReservedEventName"
    },
    "InvalidUserStatistics": {
      "id": 1073,
      "name": "InvalidUserStatistics"
    },
    "NotAuthenticated": {
      "id": 1074,
      "name": "NotAuthenticated"
    },
    "StreamAlreadyExists": {
      "id": 1075,
      "name": "StreamAlreadyExists"
    },
    "ErrorCreatingStream": {
      "id": 1076,
      "name": "ErrorCreatingStream"
    },
    "StreamNotFound": {
      "id": 1077,
      "name": "StreamNotFound"
    },
    "InvalidAccount": {
      "id": 1078,
      "name": "InvalidAccount"
    },
    "PurchaseDoesNotExist": {
      "id": 1080,
      "name": "PurchaseDoesNotExist"
    },
    "InvalidPurchaseTransactionStatus": {
      "id": 1081,
      "name": "InvalidPurchaseTransactionStatus"
    },
    "APINotEnabledForGameClientAccess": {
      "id": 1082,
      "name": "APINotEnabledForGameClientAccess"
    },
    "NoPushNotificationARNForTitle": {
      "id": 1083,
      "name": "NoPushNotificationARNForTitle"
    },
    "BuildAlreadyExists": {
      "id": 1084,
      "name": "BuildAlreadyExists"
    },
    "BuildPackageDoesNotExist": {
      "id": 1085,
      "name": "BuildPackageDoesNotExist"
    },
    "CustomAnalyticsEventsNotEnabledForTitle": {
      "id": 1087,
      "name": "CustomAnalyticsEventsNotEnabledForTitle"
    },
    "InvalidSharedGroupId": {
      "id": 1088,
      "name": "InvalidSharedGroupId"
    },
    "NotAuthorized": {
      "id": 1089,
      "name": "NotAuthorized"
    },
    "MissingTitleGoogleProperties": {
      "id": 1090,
      "name": "MissingTitleGoogleProperties"
    },
    "InvalidItemProperties": {
      "id": 1091,
      "name": "InvalidItemProperties"
    },
    "InvalidPSNAuthCode": {
      "id": 1092,
      "name": "InvalidPSNAuthCode"
    },
    "InvalidItemId": {
      "id": 1093,
      "name": "InvalidItemId"
    },
    "PushNotEnabledForAccount": {
      "id": 1094,
      "name": "PushNotEnabledForAccount"
    },
    "PushServiceError": {
      "id": 1095,
      "name": "PushServiceError"
    },
    "ReceiptDoesNotContainInAppItems": {
      "id": 1096,
      "name": "ReceiptDoesNotContainInAppItems"
    },
    "ReceiptContainsMultipleInAppItems": {
      "id": 1097,
      "name": "ReceiptContainsMultipleInAppItems"
    },
    "InvalidBundleID": {
      "id": 1098,
      "name": "InvalidBundleID"
    },
    "JavascriptException": {
      "id": 1099,
      "name": "JavascriptException"
    },
    "InvalidSessionTicket": {
      "id": 1100,
      "name": "InvalidSessionTicket"
    },
    "UnableToConnectToDatabase": {
      "id": 1101,
      "name": "UnableToConnectToDatabase"
    },
    "InternalServerError": {
      "id": 1110,
      "name": "InternalServerError"
    },
    "InvalidReportDate": {
      "id": 1111,
      "name": "InvalidReportDate"
    },
    "ReportNotAvailable": {
      "id": 1112,
      "name": "ReportNotAvailable"
    },
    "DatabaseThroughputExceeded": {
      "id": 1113,
      "name": "DatabaseThroughputExceeded"
    },
    "InvalidGameTicket": {
      "id": 1115,
      "name": "InvalidGameTicket"
    },
    "ExpiredGameTicket": {
      "id": 1116,
      "name": "ExpiredGameTicket"
    },
    "GameTicketDoesNotMatchLobby": {
      "id": 1117,
      "name": "GameTicketDoesNotMatchLobby"
    },
    "LinkedDeviceAlreadyClaimed": {
      "id": 1118,
      "name": "LinkedDeviceAlreadyClaimed"
    },
    "DeviceAlreadyLinked": {
      "id": 1119,
      "name": "DeviceAlreadyLinked"
    },
    "DeviceNotLinked": {
      "id": 1120,
      "name": "DeviceNotLinked"
    },
    "PartialFailure": {
      "id": 1121,
      "name": "PartialFailure"
    },
    "PublisherNotSet": {
      "id": 1122,
      "name": "PublisherNotSet"
    },
    "ServiceUnavailable": {
      "id": 1123,
      "name": "ServiceUnavailable"
    },
    "VersionNotFound": {
      "id": 1124,
      "name": "VersionNotFound"
    },
    "RevisionNotFound": {
      "id": 1125,
      "name": "RevisionNotFound"
    },
    "InvalidPublisherId": {
      "id": 1126,
      "name": "InvalidPublisherId"
    },
    "DownstreamServiceUnavailable": {
      "id": 1127,
      "name": "DownstreamServiceUnavailable"
    },
    "APINotIncludedInTitleUsageTier": {
      "id": 1128,
      "name": "APINotIncludedInTitleUsageTier"
    },
    "DAULimitExceeded": {
      "id": 1129,
      "name": "DAULimitExceeded"
    },
    "APIRequestLimitExceeded": {
      "id": 1130,
      "name": "APIRequestLimitExceeded"
    },
    "InvalidAPIEndpoint": {
      "id": 1131,
      "name": "InvalidAPIEndpoint"
    },
    "BuildNotAvailable": {
      "id": 1132,
      "name": "BuildNotAvailable"
    },
    "ConcurrentEditError": {
      "id": 1133,
      "name": "ConcurrentEditError"
    },
    "ContentNotFound": {
      "id": 1134,
      "name": "ContentNotFound"
    },
    "CharacterNotFound": {
      "id": 1135,
      "name": "CharacterNotFound"
    },
    "CloudScriptNotFound": {
      "id": 1136,
      "name": "CloudScriptNotFound"
    },
    "ContentQuotaExceeded": {
      "id": 1137,
      "name": "ContentQuotaExceeded"
    },
    "InvalidCharacterStatistics": {
      "id": 1138,
      "name": "InvalidCharacterStatistics"
    },
    "PhotonNotEnabledForTitle": {
      "id": 1139,
      "name": "PhotonNotEnabledForTitle"
    },
    "PhotonApplicationNotFound": {
      "id": 1140,
      "name": "PhotonApplicationNotFound"
    },
    "PhotonApplicationNotAssociatedWithTitle": {
      "id": 1141,
      "name": "PhotonApplicationNotAssociatedWithTitle"
    },
    "InvalidEmailOrPassword": {
      "id": 1142,
      "name": "InvalidEmailOrPassword"
    },
    "FacebookAPIError": {
      "id": 1143,
      "name": "FacebookAPIError"
    },
    "InvalidContentType": {
      "id": 1144,
      "name": "InvalidContentType"
    },
    "KeyLengthExceeded": {
      "id": 1145,
      "name": "KeyLengthExceeded"
    },
    "DataLengthExceeded": {
      "id": 1146,
      "name": "DataLengthExceeded"
    },
    "TooManyKeys": {
      "id": 1147,
      "name": "TooManyKeys"
    },
    "FreeTierCannotHaveVirtualCurrency": {
      "id": 1148,
      "name": "FreeTierCannotHaveVirtualCurrency"
    },
    "MissingAmazonSharedKey": {
      "id": 1149,
      "name": "MissingAmazonSharedKey"
    },
    "AmazonValidationError": {
      "id": 1150,
      "name": "AmazonValidationError"
    },
    "InvalidPSNIssuerId": {
      "id": 1151,
      "name": "InvalidPSNIssuerId"
    },
    "PSNInaccessible": {
      "id": 1152,
      "name": "PSNInaccessible"
    },
    "ExpiredAuthToken": {
      "id": 1153,
      "name": "ExpiredAuthToken"
    },
    "FailedToGetEntitlements": {
      "id": 1154,
      "name": "FailedToGetEntitlements"
    },
    "FailedToConsumeEntitlement": {
      "id": 1155,
      "name": "FailedToConsumeEntitlement"
    },
    "TradeAcceptingUserNotAllowed": {
      "id": 1156,
      "name": "TradeAcceptingUserNotAllowed"
    },
    "TradeInventoryItemIsAssignedToCharacter": {
      "id": 1157,
      "name": "TradeInventoryItemIsAssignedToCharacter"
    },
    "TradeInventoryItemIsBundle": {
      "id": 1158,
      "name": "TradeInventoryItemIsBundle"
    },
    "TradeStatusNotValidForCancelling": {
      "id": 1159,
      "name": "TradeStatusNotValidForCancelling"
    },
    "TradeStatusNotValidForAccepting": {
      "id": 1160,
      "name": "TradeStatusNotValidForAccepting"
    },
    "TradeDoesNotExist": {
      "id": 1161,
      "name": "TradeDoesNotExist"
    },
    "TradeCancelled": {
      "id": 1162,
      "name": "TradeCancelled"
    },
    "TradeAlreadyFilled": {
      "id": 1163,
      "name": "TradeAlreadyFilled"
    },
    "TradeWaitForStatusTimeout": {
      "id": 1164,
      "name": "TradeWaitForStatusTimeout"
    },
    "TradeInventoryItemExpired": {
      "id": 1165,
      "name": "TradeInventoryItemExpired"
    },
    "TradeMissingOfferedAndAcceptedItems": {
      "id": 1166,
      "name": "TradeMissingOfferedAndAcceptedItems"
    },
    "TradeAcceptedItemIsBundle": {
      "id": 1167,
      "name": "TradeAcceptedItemIsBundle"
    },
    "TradeAcceptedItemIsStackable": {
      "id": 1168,
      "name": "TradeAcceptedItemIsStackable"
    },
    "TradeInventoryItemInvalidStatus": {
      "id": 1169,
      "name": "TradeInventoryItemInvalidStatus"
    },
    "TradeAcceptedCatalogItemInvalid": {
      "id": 1170,
      "name": "TradeAcceptedCatalogItemInvalid"
    },
    "TradeAllowedUsersInvalid": {
      "id": 1171,
      "name": "TradeAllowedUsersInvalid"
    },
    "TradeInventoryItemDoesNotExist": {
      "id": 1172,
      "name": "TradeInventoryItemDoesNotExist"
    },
    "TradeInventoryItemIsConsumed": {
      "id": 1173,
      "name": "TradeInventoryItemIsConsumed"
    },
    "TradeInventoryItemIsStackable": {
      "id": 1174,
      "name": "TradeInventoryItemIsStackable"
    },
    "TradeAcceptedItemsMismatch": {
      "id": 1175,
      "name": "TradeAcceptedItemsMismatch"
    },
    "InvalidKongregateToken": {
      "id": 1176,
      "name": "InvalidKongregateToken"
    },
    "FeatureNotConfiguredForTitle": {
      "id": 1177,
      "name": "FeatureNotConfiguredForTitle"
    },
    "NoMatchingCatalogItemForReceipt": {
      "id": 1178,
      "name": "NoMatchingCatalogItemForReceipt"
    },
    "InvalidCurrencyCode": {
      "id": 1179,
      "name": "InvalidCurrencyCode"
    },
    "NoRealMoneyPriceForCatalogItem": {
      "id": 1180,
      "name": "NoRealMoneyPriceForCatalogItem"
    },
    "TradeInventoryItemIsNotTradable": {
      "id": 1181,
      "name": "TradeInventoryItemIsNotTradable"
    },
    "TradeAcceptedCatalogItemIsNotTradable": {
      "id": 1182,
      "name": "TradeAcceptedCatalogItemIsNotTradable"
    },
    "UsersAlreadyFriends": {
      "id": 1183,
      "name": "UsersAlreadyFriends"
    },
    "LinkedIdentifierAlreadyClaimed": {
      "id": 1184,
      "name": "LinkedIdentifierAlreadyClaimed"
    },
    "CustomIdNotLinked": {
      "id": 1185,
      "name": "CustomIdNotLinked"
    },
    "TotalDataSizeExceeded": {
      "id": 1186,
      "name": "TotalDataSizeExceeded"
    },
    "DeleteKeyConflict": {
      "id": 1187,
      "name": "DeleteKeyConflict"
    },
    "InvalidXboxLiveToken": {
      "id": 1188,
      "name": "InvalidXboxLiveToken"
    },
    "ExpiredXboxLiveToken": {
      "id": 1189,
      "name": "ExpiredXboxLiveToken"
    },
    "ResettableStatisticVersionRequired": {
      "id": 1190,
      "name": "ResettableStatisticVersionRequired"
    },
    "NotAuthorizedByTitle": {
      "id": 1191,
      "name": "NotAuthorizedByTitle"
    },
    "NoPartnerEnabled": {
      "id": 1192,
      "name": "NoPartnerEnabled"
    },
    "InvalidPartnerResponse": {
      "id": 1193,
      "name": "InvalidPartnerResponse"
    },
    "APINotEnabledForGameServerAccess": {
      "id": 1194,
      "name": "APINotEnabledForGameServerAccess"
    },
    "StatisticNotFound": {
      "id": 1195,
      "name": "StatisticNotFound"
    },
    "StatisticNameConflict": {
      "id": 1196,
      "name": "StatisticNameConflict"
    },
    "StatisticVersionClosedForWrites": {
      "id": 1197,
      "name": "StatisticVersionClosedForWrites"
    },
    "StatisticVersionInvalid": {
      "id": 1198,
      "name": "StatisticVersionInvalid"
    },
    "APIClientRequestRateLimitExceeded": {
      "id": 1199,
      "name": "APIClientRequestRateLimitExceeded"
    },
    "InvalidJSONContent": {
      "id": 1200,
      "name": "InvalidJSONContent"
    },
    "InvalidDropTable": {
      "id": 1201,
      "name": "InvalidDropTable"
    },
    "StatisticVersionAlreadyIncrementedForScheduledInterval": {
      "id": 1202,
      "name": "StatisticVersionAlreadyIncrementedForScheduledInterval"
    },
    "StatisticCountLimitExceeded": {
      "id": 1203,
      "name": "StatisticCountLimitExceeded"
    },
    "StatisticVersionIncrementRateExceeded": {
      "id": 1204,
      "name": "StatisticVersionIncrementRateExceeded"
    },
    "ContainerKeyInvalid": {
      "id": 1205,
      "name": "ContainerKeyInvalid"
    },
    "CloudScriptExecutionTimeLimitExceeded": {
      "id": 1206,
      "name": "CloudScriptExecutionTimeLimitExceeded"
    },
    "NoWritePermissionsForEvent": {
      "id": 1207,
      "name": "NoWritePermissionsForEvent"
    },
    "CloudScriptFunctionArgumentSizeExceeded": {
      "id": 1208,
      "name": "CloudScriptFunctionArgumentSizeExceeded"
    },
    "CloudScriptAPIRequestCountExceeded": {
      "id": 1209,
      "name": "CloudScriptAPIRequestCountExceeded"
    },
    "CloudScriptAPIRequestError": {
      "id": 1210,
      "name": "CloudScriptAPIRequestError"
    },
    "CloudScriptHTTPRequestError": {
      "id": 1211,
      "name": "CloudScriptHTTPRequestError"
    },
    "InsufficientGuildRole": {
      "id": 1212,
      "name": "InsufficientGuildRole"
    },
    "GuildNotFound": {
      "id": 1213,
      "name": "GuildNotFound"
    },
    "OverLimit": {
      "id": 1214,
      "name": "OverLimit"
    },
    "EventNotFound": {
      "id": 1215,
      "name": "EventNotFound"
    },
    "InvalidEventField": {
      "id": 1216,
      "name": "InvalidEventField"
    },
    "InvalidEventName": {
      "id": 1217,
      "name": "InvalidEventName"
    },
    "CatalogNotConfigured": {
      "id": 1218,
      "name": "CatalogNotConfigured"
    },
    "OperationNotSupportedForPlatform": {
      "id": 1219,
      "name": "OperationNotSupportedForPlatform"
    },
    "SegmentNotFound": {
      "id": 1220,
      "name": "SegmentNotFound"
    },
    "StoreNotFound": {
      "id": 1221,
      "name": "StoreNotFound"
    },
    "InvalidStatisticName": {
      "id": 1222,
      "name": "InvalidStatisticName"
    },
    "TitleNotQualifiedForLimit": {
      "id": 1223,
      "name": "TitleNotQualifiedForLimit"
    },
    "InvalidServiceLimitLevel": {
      "id": 1224,
      "name": "InvalidServiceLimitLevel"
    },
    "ServiceLimitLevelInTransition": {
      "id": 1225,
      "name": "ServiceLimitLevelInTransition"
    },
    "CouponAlreadyRedeemed": {
      "id": 1226,
      "name": "CouponAlreadyRedeemed"
    },
    "GameServerBuildSizeLimitExceeded": {
      "id": 1227,
      "name": "GameServerBuildSizeLimitExceeded"
    },
    "GameServerBuildCountLimitExceeded": {
      "id": 1228,
      "name": "GameServerBuildCountLimitExceeded"
    },
    "VirtualCurrencyCountLimitExceeded": {
      "id": 1229,
      "name": "VirtualCurrencyCountLimitExceeded"
    },
    "VirtualCurrencyCodeExists": {
      "id": 1230,
      "name": "VirtualCurrencyCodeExists"
    },
    "TitleNewsItemCountLimitExceeded": {
      "id": 1231,
      "name": "TitleNewsItemCountLimitExceeded"
    },
    "InvalidTwitchToken": {
      "id": 1232,
      "name": "InvalidTwitchToken"
    },
    "TwitchResponseError": {
      "id": 1233,
      "name": "TwitchResponseError"
    },
    "ProfaneDisplayName": {
      "id": 1234,
      "name": "ProfaneDisplayName"
    },
    "UserAlreadyAdded": {
      "id": 1235,
      "name": "UserAlreadyAdded"
    },
    "InvalidVirtualCurrencyCode": {
      "id": 1236,
      "name": "InvalidVirtualCurrencyCode"
    },
    "VirtualCurrencyCannotBeDeleted": {
      "id": 1237,
      "name": "VirtualCurrencyCannotBeDeleted"
    },
    "IdentifierAlreadyClaimed": {
      "id": 1238,
      "name": "IdentifierAlreadyClaimed"
    },
    "IdentifierNotLinked": {
      "id": 1239,
      "name": "IdentifierNotLinked"
    },
    "InvalidContinuationToken": {
      "id": 1240,
      "name": "InvalidContinuationToken"
    },
    "ExpiredContinuationToken": {
      "id": 1241,
      "name": "ExpiredContinuationToken"
    },
    "InvalidSegment": {
      "id": 1242,
      "name": "InvalidSegment"
    },
    "InvalidSessionId": {
      "id": 1243,
      "name": "InvalidSessionId"
    },
    "SessionLogNotFound": {
      "id": 1244,
      "name": "SessionLogNotFound"
    },
    "InvalidSearchTerm": {
      "id": 1245,
      "name": "InvalidSearchTerm"
    },
    "TwoFactorAuthenticationTokenRequired": {
      "id": 1246,
      "name": "TwoFactorAuthenticationTokenRequired"
    },
    "GameServerHostCountLimitExceeded": {
      "id": 1247,
      "name": "GameServerHostCountLimitExceeded"
    },
    "PlayerTagCountLimitExceeded": {
      "id": 1248,
      "name": "PlayerTagCountLimitExceeded"
    },
    "RequestAlreadyRunning": {
      "id": 1249,
      "name": "RequestAlreadyRunning"
    },
    "ActionGroupNotFound": {
      "id": 1250,
      "name": "ActionGroupNotFound"
    },
    "MaximumSegmentBulkActionJobsRunning": {
      "id": 1251,
      "name": "MaximumSegmentBulkActionJobsRunning"
    },
    "NoActionsOnPlayersInSegmentJob": {
      "id": 1252,
      "name": "NoActionsOnPlayersInSegmentJob"
    },
    "DuplicateStatisticName": {
      "id": 1253,
      "name": "DuplicateStatisticName"
    },
    "ScheduledTaskNameConflict": {
      "id": 1254,
      "name": "ScheduledTaskNameConflict"
    },
    "ScheduledTaskCreateConflict": {
      "id": 1255,
      "name": "ScheduledTaskCreateConflict"
    },
    "InvalidScheduledTaskName": {
      "id": 1256,
      "name": "InvalidScheduledTaskName"
    },
    "InvalidTaskSchedule": {
      "id": 1257,
      "name": "InvalidTaskSchedule"
    },
    "SteamNotEnabledForTitle": {
      "id": 1258,
      "name": "SteamNotEnabledForTitle"
    },
    "LimitNotAnUpgradeOption": {
      "id": 1259,
      "name": "LimitNotAnUpgradeOption"
    },
    "NoSecretKeyEnabledForCloudScript": {
      "id": 1260,
      "name": "NoSecretKeyEnabledForCloudScript"
    },
    "TaskNotFound": {
      "id": 1261,
      "name": "TaskNotFound"
    },
    "TaskInstanceNotFound": {
      "id": 1262,
      "name": "TaskInstanceNotFound"
    },
    "InvalidIdentityProviderId": {
      "id": 1263,
      "name": "InvalidIdentityProviderId"
    },
    "MisconfiguredIdentityProvider": {
      "id": 1264,
      "name": "MisconfiguredIdentityProvider"
    },
    "InvalidScheduledTaskType": {
      "id": 1265,
      "name": "InvalidScheduledTaskType"
    },
    "BillingInformationRequired": {
      "id": 1266,
      "name": "BillingInformationRequired"
    },
    "LimitedEditionItemUnavailable": {
      "id": 1267,
      "name": "LimitedEditionItemUnavailable"
    },
    "InvalidAdPlacementAndReward": {
      "id": 1268,
      "name": "InvalidAdPlacementAndReward"
    },
    "AllAdPlacementViewsAlreadyConsumed": {
      "id": 1269,
      "name": "AllAdPlacementViewsAlreadyConsumed"
    },
    "GoogleOAuthNotConfiguredForTitle": {
      "id": 1270,
      "name": "GoogleOAuthNotConfiguredForTitle"
    },
    "GoogleOAuthError": {
      "id": 1271,
      "name": "GoogleOAuthError"
    },
    "UserNotFriend": {
      "id": 1272,
      "name": "UserNotFriend"
    },
    "InvalidSignature": {
      "id": 1273,
      "name": "InvalidSignature"
    },
    "InvalidPublicKey": {
      "id": 1274,
      "name": "InvalidPublicKey"
    },
    "GoogleOAuthNoIdTokenIncludedInResponse": {
      "id": 1275,
      "name": "GoogleOAuthNoIdTokenIncludedInResponse"
    },
    "StatisticUpdateInProgress": {
      "id": 1276,
      "name": "StatisticUpdateInProgress"
    },
    "LeaderboardVersionNotAvailable": {
      "id": 1277,
      "name": "LeaderboardVersionNotAvailable"
    },
    "StatisticAlreadyHasPrizeTable": {
      "id": 1279,
      "name": "StatisticAlreadyHasPrizeTable"
    },
    "PrizeTableHasOverlappingRanks": {
      "id": 1280,
      "name": "PrizeTableHasOverlappingRanks"
    },
    "PrizeTableHasMissingRanks": {
      "id": 1281,
      "name": "PrizeTableHasMissingRanks"
    },
    "PrizeTableRankStartsAtZero": {
      "id": 1282,
      "name": "PrizeTableRankStartsAtZero"
    },
    "InvalidStatistic": {
      "id": 1283,
      "name": "InvalidStatistic"
    },
    "ExpressionParseFailure": {
      "id": 1284,
      "name": "ExpressionParseFailure"
    },
    "ExpressionInvokeFailure": {
      "id": 1285,
      "name": "ExpressionInvokeFailure"
    },
    "ExpressionTooLong": {
      "id": 1286,
      "name": "ExpressionTooLong"
    },
    "DataUpdateRateExceeded": {
      "id": 1287,
      "name": "DataUpdateRateExceeded"
    },
    "RestrictedEmailDomain": {
      "id": 1288,
      "name": "RestrictedEmailDomain"
    },
    "EncryptionKeyDisabled": {
      "id": 1289,
      "name": "EncryptionKeyDisabled"
    },
    "EncryptionKeyMissing": {
      "id": 1290,
      "name": "EncryptionKeyMissing"
    },
    "EncryptionKeyBroken": {
      "id": 1291,
      "name": "EncryptionKeyBroken"
    },
    "NoSharedSecretKeyConfigured": {
      "id": 1292,
      "name": "NoSharedSecretKeyConfigured"
    },
    "SecretKeyNotFound": {
      "id": 1293,
      "name": "SecretKeyNotFound"
    },
    "PlayerSecretAlreadyConfigured": {
      "id": 1294,
      "name": "PlayerSecretAlreadyConfigured"
    },
    "APIRequestsDisabledForTitle": {
      "id": 1295,
      "name": "APIRequestsDisabledForTitle"
    },
    "InvalidSharedSecretKey": {
      "id": 1296,
      "name": "InvalidSharedSecretKey"
    },
    "PrizeTableHasNoRanks": {
      "id": 1297,
      "name": "PrizeTableHasNoRanks"
    },
    "ProfileDoesNotExist": {
      "id": 1298,
      "name": "ProfileDoesNotExist"
    },
    "ContentS3OriginBucketNotConfigured": {
      "id": 1299,
      "name": "ContentS3OriginBucketNotConfigured"
    },
    "InvalidEnvironmentForReceipt": {
      "id": 1300,
      "name": "InvalidEnvironmentForReceipt"
    },
    "EncryptedRequestNotAllowed": {
      "id": 1301,
      "name": "EncryptedRequestNotAllowed"
    },
    "SignedRequestNotAllowed": {
      "id": 1302,
      "name": "SignedRequestNotAllowed"
    },
    "RequestViewConstraintParamsNotAllowed": {
      "id": 1303,
      "name": "RequestViewConstraintParamsNotAllowed"
    },
    "BadPartnerConfiguration": {
      "id": 1304,
      "name": "BadPartnerConfiguration"
    },
    "XboxBPCertificateFailure": {
      "id": 1305,
      "name": "XboxBPCertificateFailure"
    },
    "XboxXASSExchangeFailure": {
      "id": 1306,
      "name": "XboxXASSExchangeFailure"
    },
    "InvalidEntityId": {
      "id": 1307,
      "name": "InvalidEntityId"
    },
    "StatisticValueAggregationOverflow": {
      "id": 1308,
      "name": "StatisticValueAggregationOverflow"
    },
    "EmailMessageFromAddressIsMissing": {
      "id": 1309,
      "name": "EmailMessageFromAddressIsMissing"
    },
    "EmailMessageToAddressIsMissing": {
      "id": 1310,
      "name": "EmailMessageToAddressIsMissing"
    },
    "SmtpServerAuthenticationError": {
      "id": 1311,
      "name": "SmtpServerAuthenticationError"
    },
    "SmtpServerLimitExceeded": {
      "id": 1312,
      "name": "SmtpServerLimitExceeded"
    },
    "SmtpServerInsufficientStorage": {
      "id": 1313,
      "name": "SmtpServerInsufficientStorage"
    },
    "SmtpServerCommunicationError": {
      "id": 1314,
      "name": "SmtpServerCommunicationError"
    },
    "SmtpServerGeneralFailure": {
      "id": 1315,
      "name": "SmtpServerGeneralFailure"
    },
    "EmailClientTimeout": {
      "id": 1316,
      "name": "EmailClientTimeout"
    },
    "EmailClientCanceledTask": {
      "id": 1317,
      "name": "EmailClientCanceledTask"
    },
    "EmailTemplateMissing": {
      "id": 1318,
      "name": "EmailTemplateMissing"
    },
    "InvalidHostForTitleId": {
      "id": 1319,
      "name": "InvalidHostForTitleId"
    },
    "EmailConfirmationTokenDoesNotExist": {
      "id": 1320,
      "name": "EmailConfirmationTokenDoesNotExist"
    },
    "EmailConfirmationTokenExpired": {
      "id": 1321,
      "name": "EmailConfirmationTokenExpired"
    },
    "AccountDeleted": {
      "id": 1322,
      "name": "AccountDeleted"
    },
    "PlayerSecretNotConfigured": {
      "id": 1323,
      "name": "PlayerSecretNotConfigured"
    },
    "InvalidSignatureTime": {
      "id": 1324,
      "name": "InvalidSignatureTime"
    },
    "NoContactEmailAddressFound": {
      "id": 1325,
      "name": "NoContactEmailAddressFound"
    },
    "InvalidAuthToken": {
      "id": 1326,
      "name": "InvalidAuthToken"
    },
    "AuthTokenDoesNotExist": {
      "id": 1327,
      "name": "AuthTokenDoesNotExist"
    },
    "AuthTokenExpired": {
      "id": 1328,
      "name": "AuthTokenExpired"
    },
    "AuthTokenAlreadyUsedToResetPassword": {
      "id": 1329,
      "name": "AuthTokenAlreadyUsedToResetPassword"
    },
    "MembershipNameTooLong": {
      "id": 1330,
      "name": "MembershipNameTooLong"
    },
    "MembershipNotFound": {
      "id": 1331,
      "name": "MembershipNotFound"
    },
    "GoogleServiceAccountInvalid": {
      "id": 1332,
      "name": "GoogleServiceAccountInvalid"
    },
    "GoogleServiceAccountParseFailure": {
      "id": 1333,
      "name": "GoogleServiceAccountParseFailure"
    },
    "EntityTokenMissing": {
      "id": 1334,
      "name": "EntityTokenMissing"
    },
    "EntityTokenInvalid": {
      "id": 1335,
      "name": "EntityTokenInvalid"
    },
    "EntityTokenExpired": {
      "id": 1336,
      "name": "EntityTokenExpired"
    },
    "EntityTokenRevoked": {
      "id": 1337,
      "name": "EntityTokenRevoked"
    },
    "InvalidProductForSubscription": {
      "id": 1338,
      "name": "InvalidProductForSubscription"
    },
    "XboxInaccessible": {
      "id": 1339,
      "name": "XboxInaccessible"
    },
    "SubscriptionAlreadyTaken": {
      "id": 1340,
      "name": "SubscriptionAlreadyTaken"
    },
    "SmtpAddonNotEnabled": {
      "id": 1341,
      "name": "SmtpAddonNotEnabled"
    },
    "APIConcurrentRequestLimitExceeded": {
      "id": 1342,
      "name": "APIConcurrentRequestLimitExceeded"
    },
    "XboxRejectedXSTSExchangeRequest": {
      "id": 1343,
      "name": "XboxRejectedXSTSExchangeRequest"
    },
    "VariableNotDefined": {
      "id": 1344,
      "name": "VariableNotDefined"
    },
    "TemplateVersionNotDefined": {
      "id": 1345,
      "name": "TemplateVersionNotDefined"
    },
    "FileTooLarge": {
      "id": 1346,
      "name": "FileTooLarge"
    },
    "TitleDeleted": {
      "id": 1347,
      "name": "TitleDeleted"
    },
    "TitleContainsUserAccounts": {
      "id": 1348,
      "name": "TitleContainsUserAccounts"
    },
    "TitleDeletionPlayerCleanupFailure": {
      "id": 1349,
      "name": "TitleDeletionPlayerCleanupFailure"
    },
    "EntityFileOperationPending": {
      "id": 1350,
      "name": "EntityFileOperationPending"
    },
    "NoEntityFileOperationPending": {
      "id": 1351,
      "name": "NoEntityFileOperationPending"
    },
    "EntityProfileVersionMismatch": {
      "id": 1352,
      "name": "EntityProfileVersionMismatch"
    },
    "TemplateVersionTooOld": {
      "id": 1353,
      "name": "TemplateVersionTooOld"
    },
    "MembershipDefinitionInUse": {
      "id": 1354,
      "name": "MembershipDefinitionInUse"
    },
    "PaymentPageNotConfigured": {
      "id": 1355,
      "name": "PaymentPageNotConfigured"
    },
    "FailedLoginAttemptRateLimitExceeded": {
      "id": 1356,
      "name": "FailedLoginAttemptRateLimitExceeded"
    },
    "EntityBlockedByGroup": {
      "id": 1357,
      "name": "EntityBlockedByGroup"
    },
    "RoleDoesNotExist": {
      "id": 1358,
      "name": "RoleDoesNotExist"
    },
    "EntityIsAlreadyMember": {
      "id": 1359,
      "name": "EntityIsAlreadyMember"
    },
    "DuplicateRoleId": {
      "id": 1360,
      "name": "DuplicateRoleId"
    },
    "GroupInvitationNotFound": {
      "id": 1361,
      "name": "GroupInvitationNotFound"
    },
    "GroupApplicationNotFound": {
      "id": 1362,
      "name": "GroupApplicationNotFound"
    },
    "OutstandingInvitationAcceptedInstead": {
      "id": 1363,
      "name": "OutstandingInvitationAcceptedInstead"
    },
    "OutstandingApplicationAcceptedInstead": {
      "id": 1364,
      "name": "OutstandingApplicationAcceptedInstead"
    },
    "RoleIsGroupDefaultMember": {
      "id": 1365,
      "name": "RoleIsGroupDefaultMember"
    },
    "RoleIsGroupAdmin": {
      "id": 1366,
      "name": "RoleIsGroupAdmin"
    },
    "RoleNameNotAvailable": {
      "id": 1367,
      "name": "RoleNameNotAvailable"
    },
    "GroupNameNotAvailable": {
      "id": 1368,
      "name": "GroupNameNotAvailable"
    },
    "EmailReportAlreadySent": {
      "id": 1369,
      "name": "EmailReportAlreadySent"
    },
    "EmailReportRecipientBlacklisted": {
      "id": 1370,
      "name": "EmailReportRecipientBlacklisted"
    },
    "EventNamespaceNotAllowed": {
      "id": 1371,
      "name": "EventNamespaceNotAllowed"
    },
    "EventEntityNotAllowed": {
      "id": 1372,
      "name": "EventEntityNotAllowed"
    },
    "InvalidEntityType": {
      "id": 1373,
      "name": "InvalidEntityType"
    },
    "NullTokenResultFromAad": {
      "id": 1374,
      "name": "NullTokenResultFromAad"
    },
    "InvalidTokenResultFromAad": {
      "id": 1375,
      "name": "InvalidTokenResultFromAad"
    },
    "NoValidCertificateForAad": {
      "id": 1376,
      "name": "NoValidCertificateForAad"
    },
    "InvalidCertificateForAad": {
      "id": 1377,
      "name": "InvalidCertificateForAad"
    },
    "DuplicateDropTableId": {
      "id": 1378,
      "name": "DuplicateDropTableId"
    },
    "GameServerOk": {
      "id": 1379,
      "name": "GameServerOk"
    },
    "GameServerAccepted": {
      "id": 1380,
      "name": "GameServerAccepted"
    },
    "GameServerNoContent": {
      "id": 1381,
      "name": "GameServerNoContent"
    },
    "GameServerBadRequest": {
      "id": 1382,
      "name": "GameServerBadRequest"
    },
    "GameServerUnauthorized": {
      "id": 1383,
      "name": "GameServerUnauthorized"
    },
    "GameServerForbidden": {
      "id": 1384,
      "name": "GameServerForbidden"
    },
    "GameServerNotFound": {
      "id": 1385,
      "name": "GameServerNotFound"
    },
    "GameServerConflict": {
      "id": 1386,
      "name": "GameServerConflict"
    },
    "GameServerInternalServerError": {
      "id": 1387,
      "name": "GameServerInternalServerError"
    },
    "GameServerServiceUnavailable": {
      "id": 1388,
      "name": "GameServerServiceUnavailable"
    },
    "ExplicitContentDetected": {
      "id": 1389,
      "name": "ExplicitContentDetected"
    },
    "PIIContentDetected": {
      "id": 1390,
      "name": "PIIContentDetected"
    },
    "InvalidScheduledTaskParameter": {
      "id": 1391,
      "name": "InvalidScheduledTaskParameter"
    },
    "PerEntityEventRateLimitExceeded": {
      "id": 1392,
      "name": "PerEntityEventRateLimitExceeded"
    },
    "MatchmakingEntityInvalid": {
      "id": 2001,
      "name": "MatchmakingEntityInvalid"
    },
    "MatchmakingPlayerAttributesInvalid": {
      "id": 2002,
      "name": "MatchmakingPlayerAttributesInvalid"
    },
    "MatchmakingCreateRequestMissing": {
      "id": 2003,
      "name": "MatchmakingCreateRequestMissing"
    },
    "MatchmakingCreateRequestCreatorMissing": {
      "id": 2004,
      "name": "MatchmakingCreateRequestCreatorMissing"
    },
    "MatchmakingCreateRequestCreatorIdMissing": {
      "id": 2005,
      "name": "MatchmakingCreateRequestCreatorIdMissing"
    },
    "MatchmakingCreateRequestUserListMissing": {
      "id": 2006,
      "name": "MatchmakingCreateRequestUserListMissing"
    },
    "MatchmakingCreateRequestGiveUpAfterInvalid": {
      "id": 2007,
      "name": "MatchmakingCreateRequestGiveUpAfterInvalid"
    },
    "MatchmakingTicketIdMissing": {
      "id": 2008,
      "name": "MatchmakingTicketIdMissing"
    },
    "MatchmakingMatchIdMissing": {
      "id": 2009,
      "name": "MatchmakingMatchIdMissing"
    },
    "MatchmakingMatchIdIdMissing": {
      "id": 2010,
      "name": "MatchmakingMatchIdIdMissing"
    },
    "MatchmakingQueueNameMissing": {
      "id": 2011,
      "name": "MatchmakingQueueNameMissing"
    },
    "MatchmakingTitleIdMissing": {
      "id": 2012,
      "name": "MatchmakingTitleIdMissing"
    },
    "MatchmakingTicketIdIdMissing": {
      "id": 2013,
      "name": "MatchmakingTicketIdIdMissing"
    },
    "MatchmakingPlayerIdMissing": {
      "id": 2014,
      "name": "MatchmakingPlayerIdMissing"
    },
    "MatchmakingJoinRequestUserMissing": {
      "id": 2015,
      "name": "MatchmakingJoinRequestUserMissing"
    },
    "MatchmakingQueueConfigNotFound": {
      "id": 2016,
      "name": "MatchmakingQueueConfigNotFound"
    },
    "MatchmakingMatchNotFound": {
      "id": 2017,
      "name": "MatchmakingMatchNotFound"
    },
    "MatchmakingTicketNotFound": {
      "id": 2018,
      "name": "MatchmakingTicketNotFound"
    },
    "MatchmakingCreateTicketServerIdentityInvalid": {
      "id": 2019,
      "name": "MatchmakingCreateTicketServerIdentityInvalid"
    },
    "MatchmakingCreateTicketClientIdentityInvalid": {
      "id": 2020,
      "name": "MatchmakingCreateTicketClientIdentityInvalid"
    },
    "MatchmakingGetTicketUserMismatch": {
      "id": 2021,
      "name": "MatchmakingGetTicketUserMismatch"
    },
    "MatchmakingJoinTicketServerIdentityInvalid": {
      "id": 2022,
      "name": "MatchmakingJoinTicketServerIdentityInvalid"
    },
    "MatchmakingJoinTicketUserIdentityMismatch": {
      "id": 2023,
      "name": "MatchmakingJoinTicketUserIdentityMismatch"
    },
    "MatchmakingCancelTicketServerIdentityInvalid": {
      "id": 2024,
      "name": "MatchmakingCancelTicketServerIdentityInvalid"
    },
    "MatchmakingCancelTicketUserIdentityMismatch": {
      "id": 2025,
      "name": "MatchmakingCancelTicketUserIdentityMismatch"
    },
    "MatchmakingGetMatchIdentityMismatch": {
      "id": 2026,
      "name": "MatchmakingGetMatchIdentityMismatch"
    },
    "MatchmakingPlayerIdentityMismatch": {
      "id": 2027,
      "name": "MatchmakingPlayerIdentityMismatch"
    },
    "MatchmakingAlreadyJoinedTicket": {
      "id": 2028,
      "name": "MatchmakingAlreadyJoinedTicket"
    },
    "MatchmakingTicketAlreadyCompleted": {
      "id": 2029,
      "name": "MatchmakingTicketAlreadyCompleted"
    },
    "MatchmakingQueueNameInvalid": {
      "id": 2030,
      "name": "MatchmakingQueueNameInvalid"
    },
    "MatchmakingQueueConfigInvalid": {
      "id": 2031,
      "name": "MatchmakingQueueConfigInvalid"
    },
    "MatchmakingMemberProfileInvalid": {
      "id": 2032,
      "name": "MatchmakingMemberProfileInvalid"
    },
    "WriteAttemptedDuringExport": {
      "id": 2033,
      "name": "WriteAttemptedDuringExport"
    },
    "NintendoSwitchDeviceIdNotLinked": {
      "id": 2034,
      "name": "NintendoSwitchDeviceIdNotLinked"
    },
    "MatchmakingNotEnabled": {
      "id": 2035,
      "name": "MatchmakingNotEnabled"
    }
  },
  "errorList": [
    "Success",
    "UnkownError",
    "InvalidParams",
    "AccountNotFound",
    "AccountBanned",
    "InvalidUsernameOrPassword",
    "InvalidTitleId",
    "InvalidEmailAddress",
    "EmailAddressNotAvailable",
    "InvalidUsername",
    "InvalidPassword",
    "UsernameNotAvailable",
    "InvalidSteamTicket",
    "AccountAlreadyLinked",
    "LinkedAccountAlreadyClaimed",
    "InvalidFacebookToken",
    "AccountNotLinked",
    "FailedByPaymentProvider",
    "CouponCodeNotFound",
    "InvalidContainerItem",
    "ContainerNotOwned",
    "KeyNotOwned",
    "InvalidItemIdInTable",
    "InvalidReceipt",
    "ReceiptAlreadyUsed",
    "ReceiptCancelled",
    "GameNotFound",
    "GameModeNotFound",
    "InvalidGoogleToken",
    "UserIsNotPartOfDeveloper",
    "InvalidTitleForDeveloper",
    "TitleNameConflicts",
    "UserisNotValid",
    "ValueAlreadyExists",
    "BuildNotFound",
    "PlayerNotInGame",
    "InvalidTicket",
    "InvalidDeveloper",
    "InvalidOrderInfo",
    "RegistrationIncomplete",
    "InvalidPlatform",
    "UnknownError",
    "SteamApplicationNotOwned",
    "WrongSteamAccount",
    "TitleNotActivated",
    "RegistrationSessionNotFound",
    "NoSuchMod",
    "FileNotFound",
    "DuplicateEmail",
    "ItemNotFound",
    "ItemNotOwned",
    "ItemNotRecycleable",
    "ItemNotAffordable",
    "InvalidVirtualCurrency",
    "WrongVirtualCurrency",
    "WrongPrice",
    "NonPositiveValue",
    "InvalidRegion",
    "RegionAtCapacity",
    "ServerFailedToStart",
    "NameNotAvailable",
    "InsufficientFunds",
    "InvalidDeviceID",
    "InvalidPushNotificationToken",
    "NoRemainingUses",
    "InvalidPaymentProvider",
    "PurchaseInitializationFailure",
    "DuplicateUsername",
    "InvalidBuyerInfo",
    "NoGameModeParamsSet",
    "BodyTooLarge",
    "ReservedWordInBody",
    "InvalidTypeInBody",
    "InvalidRequest",
    "ReservedEventName",
    "InvalidUserStatistics",
    "NotAuthenticated",
    "StreamAlreadyExists",
    "ErrorCreatingStream",
    "StreamNotFound",
    "InvalidAccount",
    "PurchaseDoesNotExist",
    "InvalidPurchaseTransactionStatus",
    "APINotEnabledForGameClientAccess",
    "NoPushNotificationARNForTitle",
    "BuildAlreadyExists",
    "BuildPackageDoesNotExist",
    "CustomAnalyticsEventsNotEnabledForTitle",
    "InvalidSharedGroupId",
    "NotAuthorized",
    "MissingTitleGoogleProperties",
    "InvalidItemProperties",
    "InvalidPSNAuthCode",
    "InvalidItemId",
    "PushNotEnabledForAccount",
    "PushServiceError",
    "ReceiptDoesNotContainInAppItems",
    "ReceiptContainsMultipleInAppItems",
    "InvalidBundleID",
    "JavascriptException",
    "InvalidSessionTicket",
    "UnableToConnectToDatabase",
    "InternalServerError",
    "InvalidReportDate",
    "ReportNotAvailable",
    "DatabaseThroughputExceeded",
    "InvalidGameTicket",
    "ExpiredGameTicket",
    "GameTicketDoesNotMatchLobby",
    "LinkedDeviceAlreadyClaimed",
    "DeviceAlreadyLinked",
    "DeviceNotLinked",
    "PartialFailure",
    "PublisherNotSet",
    "ServiceUnavailable",
    "VersionNotFound",
    "RevisionNotFound",
    "InvalidPublisherId",
    "DownstreamServiceUnavailable",
    "APINotIncludedInTitleUsageTier",
    "DAULimitExceeded",
    "APIRequestLimitExceeded",
    "InvalidAPIEndpoint",
    "BuildNotAvailable",
    "ConcurrentEditError",
    "ContentNotFound",
    "CharacterNotFound",
    "CloudScriptNotFound",
    "ContentQuotaExceeded",
    "InvalidCharacterStatistics",
    "PhotonNotEnabledForTitle",
    "PhotonApplicationNotFound",
    "PhotonApplicationNotAssociatedWithTitle",
    "InvalidEmailOrPassword",
    "FacebookAPIError",
    "InvalidContentType",
    "KeyLengthExceeded",
    "DataLengthExceeded",
    "TooManyKeys",
    "FreeTierCannotHaveVirtualCurrency",
    "MissingAmazonSharedKey",
    "AmazonValidationError",
    "InvalidPSNIssuerId",
    "PSNInaccessible",
    "ExpiredAuthToken",
    "FailedToGetEntitlements",
    "FailedToConsumeEntitlement",
    "TradeAcceptingUserNotAllowed",
    "TradeInventoryItemIsAssignedToCharacter",
    "TradeInventoryItemIsBundle",
    "TradeStatusNotValidForCancelling",
    "TradeStatusNotValidForAccepting",
    "TradeDoesNotExist",
    "TradeCancelled",
    "TradeAlreadyFilled",
    "TradeWaitForStatusTimeout",
    "TradeInventoryItemExpired",
    "TradeMissingOfferedAndAcceptedItems",
    "TradeAcceptedItemIsBundle",
    "TradeAcceptedItemIsStackable",
    "TradeInventoryItemInvalidStatus",
    "TradeAcceptedCatalogItemInvalid",
    "TradeAllowedUsersInvalid",
    "TradeInventoryItemDoesNotExist",
    "TradeInventoryItemIsConsumed",
    "TradeInventoryItemIsStackable",
    "TradeAcceptedItemsMismatch",
    "InvalidKongregateToken",
    "FeatureNotConfiguredForTitle",
    "NoMatchingCatalogItemForReceipt",
    "InvalidCurrencyCode",
    "NoRealMoneyPriceForCatalogItem",
    "TradeInventoryItemIsNotTradable",
    "TradeAcceptedCatalogItemIsNotTradable",
    "UsersAlreadyFriends",
    "LinkedIdentifierAlreadyClaimed",
    "CustomIdNotLinked",
    "TotalDataSizeExceeded",
    "DeleteKeyConflict",
    "InvalidXboxLiveToken",
    "ExpiredXboxLiveToken",
    "ResettableStatisticVersionRequired",
    "NotAuthorizedByTitle",
    "NoPartnerEnabled",
    "InvalidPartnerResponse",
    "APINotEnabledForGameServerAccess",
    "StatisticNotFound",
    "StatisticNameConflict",
    "StatisticVersionClosedForWrites",
    "StatisticVersionInvalid",
    "APIClientRequestRateLimitExceeded",
    "InvalidJSONContent",
    "InvalidDropTable",
    "StatisticVersionAlreadyIncrementedForScheduledInterval",
    "StatisticCountLimitExceeded",
    "StatisticVersionIncrementRateExceeded",
    "ContainerKeyInvalid",
    "CloudScriptExecutionTimeLimitExceeded",
    "NoWritePermissionsForEvent",
    "CloudScriptFunctionArgumentSizeExceeded",
    "CloudScriptAPIRequestCountExceeded",
    "CloudScriptAPIRequestError",
    "CloudScriptHTTPRequestError",
    "InsufficientGuildRole",
    "GuildNotFound",
    "OverLimit",
    "EventNotFound",
    "InvalidEventField",
    "InvalidEventName",
    "CatalogNotConfigured",
    "OperationNotSupportedForPlatform",
    "SegmentNotFound",
    "StoreNotFound",
    "InvalidStatisticName",
    "TitleNotQualifiedForLimit",
    "InvalidServiceLimitLevel",
    "ServiceLimitLevelInTransition",
    "CouponAlreadyRedeemed",
    "GameServerBuildSizeLimitExceeded",
    "GameServerBuildCountLimitExceeded",
    "VirtualCurrencyCountLimitExceeded",
    "VirtualCurrencyCodeExists",
    "TitleNewsItemCountLimitExceeded",
    "InvalidTwitchToken",
    "TwitchResponseError",
    "ProfaneDisplayName",
    "UserAlreadyAdded",
    "InvalidVirtualCurrencyCode",
    "VirtualCurrencyCannotBeDeleted",
    "IdentifierAlreadyClaimed",
    "IdentifierNotLinked",
    "InvalidContinuationToken",
    "ExpiredContinuationToken",
    "InvalidSegment",
    "InvalidSessionId",
    "SessionLogNotFound",
    "InvalidSearchTerm",
    "TwoFactorAuthenticationTokenRequired",
    "GameServerHostCountLimitExceeded",
    "PlayerTagCountLimitExceeded",
    "RequestAlreadyRunning",
    "ActionGroupNotFound",
    "MaximumSegmentBulkActionJobsRunning",
    "NoActionsOnPlayersInSegmentJob",
    "DuplicateStatisticName",
    "ScheduledTaskNameConflict",
    "ScheduledTaskCreateConflict",
    "InvalidScheduledTaskName",
    "InvalidTaskSchedule",
    "SteamNotEnabledForTitle",
    "LimitNotAnUpgradeOption",
    "NoSecretKeyEnabledForCloudScript",
    "TaskNotFound",
    "TaskInstanceNotFound",
    "InvalidIdentityProviderId",
    "MisconfiguredIdentityProvider",
    "InvalidScheduledTaskType",
    "BillingInformationRequired",
    "LimitedEditionItemUnavailable",
    "InvalidAdPlacementAndReward",
    "AllAdPlacementViewsAlreadyConsumed",
    "GoogleOAuthNotConfiguredForTitle",
    "GoogleOAuthError",
    "UserNotFriend",
    "InvalidSignature",
    "InvalidPublicKey",
    "GoogleOAuthNoIdTokenIncludedInResponse",
    "StatisticUpdateInProgress",
    "LeaderboardVersionNotAvailable",
    "StatisticAlreadyHasPrizeTable",
    "PrizeTableHasOverlappingRanks",
    "PrizeTableHasMissingRanks",
    "PrizeTableRankStartsAtZero",
    "InvalidStatistic",
    "ExpressionParseFailure",
    "ExpressionInvokeFailure",
    "ExpressionTooLong",
    "DataUpdateRateExceeded",
    "RestrictedEmailDomain",
    "EncryptionKeyDisabled",
    "EncryptionKeyMissing",
    "EncryptionKeyBroken",
    "NoSharedSecretKeyConfigured",
    "SecretKeyNotFound",
    "PlayerSecretAlreadyConfigured",
    "APIRequestsDisabledForTitle",
    "InvalidSharedSecretKey",
    "PrizeTableHasNoRanks",
    "ProfileDoesNotExist",
    "ContentS3OriginBucketNotConfigured",
    "InvalidEnvironmentForReceipt",
    "EncryptedRequestNotAllowed",
    "SignedRequestNotAllowed",
    "RequestViewConstraintParamsNotAllowed",
    "BadPartnerConfiguration",
    "XboxBPCertificateFailure",
    "XboxXASSExchangeFailure",
    "InvalidEntityId",
    "StatisticValueAggregationOverflow",
    "EmailMessageFromAddressIsMissing",
    "EmailMessageToAddressIsMissing",
    "SmtpServerAuthenticationError",
    "SmtpServerLimitExceeded",
    "SmtpServerInsufficientStorage",
    "SmtpServerCommunicationError",
    "SmtpServerGeneralFailure",
    "EmailClientTimeout",
    "EmailClientCanceledTask",
    "EmailTemplateMissing",
    "InvalidHostForTitleId",
    "EmailConfirmationTokenDoesNotExist",
    "EmailConfirmationTokenExpired",
    "AccountDeleted",
    "PlayerSecretNotConfigured",
    "InvalidSignatureTime",
    "NoContactEmailAddressFound",
    "InvalidAuthToken",
    "AuthTokenDoesNotExist",
    "AuthTokenExpired",
    "AuthTokenAlreadyUsedToResetPassword",
    "MembershipNameTooLong",
    "MembershipNotFound",
    "GoogleServiceAccountInvalid",
    "GoogleServiceAccountParseFailure",
    "EntityTokenMissing",
    "EntityTokenInvalid",
    "EntityTokenExpired",
    "EntityTokenRevoked",
    "InvalidProductForSubscription",
    "XboxInaccessible",
    "SubscriptionAlreadyTaken",
    "SmtpAddonNotEnabled",
    "APIConcurrentRequestLimitExceeded",
    "XboxRejectedXSTSExchangeRequest",
    "VariableNotDefined",
    "TemplateVersionNotDefined",
    "FileTooLarge",
    "TitleDeleted",
    "TitleContainsUserAccounts",
    "TitleDeletionPlayerCleanupFailure",
    "EntityFileOperationPending",
    "NoEntityFileOperationPending",
    "EntityProfileVersionMismatch",
    "TemplateVersionTooOld",
    "MembershipDefinitionInUse",
    "PaymentPageNotConfigured",
    "FailedLoginAttemptRateLimitExceeded",
    "EntityBlockedByGroup",
    "RoleDoesNotExist",
    "EntityIsAlreadyMember",
    "DuplicateRoleId",
    "GroupInvitationNotFound",
    "GroupApplicationNotFound",
    "OutstandingInvitationAcceptedInstead",
    "OutstandingApplicationAcceptedInstead",
    "RoleIsGroupDefaultMember",
    "RoleIsGroupAdmin",
    "RoleNameNotAvailable",
    "GroupNameNotAvailable",
    "EmailReportAlreadySent",
    "EmailReportRecipientBlacklisted",
    "EventNamespaceNotAllowed",
    "EventEntityNotAllowed",
    "InvalidEntityType",
    "NullTokenResultFromAad",
    "InvalidTokenResultFromAad",
    "NoValidCertificateForAad",
    "InvalidCertificateForAad",
    "DuplicateDropTableId",
    "GameServerOk",
    "GameServerAccepted",
    "GameServerNoContent",
    "GameServerBadRequest",
    "GameServerUnauthorized",
    "GameServerForbidden",
    "GameServerNotFound",
    "GameServerConflict",
    "GameServerInternalServerError",
    "GameServerServiceUnavailable",
    "ExplicitContentDetected",
    "PIIContentDetected",
    "InvalidScheduledTaskParameter",
    "PerEntityEventRateLimitExceeded",
    "MatchmakingEntityInvalid",
    "MatchmakingPlayerAttributesInvalid",
    "MatchmakingCreateRequestMissing",
    "MatchmakingCreateRequestCreatorMissing",
    "MatchmakingCreateRequestCreatorIdMissing",
    "MatchmakingCreateRequestUserListMissing",
    "MatchmakingCreateRequestGiveUpAfterInvalid",
    "MatchmakingTicketIdMissing",
    "MatchmakingMatchIdMissing",
    "MatchmakingMatchIdIdMissing",
    "MatchmakingQueueNameMissing",
    "MatchmakingTitleIdMissing",
    "MatchmakingTicketIdIdMissing",
    "MatchmakingPlayerIdMissing",
    "MatchmakingJoinRequestUserMissing",
    "MatchmakingQueueConfigNotFound",
    "MatchmakingMatchNotFound",
    "MatchmakingTicketNotFound",
    "MatchmakingCreateTicketServerIdentityInvalid",
    "MatchmakingCreateTicketClientIdentityInvalid",
    "MatchmakingGetTicketUserMismatch",
    "MatchmakingJoinTicketServerIdentityInvalid",
    "MatchmakingJoinTicketUserIdentityMismatch",
    "MatchmakingCancelTicketServerIdentityInvalid",
    "MatchmakingCancelTicketUserIdentityMismatch",
    "MatchmakingGetMatchIdentityMismatch",
    "MatchmakingPlayerIdentityMismatch",
    "MatchmakingAlreadyJoinedTicket",
    "MatchmakingTicketAlreadyCompleted",
    "MatchmakingQueueNameInvalid",
    "MatchmakingQueueConfigInvalid",
    "MatchmakingMemberProfileInvalid",
    "WriteAttemptedDuringExport",
    "NintendoSwitchDeviceIdNotLinked",
    "MatchmakingNotEnabled"
  ]
}
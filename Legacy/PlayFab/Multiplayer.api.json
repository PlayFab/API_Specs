{
  "name": "Multiplayer",
  "url": "/Multiplayer",
  "description": "API methods for managing multiplayer servers.",
  "apiDescriptionList": [
    "API methods for managing multiplayer servers."
  ],
  "datatypes": {
    "AssetReference": {
      "name": "AssetReference",
      "className": "AssetReference",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "properties": [
        {
          "name": "FileName",
          "description": "The asset's file name. This is a filename with the .zip, .tar, or .tar.gz extension.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "MountPath",
          "description": "The asset's mount path.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "AssetReferenceParams": {
      "name": "AssetReferenceParams",
      "className": "AssetReferenceParams",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "properties": [
        {
          "name": "FileName",
          "description": "The asset's file name. This must be a filename with the .zip, .tar, or .tar.gz extension.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        },
        {
          "name": "MountPath",
          "description": "The asset's mount path.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        }
      ]
    },
    "AssetSummary": {
      "name": "AssetSummary",
      "className": "AssetSummary",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "properties": [
        {
          "name": "FileName",
          "description": "The asset's file name. This is a filename with the .zip, .tar, or .tar.gz extension.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "Metadata",
          "description": "The metadata associated with the asset.",
          "collection": "map",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "AzureRegion": {
      "name": "AzureRegion",
      "className": "AzureRegion",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "isenum": true,
      "enumvalues": [
        {
          "name": "AustraliaEast"
        },
        {
          "name": "AustraliaSoutheast"
        },
        {
          "name": "BrazilSouth"
        },
        {
          "name": "CentralUs"
        },
        {
          "name": "EastAsia"
        },
        {
          "name": "EastUs"
        },
        {
          "name": "EastUs2"
        },
        {
          "name": "JapanEast"
        },
        {
          "name": "JapanWest"
        },
        {
          "name": "NorthCentralUs"
        },
        {
          "name": "NorthEurope"
        },
        {
          "name": "SouthCentralUs"
        },
        {
          "name": "SoutheastAsia"
        },
        {
          "name": "WestEurope"
        },
        {
          "name": "WestUs"
        }
      ]
    },
    "AzureVmSize": {
      "name": "AzureVmSize",
      "className": "AzureVmSize",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "isenum": true,
      "enumvalues": [
        {
          "name": "Standard_D1_v2"
        },
        {
          "name": "Standard_D2_v2"
        },
        {
          "name": "Standard_D3_v2"
        },
        {
          "name": "Standard_D4_v2"
        },
        {
          "name": "Standard_D5_v2"
        },
        {
          "name": "Standard_A1_v2"
        },
        {
          "name": "Standard_A2_v2"
        },
        {
          "name": "Standard_A4_v2"
        },
        {
          "name": "Standard_A8_v2"
        },
        {
          "name": "Standard_A1"
        },
        {
          "name": "Standard_A2"
        },
        {
          "name": "Standard_A3"
        },
        {
          "name": "Standard_A4"
        }
      ]
    },
    "BuildRegion": {
      "name": "BuildRegion",
      "className": "BuildRegion",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "properties": [
        {
          "name": "MaxServers",
          "description": "The maximum number of multiplayer servers for the region.",
          "jsontype": "Number",
          "actualtype": "int32",
          "optional": false
        },
        {
          "name": "Region",
          "description": "The build region.",
          "jsontype": "String",
          "actualtype": "AzureRegion",
          "isenum": true,
          "optional": true
        },
        {
          "name": "StandbyServers",
          "description": "The number of standby multiplayer servers for the region.",
          "jsontype": "Number",
          "actualtype": "int32",
          "optional": false
        },
        {
          "name": "Status",
          "description": "The status of multiplayer servers in the build region.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "BuildRegionParams": {
      "name": "BuildRegionParams",
      "className": "BuildRegionParams",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "properties": [
        {
          "name": "MaxServers",
          "description": "The maximum number of multiplayer servers for the region.",
          "jsontype": "Number",
          "actualtype": "int32",
          "optional": false
        },
        {
          "name": "Region",
          "description": "The build region.",
          "jsontype": "String",
          "actualtype": "AzureRegion",
          "isenum": true,
          "optional": false
        },
        {
          "name": "StandbyServers",
          "description": "The number of standby multiplayer servers for the region.",
          "jsontype": "Number",
          "actualtype": "int32",
          "optional": false
        }
      ]
    },
    "BuildSummary": {
      "name": "BuildSummary",
      "className": "BuildSummary",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "properties": [
        {
          "name": "BuildId",
          "description": "The guid string build ID of the build.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "BuildName",
          "description": "The build name.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "CreationTime",
          "description": "The time the build was created in UTC.",
          "jsontype": "String",
          "actualtype": "DateTime",
          "optional": true
        },
        {
          "name": "Metadata",
          "description": "The metadata of the build.",
          "collection": "map",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "CancellationReason": {
      "name": "CancellationReason",
      "className": "CancellationReason",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isenum": true,
      "enumvalues": [
        {
          "name": "Requested"
        },
        {
          "name": "Internal"
        },
        {
          "name": "Timeout"
        }
      ]
    },
    "CancelMatchmakingTicketRequest": {
      "name": "CancelMatchmakingTicketRequest",
      "className": "CancelMatchmakingTicketRequest",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "description": "Only servers and ticket members can cancel a ticket.\r\n\r\n                The ticket can be in four different states when it is cancelled.\r\n                1: the ticket is waiting for members to join it, and it has not started matching.\r\n                    If the ticket is cancelled at this stage, it will never match.\r\n                2: the ticket is matching. If the ticket is cancelled, it will stop matching.\r\n                3: the ticket is matched. A matched ticket cannot be cancelled.\r\n                4: the ticket is already cancelled and nothing happens.\r\n\r\n                There may be race conditions between the ticket getting matched and\r\n                the client making a cancellation request. The client must handle the possibility\r\n                that the cancel request fails if a match is found before the cancellation request is processed.\r\n                We do not allow resubmitting a cancelled ticket because players\r\n                must consent to enter matchmaking again. Create a new ticket instead.",
      "isRequest": true,
      "properties": [
        {
          "name": "QueueName",
          "description": "The Id of the queue to join.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        },
        {
          "name": "TicketId",
          "description": "The Id of the ticket to find a match for.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        }
      ]
    },
    "CancelMatchmakingTicketResult": {
      "name": "CancelMatchmakingTicketResult",
      "className": "CancelMatchmakingTicketResult",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isResult": true,
      "properties": []
    },
    "Certificate": {
      "name": "Certificate",
      "className": "Certificate",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "properties": [
        {
          "name": "Base64EncodedValue",
          "description": "Base64 encoded string contents of the certificate.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        },
        {
          "name": "Name",
          "description": "A name for the certificate. This is used to reference certificates in build configurations.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        },
        {
          "name": "Password",
          "description": "If required for your PFX certificate, use this field to provide a password that will be used to install the certificate on the container.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "CertificateSummary": {
      "name": "CertificateSummary",
      "className": "CertificateSummary",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "properties": [
        {
          "name": "Name",
          "description": "The name of the certificate.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "Thumbprint",
          "description": "The thumbprint for the certificate.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "CognitiveServicesType": {
      "name": "CognitiveServicesType",
      "className": "CognitiveServicesType",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isenum": true,
      "enumvalues": [
        {
          "name": "SpeechToText"
        },
        {
          "name": "TextToSpeech"
        }
      ]
    },
    "ConnectedPlayer": {
      "name": "ConnectedPlayer",
      "className": "ConnectedPlayer",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "properties": [
        {
          "name": "PlayerId",
          "description": "The player ID of the player connected to the multiplayer server.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "ContainerFlavor": {
      "name": "ContainerFlavor",
      "className": "ContainerFlavor",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "isenum": true,
      "enumvalues": [
        {
          "name": "ManagedWindowsServerCore"
        },
        {
          "name": "CustomLinux"
        },
        {
          "name": "ManagedWindowsServerCorePreview"
        }
      ]
    },
    "ContainerImageReference": {
      "name": "ContainerImageReference",
      "className": "ContainerImageReference",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "properties": [
        {
          "name": "ImageName",
          "description": "The container image name.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        },
        {
          "name": "Tag",
          "description": "The container tag.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "CreateBuildWithCustomContainerRequest": {
      "name": "CreateBuildWithCustomContainerRequest",
      "className": "CreateBuildWithCustomContainerRequest",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "description": "Creates a multiplayer server build with a custom container and returns information about the build creation request.",
      "isRequest": true,
      "properties": [
        {
          "name": "BuildName",
          "description": "The build name.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        },
        {
          "name": "ContainerFlavor",
          "description": "The flavor of container to create a build from.",
          "jsontype": "String",
          "actualtype": "ContainerFlavor",
          "isenum": true,
          "optional": true
        },
        {
          "name": "ContainerRepositoryName",
          "description": "The name of the container repository.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        },
        {
          "name": "ContainerRunCommand",
          "description": "The container command to run when the multiplayer server has been allocated, including any arguments.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "ContainerTag",
          "description": "The tag for the container.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "GameAssetReferences",
          "description": "The list of game assets related to the build.",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "AssetReferenceParams",
          "isclass": true,
          "optional": true
        },
        {
          "name": "GameCertificateReferences",
          "description": "The game certificates for the build.",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "GameCertificateReferenceParams",
          "isclass": true,
          "optional": true
        },
        {
          "name": "Metadata",
          "description": "Metadata to tag the build.",
          "collection": "map",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "MultiplayerServerCountPerVm",
          "description": "The number of multiplayer servers to host on a single VM.",
          "jsontype": "Number",
          "actualtype": "int32",
          "optional": false
        },
        {
          "name": "Ports",
          "description": "The ports to map the build on.",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "Port",
          "isclass": true,
          "optional": false
        },
        {
          "name": "RegionConfigurations",
          "description": "The region configurations for the build.",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "BuildRegionParams",
          "isclass": true,
          "optional": false
        },
        {
          "name": "VmSize",
          "description": "The VM size to create the build on.",
          "jsontype": "String",
          "actualtype": "AzureVmSize",
          "isenum": true,
          "optional": true
        }
      ]
    },
    "CreateBuildWithCustomContainerResponse": {
      "name": "CreateBuildWithCustomContainerResponse",
      "className": "CreateBuildWithCustomContainerResponse",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "isResult": true,
      "properties": [
        {
          "name": "BuildId",
          "description": "The guid string build ID. Must be unique for every build.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "BuildName",
          "description": "The build name.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "ContainerFlavor",
          "description": "The flavor of container of the build.",
          "jsontype": "String",
          "actualtype": "ContainerFlavor",
          "isenum": true,
          "optional": true
        },
        {
          "name": "ContainerRunCommand",
          "description": "The container command to run when the multiplayer server has been allocated, including any arguments.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "CreationTime",
          "description": "The time the build was created in UTC.",
          "jsontype": "String",
          "actualtype": "DateTime",
          "optional": true
        },
        {
          "name": "CustomGameContainerImage",
          "description": "The custom game container image reference information.",
          "jsontype": "Object",
          "actualtype": "ContainerImageReference",
          "isclass": true,
          "optional": true
        },
        {
          "name": "GameAssetReferences",
          "description": "The game assets for the build.",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "AssetReference",
          "isclass": true,
          "optional": true
        },
        {
          "name": "GameCertificateReferences",
          "description": "The game certificates for the build.",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "GameCertificateReference",
          "isclass": true,
          "optional": true
        },
        {
          "name": "Metadata",
          "description": "The metadata of the build.",
          "collection": "map",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "MultiplayerServerCountPerVm",
          "description": "The number of multiplayer servers to host on a single VM of the build.",
          "jsontype": "Number",
          "actualtype": "int32",
          "optional": false
        },
        {
          "name": "Ports",
          "description": "The ports the build is mapped on.",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "Port",
          "isclass": true,
          "optional": true
        },
        {
          "name": "RegionConfigurations",
          "description": "The region configuration for the build.",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "BuildRegion",
          "isclass": true,
          "optional": true
        },
        {
          "name": "VmSize",
          "description": "The VM size the build was created on.",
          "jsontype": "String",
          "actualtype": "AzureVmSize",
          "isenum": true,
          "optional": true
        }
      ]
    },
    "CreateBuildWithManagedContainerRequest": {
      "name": "CreateBuildWithManagedContainerRequest",
      "className": "CreateBuildWithManagedContainerRequest",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "description": "Creates a multiplayer server build with a managed container and returns information about the build creation request.",
      "isRequest": true,
      "properties": [
        {
          "name": "BuildName",
          "description": "The build name.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        },
        {
          "name": "ContainerFlavor",
          "description": "The flavor of container to create a build from.",
          "jsontype": "String",
          "actualtype": "ContainerFlavor",
          "isenum": true,
          "optional": true
        },
        {
          "name": "GameAssetReferences",
          "description": "The list of game assets related to the build.",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "AssetReferenceParams",
          "isclass": true,
          "optional": false
        },
        {
          "name": "GameCertificateReferences",
          "description": "The game certificates for the build.",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "GameCertificateReferenceParams",
          "isclass": true,
          "optional": true
        },
        {
          "name": "Metadata",
          "description": "Metadata to tag the build.",
          "collection": "map",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "MultiplayerServerCountPerVm",
          "description": "The number of multiplayer servers to host on a single VM.",
          "jsontype": "Number",
          "actualtype": "int32",
          "optional": false
        },
        {
          "name": "Ports",
          "description": "The ports to map the build on.",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "Port",
          "isclass": true,
          "optional": false
        },
        {
          "name": "RegionConfigurations",
          "description": "The region configurations for the build.",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "BuildRegionParams",
          "isclass": true,
          "optional": false
        },
        {
          "name": "StartMultiplayerServerCommand",
          "description": "The command to run when the multiplayer server is started, including any arguments.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        },
        {
          "name": "VmSize",
          "description": "The VM size to create the build on.",
          "jsontype": "String",
          "actualtype": "AzureVmSize",
          "isenum": true,
          "optional": true
        }
      ]
    },
    "CreateBuildWithManagedContainerResponse": {
      "name": "CreateBuildWithManagedContainerResponse",
      "className": "CreateBuildWithManagedContainerResponse",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "isResult": true,
      "properties": [
        {
          "name": "BuildId",
          "description": "The guid string build ID. Must be unique for every build.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "BuildName",
          "description": "The build name.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "ContainerFlavor",
          "description": "The flavor of container of the build.",
          "jsontype": "String",
          "actualtype": "ContainerFlavor",
          "isenum": true,
          "optional": true
        },
        {
          "name": "CreationTime",
          "description": "The time the build was created in UTC.",
          "jsontype": "String",
          "actualtype": "DateTime",
          "optional": true
        },
        {
          "name": "GameAssetReferences",
          "description": "The game assets for the build.",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "AssetReference",
          "isclass": true,
          "optional": true
        },
        {
          "name": "GameCertificateReferences",
          "description": "The game certificates for the build.",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "GameCertificateReference",
          "isclass": true,
          "optional": true
        },
        {
          "name": "Metadata",
          "description": "The metadata of the build.",
          "collection": "map",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "MultiplayerServerCountPerVm",
          "description": "The number of multiplayer servers to host on a single VM of the build.",
          "jsontype": "Number",
          "actualtype": "int32",
          "optional": false
        },
        {
          "name": "Ports",
          "description": "The ports the build is mapped on.",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "Port",
          "isclass": true,
          "optional": true
        },
        {
          "name": "RegionConfigurations",
          "description": "The region configuration for the build.",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "BuildRegion",
          "isclass": true,
          "optional": true
        },
        {
          "name": "StartMultiplayerServerCommand",
          "description": "The command to run when the multiplayer server has been allocated, including any arguments.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "VmSize",
          "description": "The VM size the build was created on.",
          "jsontype": "String",
          "actualtype": "AzureVmSize",
          "isenum": true,
          "optional": true
        }
      ]
    },
    "CreateMatchmakingTicketRequest": {
      "name": "CreateMatchmakingTicketRequest",
      "className": "CreateMatchmakingTicketRequest",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "description": "The client specifies the creator's attributes and optionally a list of other users to match with.",
      "isRequest": true,
      "properties": [
        {
          "name": "Creator",
          "description": "The User who created this ticket.",
          "jsontype": "Object",
          "actualtype": "MatchmakingPlayer",
          "isclass": true,
          "optional": false
        },
        {
          "name": "GiveUpAfterSeconds",
          "description": "How long to attempt matching this ticket in seconds.",
          "jsontype": "Number",
          "actualtype": "int32",
          "optional": false
        },
        {
          "name": "MembersToMatchWith",
          "description": "A list of Entity Keys of other users to match with.",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "EntityKey",
          "isclass": true,
          "optional": true
        },
        {
          "name": "QueueName",
          "description": "The Id of a match queue.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        }
      ]
    },
    "CreateMatchmakingTicketResult": {
      "name": "CreateMatchmakingTicketResult",
      "className": "CreateMatchmakingTicketResult",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isResult": true,
      "properties": [
        {
          "name": "TicketId",
          "description": "The Id of the ticket to find a match for.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        }
      ]
    },
    "CreateRemoteUserRequest": {
      "name": "CreateRemoteUserRequest",
      "className": "CreateRemoteUserRequest",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "description": "Creates a remote user to log on to a VM for a multiplayer server build in a specific region. Returns user credential information necessary to log on.",
      "isRequest": true,
      "properties": [
        {
          "name": "BuildId",
          "description": "The guid string build ID of to create the remote user for.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        },
        {
          "name": "ExpirationTime",
          "description": "The expiration time for the remote user created. Defaults to expiring in one day if not specified.",
          "jsontype": "String",
          "actualtype": "DateTime",
          "optional": true
        },
        {
          "name": "Region",
          "description": "The region of virtual machine to create the remote user for.",
          "jsontype": "String",
          "actualtype": "AzureRegion",
          "isenum": true,
          "optional": false
        },
        {
          "name": "Username",
          "description": "The username to create the remote user with.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        },
        {
          "name": "VmId",
          "description": "The virtual machine ID the multiplayer server is located on.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        }
      ]
    },
    "CreateRemoteUserResponse": {
      "name": "CreateRemoteUserResponse",
      "className": "CreateRemoteUserResponse",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "isResult": true,
      "properties": [
        {
          "name": "ExpirationTime",
          "description": "The expiration time for the remote user created.",
          "jsontype": "String",
          "actualtype": "DateTime",
          "optional": true
        },
        {
          "name": "Password",
          "description": "The generated password for the remote user that was created.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "Username",
          "description": "The username for the remote user that was created.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "CreateServerMatchmakingTicketRequest": {
      "name": "CreateServerMatchmakingTicketRequest",
      "className": "CreateServerMatchmakingTicketRequest",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "description": "The server specifies all the members and their attributes.",
      "isRequest": true,
      "properties": [
        {
          "name": "GiveUpAfterSeconds",
          "description": "How long to attempt matching this ticket in seconds.",
          "jsontype": "Number",
          "actualtype": "int32",
          "optional": false
        },
        {
          "name": "Members",
          "description": "The users who will be part of this ticket.",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "MatchmakingPlayer",
          "isclass": true,
          "optional": false
        },
        {
          "name": "QueueName",
          "description": "The Id of a match queue.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        }
      ]
    },
    "DeleteAssetRequest": {
      "name": "DeleteAssetRequest",
      "className": "DeleteAssetRequest",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "description": "Deletes a multiplayer server game asset for a title.",
      "isRequest": true,
      "properties": [
        {
          "name": "FileName",
          "description": "The filename of the asset to delete. This must be a filename with the .zip, .tar, or .tar.gz extension.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        }
      ]
    },
    "DeleteBuildRequest": {
      "name": "DeleteBuildRequest",
      "className": "DeleteBuildRequest",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "description": "Deletes a multiplayer server build.",
      "isRequest": true,
      "properties": [
        {
          "name": "BuildId",
          "description": "The guid string build ID of the build to delete.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        }
      ]
    },
    "DeleteCertificateRequest": {
      "name": "DeleteCertificateRequest",
      "className": "DeleteCertificateRequest",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "description": "Deletes a multiplayer server game certificate.",
      "isRequest": true,
      "properties": [
        {
          "name": "Name",
          "description": "The name of the certificate.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        }
      ]
    },
    "DeleteRemoteUserRequest": {
      "name": "DeleteRemoteUserRequest",
      "className": "DeleteRemoteUserRequest",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "description": "Deletes a remote user to log on to a VM for a multiplayer server build in a specific region. Returns user credential information necessary to log on.",
      "isRequest": true,
      "properties": [
        {
          "name": "BuildId",
          "description": "The guid string build ID of the multiplayer server where the remote user is to delete.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        },
        {
          "name": "Region",
          "description": "The region of the multiplayer server where the remote user is to delete.",
          "jsontype": "String",
          "actualtype": "AzureRegion",
          "isenum": true,
          "optional": false
        },
        {
          "name": "Username",
          "description": "The username of the remote user to delete.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        },
        {
          "name": "VmId",
          "description": "The virtual machine ID the multiplayer server is located on.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        }
      ]
    },
    "EmptyResponse": {
      "name": "EmptyResponse",
      "className": "EmptyResponse",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "isResult": true,
      "properties": []
    },
    "EnableMultiplayerServersForTitleRequest": {
      "name": "EnableMultiplayerServersForTitleRequest",
      "className": "EnableMultiplayerServersForTitleRequest",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "description": "Enables the multiplayer server feature for a title and returns the enabled status. The enabled status can be Initializing, Enabled, and Disabled. It can up to 20 minutes or more for the title to be enabled for the feature. On average, it can take up to 20 minutes for the title to be enabled for the feature.",
      "isRequest": true,
      "properties": []
    },
    "EnableMultiplayerServersForTitleResponse": {
      "name": "EnableMultiplayerServersForTitleResponse",
      "className": "EnableMultiplayerServersForTitleResponse",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "isResult": true,
      "properties": [
        {
          "name": "Status",
          "description": "The enabled status for the multiplayer server features for the title.",
          "jsontype": "String",
          "actualtype": "TitleMultiplayerServerEnabledStatus",
          "isenum": true,
          "optional": true
        }
      ]
    },
    "EntityKey": {
      "name": "EntityKey",
      "className": "EntityKey",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "description": "Combined entity type and ID structure which uniquely identifies a single entity.",
      "properties": [
        {
          "name": "Id",
          "description": "Unique ID of the entity.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        },
        {
          "name": "Type",
          "description": "Entity type. See https://api.playfab.com/docs/tutorials/entities/entitytypes",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "TypeString",
          "description": "Alternate name for Type.",
          "deprecation": {
            "ProposedAfter": "6/1/2018",
            "DeprecatedAfter": "7/1/2018",
            "ObsoleteAfter": "8/1/2018",
            "ReplacedBy": "Type"
          },
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "GameCertificateReference": {
      "name": "GameCertificateReference",
      "className": "GameCertificateReference",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "properties": [
        {
          "name": "GsdkAlias",
          "description": "An alias for the game certificate. The game server will reference this alias via GSDK config to retrieve the game certificate. This alias is used as an identifier in game server code to allow a new certificate with different Name field to be uploaded without the need to change any game server code to reference the new Name.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "Name",
          "description": "The name of the game certificate. This name should match the name of a certificate that was previously uploaded to this title.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "GameCertificateReferenceParams": {
      "name": "GameCertificateReferenceParams",
      "className": "GameCertificateReferenceParams",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "properties": [
        {
          "name": "GsdkAlias",
          "description": "An alias for the game certificate. The game server will reference this alias via GSDK config to retrieve the game certificate. This alias is used as an identifier in game server code to allow a new certificate with different Name field to be uploaded without the need to change any game server code to reference the new Name.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        },
        {
          "name": "Name",
          "description": "The name of the game certificate. This name should match the name of a certificate that was previously uploaded to this title.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        }
      ]
    },
    "GetAssetUploadUrlRequest": {
      "name": "GetAssetUploadUrlRequest",
      "className": "GetAssetUploadUrlRequest",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "description": "Gets the URL to upload assets to.",
      "isRequest": true,
      "properties": [
        {
          "name": "FileName",
          "description": "The asset's file name to get the upload URL for. This must be a filename with the .zip, .tar, or .tar.gz extension.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        }
      ]
    },
    "GetAssetUploadUrlResponse": {
      "name": "GetAssetUploadUrlResponse",
      "className": "GetAssetUploadUrlResponse",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "isResult": true,
      "properties": [
        {
          "name": "AssetUploadUrl",
          "description": "The asset's upload URL.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "FileName",
          "description": "The asset's file name to get the upload URL for. This must be a filename will be a file with the .zip, .tar, or .tar.gz extension.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "GetBuildRequest": {
      "name": "GetBuildRequest",
      "className": "GetBuildRequest",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "description": "Returns the details about a multiplayer server build.",
      "isRequest": true,
      "properties": [
        {
          "name": "BuildId",
          "description": "The guid string build ID of the build to get.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        }
      ]
    },
    "GetBuildResponse": {
      "name": "GetBuildResponse",
      "className": "GetBuildResponse",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "isResult": true,
      "properties": [
        {
          "name": "BuildId",
          "description": "The guid string build ID of the build.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "BuildName",
          "description": "The build name.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "BuildStatus",
          "description": "The current build status.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "ContainerFlavor",
          "description": "The flavor of container of he build.",
          "jsontype": "String",
          "actualtype": "ContainerFlavor",
          "isenum": true,
          "optional": true
        },
        {
          "name": "ContainerRunCommand",
          "description": "The container command to run when the multiplayer server has been allocated, including any arguments. This only applies to custom builds. If the build is a managed build, this field will be null.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "CreationTime",
          "description": "The time the build was created in UTC.",
          "jsontype": "String",
          "actualtype": "DateTime",
          "optional": true
        },
        {
          "name": "CustomGameContainerImage",
          "description": "The custom game container image for a custom build.",
          "jsontype": "Object",
          "actualtype": "ContainerImageReference",
          "isclass": true,
          "optional": true
        },
        {
          "name": "GameAssetReferences",
          "description": "The game assets for the build.",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "AssetReference",
          "isclass": true,
          "optional": true
        },
        {
          "name": "GameCertificateReferences",
          "description": "The game certificates for the build.",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "GameCertificateReference",
          "isclass": true,
          "optional": true
        },
        {
          "name": "Metadata",
          "description": "The metadata of the build.",
          "collection": "map",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "MultiplayerServerCountPerVm",
          "description": "The number of multiplayer servers to hosted on a single VM of the build.",
          "jsontype": "Number",
          "actualtype": "int32",
          "optional": false
        },
        {
          "name": "Ports",
          "description": "The ports the build is mapped on.",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "Port",
          "isclass": true,
          "optional": true
        },
        {
          "name": "RegionConfigurations",
          "description": "The region configuration for the build.",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "BuildRegion",
          "isclass": true,
          "optional": true
        },
        {
          "name": "StartMultiplayerServerCommand",
          "description": "The command to run when the multiplayer server has been allocated, including any arguments. This only applies to managed builds. If the build is a custom build, this field will be null.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "VmSize",
          "description": "The VM size the build was created on.",
          "jsontype": "String",
          "actualtype": "AzureVmSize",
          "isenum": true,
          "optional": true
        }
      ]
    },
    "GetCognitiveServicesTokenRequest": {
      "name": "GetCognitiveServicesTokenRequest",
      "className": "GetCognitiveServicesTokenRequest",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "description": "Gets a token for the cognitive services where translation queries can be sent to.",
      "isRequest": true,
      "properties": [
        {
          "name": "CognitiveServicesType",
          "description": "The type of the cognitive service for which a token is being requested.",
          "jsontype": "String",
          "actualtype": "CognitiveServicesType",
          "isenum": true,
          "optional": false
        },
        {
          "name": "Region",
          "description": "The region the client is closest to (A service endpoint will be provided for this region or one nearest one available).",
          "jsontype": "String",
          "actualtype": "AzureRegion",
          "isenum": true,
          "optional": false
        }
      ]
    },
    "GetCognitiveServicesTokenResponse": {
      "name": "GetCognitiveServicesTokenResponse",
      "className": "GetCognitiveServicesTokenResponse",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isResult": true,
      "properties": [
        {
          "name": "ServiceEndpoint",
          "description": "The url for the service where further requests can be made with the given token.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "Token",
          "description": "The token for the cognitive service.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "GetContainerRegistryCredentialsRequest": {
      "name": "GetContainerRegistryCredentialsRequest",
      "className": "GetContainerRegistryCredentialsRequest",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "description": "Gets credentials to the container registry where game developers can upload custom container images to before creating a new build.",
      "isRequest": true,
      "properties": []
    },
    "GetContainerRegistryCredentialsResponse": {
      "name": "GetContainerRegistryCredentialsResponse",
      "className": "GetContainerRegistryCredentialsResponse",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "isResult": true,
      "properties": [
        {
          "name": "DnsName",
          "description": "The url of the container registry.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "Password",
          "description": "The password for accessing the container registry.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "Username",
          "description": "The username for accessing the container registry.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "GetMatchmakingQueueRequest": {
      "name": "GetMatchmakingQueueRequest",
      "className": "GetMatchmakingQueueRequest",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "description": "Gets the current configuration for a queue.",
      "isRequest": true,
      "properties": [
        {
          "name": "QueueName",
          "description": "The Id of the matchmaking queue to retrieve.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "GetMatchmakingQueueResult": {
      "name": "GetMatchmakingQueueResult",
      "className": "GetMatchmakingQueueResult",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isResult": true,
      "properties": [
        {
          "name": "MatchmakingQueue",
          "description": "The matchmaking queue config.",
          "jsontype": "Object",
          "actualtype": "MatchmakingQueueConfig",
          "isclass": true,
          "optional": true
        }
      ]
    },
    "GetMatchmakingTicketRequest": {
      "name": "GetMatchmakingTicketRequest",
      "className": "GetMatchmakingTicketRequest",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "description": "The ticket includes the invited players, their attributes if they have joined,\r\n                the ticket status, the match Id when applicable, etc.\r\n                Only servers, the ticket creator and the invited players can get the ticket.",
      "isRequest": true,
      "properties": [
        {
          "name": "EscapeObject",
          "description": "Determines whether the matchmaking attributes will be returned as an escaped JSON string or as an un-escaped JSON object.",
          "jsontype": "Boolean",
          "actualtype": "Boolean",
          "optional": false
        },
        {
          "name": "QueueName",
          "description": "The Id of the queue to find a match for.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        },
        {
          "name": "TicketId",
          "description": "The Id of the ticket to find a match for.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        }
      ]
    },
    "GetMatchmakingTicketResult": {
      "name": "GetMatchmakingTicketResult",
      "className": "GetMatchmakingTicketResult",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isResult": true,
      "properties": [
        {
          "name": "CancellationReason",
          "description": "The reason why the current ticket was canceled. This field is only set if the ticket is in canceled state.",
          "jsontype": "String",
          "actualtype": "CancellationReason",
          "isenum": true,
          "optional": true
        },
        {
          "name": "Created",
          "description": "The server date and time at which ticket was created.",
          "jsontype": "String",
          "actualtype": "DateTime",
          "optional": false
        },
        {
          "name": "Creator",
          "description": "The Creator's entity key.",
          "jsontype": "Object",
          "actualtype": "EntityKey",
          "isclass": true,
          "optional": false
        },
        {
          "name": "GiveUpAfterSeconds",
          "description": "How long to attempt matching this ticket in seconds.",
          "jsontype": "Number",
          "actualtype": "int32",
          "optional": false
        },
        {
          "name": "MatchId",
          "description": "The Id of a match.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "Members",
          "description": "A list of Users that have joined this ticket.",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "MatchmakingPlayer",
          "isclass": true,
          "optional": false
        },
        {
          "name": "MembersToMatchWith",
          "description": "A list of PlayFab Ids of Users to match with.",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "EntityKey",
          "isclass": true,
          "optional": true
        },
        {
          "name": "QueueName",
          "description": "The Id of a match queue.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        },
        {
          "name": "Status",
          "description": "The current ticket status.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        },
        {
          "name": "TicketId",
          "description": "The Id of the ticket to find a match for.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        }
      ]
    },
    "GetMatchRequest": {
      "name": "GetMatchRequest",
      "className": "GetMatchRequest",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "description": "When matchmaking has successfully matched together a collection of\r\n                tickets, it produces a 'match' with an Id. The match contains all of\r\n                the players that were matched together, and their team assigments.\r\n\r\n                Only servers and ticket members can get the match.",
      "isRequest": true,
      "properties": [
        {
          "name": "EscapeObject",
          "description": "Determines whether the matchmaking attributes will be returned as an escaped JSON string or as an un-escaped JSON object.",
          "jsontype": "Boolean",
          "actualtype": "Boolean",
          "optional": false
        },
        {
          "name": "MatchId",
          "description": "The Id of a match.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        },
        {
          "name": "QueueName",
          "description": "The Id of the queue to join.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        }
      ]
    },
    "GetMatchResult": {
      "name": "GetMatchResult",
      "className": "GetMatchResult",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isResult": true,
      "properties": [
        {
          "name": "MatchId",
          "description": "The Id of a match.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        },
        {
          "name": "Members",
          "description": "A list of Users that are matched together, along with their team assignments.",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "MatchmakingPlayerWithTeamAssignment",
          "isclass": true,
          "optional": false
        },
        {
          "name": "RegionPreferences",
          "description": "A list of regions that the match could be played in sorted by preference. This value is only set if the queue has a region selection rule.",
          "collection": "array",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "ServerDetails",
          "description": "The details of the server that the match has been allocated to.",
          "jsontype": "Object",
          "actualtype": "ServerDetails",
          "isclass": true,
          "optional": true
        }
      ]
    },
    "GetMultiplayerServerDetailsRequest": {
      "name": "GetMultiplayerServerDetailsRequest",
      "className": "GetMultiplayerServerDetailsRequest",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "description": "Gets multiplayer server session details for a build in a specific region.",
      "isRequest": true,
      "properties": [
        {
          "name": "BuildId",
          "description": "The guid string build ID of the multiplayer server to get details for.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        },
        {
          "name": "Region",
          "description": "The region the multiplayer server is located in to get details for.",
          "jsontype": "String",
          "actualtype": "AzureRegion",
          "isenum": true,
          "optional": false
        },
        {
          "name": "SessionId",
          "description": "The title generated guid string session ID of the multiplayer server to get details for. This is to keep track of multiplayer server sessions.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        }
      ]
    },
    "GetMultiplayerServerDetailsResponse": {
      "name": "GetMultiplayerServerDetailsResponse",
      "className": "GetMultiplayerServerDetailsResponse",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "isResult": true,
      "properties": [
        {
          "name": "ConnectedPlayers",
          "description": "The connected players in the multiplayer server.",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "ConnectedPlayer",
          "isclass": true,
          "optional": true
        },
        {
          "name": "FQDN",
          "description": "The fully qualified domain name of the virtual machine that is hosting this multiplayer server.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "IPV4Address",
          "description": "The IPv4 address of the virtual machine that is hosting this multiplayer server.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "LastStateTransitionTime",
          "description": "The time (UTC) at which a change in the multiplayer server state was observed.",
          "jsontype": "String",
          "actualtype": "DateTime",
          "optional": true
        },
        {
          "name": "Ports",
          "description": "The ports the multiplayer server uses.",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "Port",
          "isclass": true,
          "optional": true
        },
        {
          "name": "Region",
          "description": "The region the multiplayer server is located in.",
          "jsontype": "String",
          "actualtype": "AzureRegion",
          "isenum": true,
          "optional": true
        },
        {
          "name": "ServerId",
          "description": "The string server ID of the multiplayer server generated by PlayFab.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "SessionId",
          "description": "The guid string session ID of the multiplayer server.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "State",
          "description": "The state of the multiplayer server.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "VmId",
          "description": "The virtual machine ID that the multiplayer server is located on.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "GetMultiplayerServerLogsRequest": {
      "name": "GetMultiplayerServerLogsRequest",
      "className": "GetMultiplayerServerLogsRequest",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "description": "Gets multiplayer server logs for a specific server id in a region.",
      "isRequest": true,
      "properties": [
        {
          "name": "Region",
          "description": "The region of the multiplayer server to get logs for.",
          "jsontype": "String",
          "actualtype": "AzureRegion",
          "isenum": true,
          "optional": false
        },
        {
          "name": "ServerId",
          "description": "The server ID of multiplayer server to get logs for.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        }
      ]
    },
    "GetMultiplayerServerLogsResponse": {
      "name": "GetMultiplayerServerLogsResponse",
      "className": "GetMultiplayerServerLogsResponse",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isResult": true,
      "properties": [
        {
          "name": "LogDownloadUrl",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "GetQueueStatisticsRequest": {
      "name": "GetQueueStatisticsRequest",
      "className": "GetQueueStatisticsRequest",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "description": "Returns the matchmaking statistics for a queue. These include the number of players matching\r\n                and the statistics related to the time to match statistics in seconds (average and percentiles).\r\n                Statistics are refreshed once every 5 minutes.\r\n\r\n                Servers can access all statistics no matter what the ClientStatisticsVisibility is configured to.\r\n                Clients can access statistics according to the ClientStatisticsVisibility.\r\n                Client requests are forbidden if all visibility fields are false.",
      "isRequest": true,
      "properties": [
        {
          "name": "QueueName",
          "description": "The name of the queue.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        }
      ]
    },
    "GetQueueStatisticsResult": {
      "name": "GetQueueStatisticsResult",
      "className": "GetQueueStatisticsResult",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isResult": true,
      "properties": [
        {
          "name": "NumberOfPlayersMatching",
          "description": "The current number of players in the matchmaking queue, who are waiting to be matched.",
          "jsontype": "Number",
          "actualtype": "uint32",
          "optional": true
        },
        {
          "name": "TimeToMatchStatisticsInSeconds",
          "description": "Statistics representing the time (in seconds) it takes for tickets to find a match.",
          "jsontype": "Object",
          "actualtype": "Statistics",
          "isclass": true,
          "optional": true
        }
      ]
    },
    "GetRemoteLoginEndpointRequest": {
      "name": "GetRemoteLoginEndpointRequest",
      "className": "GetRemoteLoginEndpointRequest",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "description": "Gets a remote login endpoint to a VM that is hosting a multiplayer server build in a specific region.",
      "isRequest": true,
      "properties": [
        {
          "name": "BuildId",
          "description": "The guid string build ID of the multiplayer server to get remote login information for.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        },
        {
          "name": "Region",
          "description": "The region of the multiplayer server to get remote login information for.",
          "jsontype": "String",
          "actualtype": "AzureRegion",
          "isenum": true,
          "optional": false
        },
        {
          "name": "VmId",
          "description": "The virtual machine ID the multiplayer server is located on.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        }
      ]
    },
    "GetRemoteLoginEndpointResponse": {
      "name": "GetRemoteLoginEndpointResponse",
      "className": "GetRemoteLoginEndpointResponse",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "isResult": true,
      "properties": [
        {
          "name": "IPV4Address",
          "description": "The remote login IPV4 address of multiplayer server.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "Port",
          "description": "The remote login port of multiplayer server.",
          "jsontype": "Number",
          "actualtype": "int32",
          "optional": false
        }
      ]
    },
    "GetTitleEnabledForMultiplayerServersStatusRequest": {
      "name": "GetTitleEnabledForMultiplayerServersStatusRequest",
      "className": "GetTitleEnabledForMultiplayerServersStatusRequest",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "description": "Gets the status of whether a title is enabled for the multiplayer server feature. The enabled status can be Initializing, Enabled, and Disabled.",
      "isRequest": true,
      "properties": []
    },
    "GetTitleEnabledForMultiplayerServersStatusResponse": {
      "name": "GetTitleEnabledForMultiplayerServersStatusResponse",
      "className": "GetTitleEnabledForMultiplayerServersStatusResponse",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "isResult": true,
      "properties": [
        {
          "name": "Status",
          "description": "The enabled status for the multiplayer server features for the title.",
          "jsontype": "String",
          "actualtype": "TitleMultiplayerServerEnabledStatus",
          "isenum": true,
          "optional": true
        }
      ]
    },
    "JoinMatchmakingTicketRequest": {
      "name": "JoinMatchmakingTicketRequest",
      "className": "JoinMatchmakingTicketRequest",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "description": "Add the player to a matchmaking ticket and specify all of its matchmaking\r\n                attributes. Players can join a ticket if and only if their EntityKeys are\r\n                already listed in the ticket's Members list.\r\n\r\n                The matchmaking service automatically starts matching the ticket against\r\n                other matchmaking tickets once all players have joined the ticket.\r\n                It is not possible to join a ticket once it has started matching.",
      "isRequest": true,
      "properties": [
        {
          "name": "Member",
          "description": "The User who wants to join the ticket. Their Id must be listed in PlayFabIdsToMatchWith.",
          "jsontype": "Object",
          "actualtype": "MatchmakingPlayer",
          "isclass": true,
          "optional": false
        },
        {
          "name": "QueueName",
          "description": "The Id of the queue to join.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        },
        {
          "name": "TicketId",
          "description": "The Id of the ticket to find a match for.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        }
      ]
    },
    "JoinMatchmakingTicketResult": {
      "name": "JoinMatchmakingTicketResult",
      "className": "JoinMatchmakingTicketResult",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isResult": true,
      "properties": []
    },
    "ListAssetSummariesRequest": {
      "name": "ListAssetSummariesRequest",
      "className": "ListAssetSummariesRequest",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "description": "Returns a list of multiplayer server game asset summaries for a title.",
      "isRequest": true,
      "properties": [
        {
          "name": "PageSize",
          "description": "The page size for the request.",
          "jsontype": "Number",
          "actualtype": "int32",
          "optional": true
        },
        {
          "name": "SkipToken",
          "description": "The skip token for the paged request.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "ListAssetSummariesResponse": {
      "name": "ListAssetSummariesResponse",
      "className": "ListAssetSummariesResponse",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "isResult": true,
      "properties": [
        {
          "name": "AssetSummaries",
          "description": "The list of asset summaries.",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "AssetSummary",
          "isclass": true,
          "optional": true
        },
        {
          "name": "PageSize",
          "description": "The page size on the response.",
          "jsontype": "Number",
          "actualtype": "int32",
          "optional": false
        },
        {
          "name": "SkipToken",
          "description": "The skip token for the paged response.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "ListBuildSummariesRequest": {
      "name": "ListBuildSummariesRequest",
      "className": "ListBuildSummariesRequest",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "description": "Returns a list of summarized details of all multiplayer server builds for a title.",
      "isRequest": true,
      "properties": [
        {
          "name": "PageSize",
          "description": "The page size for the request.",
          "jsontype": "Number",
          "actualtype": "int32",
          "optional": true
        },
        {
          "name": "SkipToken",
          "description": "The skip token for the paged request.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "ListBuildSummariesResponse": {
      "name": "ListBuildSummariesResponse",
      "className": "ListBuildSummariesResponse",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "isResult": true,
      "properties": [
        {
          "name": "BuildSummaries",
          "description": "The list of build summaries for a title.",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "BuildSummary",
          "isclass": true,
          "optional": true
        },
        {
          "name": "PageSize",
          "description": "The page size on the response.",
          "jsontype": "Number",
          "actualtype": "int32",
          "optional": false
        },
        {
          "name": "SkipToken",
          "description": "The skip token for the paged response.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "ListCertificateSummariesRequest": {
      "name": "ListCertificateSummariesRequest",
      "className": "ListCertificateSummariesRequest",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "description": "Returns a list of multiplayer server game certificates for a title.",
      "isRequest": true,
      "properties": [
        {
          "name": "PageSize",
          "description": "The page size for the request.",
          "jsontype": "Number",
          "actualtype": "int32",
          "optional": true
        },
        {
          "name": "SkipToken",
          "description": "The skip token for the paged request.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "ListCertificateSummariesResponse": {
      "name": "ListCertificateSummariesResponse",
      "className": "ListCertificateSummariesResponse",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "isResult": true,
      "properties": [
        {
          "name": "CertificateSummaries",
          "description": "The list of game certificates.",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "CertificateSummary",
          "isclass": true,
          "optional": true
        },
        {
          "name": "PageSize",
          "description": "The page size on the response.",
          "jsontype": "Number",
          "actualtype": "int32",
          "optional": false
        },
        {
          "name": "SkipToken",
          "description": "The skip token for the paged response.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "ListContainerImagesRequest": {
      "name": "ListContainerImagesRequest",
      "className": "ListContainerImagesRequest",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "description": "Returns a list of the container images that have been uploaded to the container registry for a title.",
      "isRequest": true,
      "properties": [
        {
          "name": "PageSize",
          "description": "The page size for the request.",
          "jsontype": "Number",
          "actualtype": "int32",
          "optional": true
        },
        {
          "name": "SkipToken",
          "description": "The skip token for the paged request.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "ListContainerImagesResponse": {
      "name": "ListContainerImagesResponse",
      "className": "ListContainerImagesResponse",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "isResult": true,
      "properties": [
        {
          "name": "Images",
          "description": "The list of container images.",
          "collection": "array",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "PageSize",
          "description": "The page size on the response.",
          "jsontype": "Number",
          "actualtype": "int32",
          "optional": false
        },
        {
          "name": "SkipToken",
          "description": "The skip token for the paged response.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "ListContainerImageTagsRequest": {
      "name": "ListContainerImageTagsRequest",
      "className": "ListContainerImageTagsRequest",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "description": "Returns a list of the tags for a particular container image that exists in the container registry for a title.",
      "isRequest": true,
      "properties": [
        {
          "name": "ImageName",
          "description": "The container images we want to list tags for.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "ListContainerImageTagsResponse": {
      "name": "ListContainerImageTagsResponse",
      "className": "ListContainerImageTagsResponse",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "isResult": true,
      "properties": [
        {
          "name": "Tags",
          "description": "The list of tags for a particular container image.",
          "collection": "array",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "ListMatchmakingQueuesRequest": {
      "name": "ListMatchmakingQueuesRequest",
      "className": "ListMatchmakingQueuesRequest",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "description": "Gets a list of all the matchmaking queue configurations for the title.",
      "isRequest": true,
      "properties": []
    },
    "ListMatchmakingQueuesResult": {
      "name": "ListMatchmakingQueuesResult",
      "className": "ListMatchmakingQueuesResult",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isResult": true,
      "properties": [
        {
          "name": "MatchMakingQueues",
          "description": "The list of matchmaking queue configs for this title.",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "MatchmakingQueueConfig",
          "isclass": true,
          "optional": true
        }
      ]
    },
    "ListMultiplayerServersRequest": {
      "name": "ListMultiplayerServersRequest",
      "className": "ListMultiplayerServersRequest",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "description": "Returns a list of multiplayer servers for a build in a specific region.",
      "isRequest": true,
      "properties": [
        {
          "name": "BuildId",
          "description": "The guid string build ID of the multiplayer servers to list.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        },
        {
          "name": "PageSize",
          "description": "The page size for the request.",
          "jsontype": "Number",
          "actualtype": "int32",
          "optional": true
        },
        {
          "name": "Region",
          "description": "The region the multiplayer servers to list.",
          "jsontype": "String",
          "actualtype": "AzureRegion",
          "isenum": true,
          "optional": false
        },
        {
          "name": "SkipToken",
          "description": "The skip token for the paged request.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "ListMultiplayerServersResponse": {
      "name": "ListMultiplayerServersResponse",
      "className": "ListMultiplayerServersResponse",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "isResult": true,
      "properties": [
        {
          "name": "MultiplayerServerSummaries",
          "description": "The list of multiplayer server summary details.",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "MultiplayerServerSummary",
          "isclass": true,
          "optional": true
        },
        {
          "name": "PageSize",
          "description": "The page size on the response.",
          "jsontype": "Number",
          "actualtype": "int32",
          "optional": false
        },
        {
          "name": "SkipToken",
          "description": "The skip token for the paged response.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "ListQosServersRequest": {
      "name": "ListQosServersRequest",
      "className": "ListQosServersRequest",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "description": "Returns a list of quality of service servers.",
      "isRequest": true,
      "properties": []
    },
    "ListQosServersResponse": {
      "name": "ListQosServersResponse",
      "className": "ListQosServersResponse",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "isResult": true,
      "properties": [
        {
          "name": "PageSize",
          "description": "The page size on the response.",
          "jsontype": "Number",
          "actualtype": "int32",
          "optional": false
        },
        {
          "name": "QosServers",
          "description": "The list of QoS servers.",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "QosServer",
          "isclass": true,
          "optional": true
        },
        {
          "name": "SkipToken",
          "description": "The skip token for the paged response.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "ListVirtualMachineSummariesRequest": {
      "name": "ListVirtualMachineSummariesRequest",
      "className": "ListVirtualMachineSummariesRequest",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "description": "Returns a list of virtual machines for a title.",
      "isRequest": true,
      "properties": [
        {
          "name": "BuildId",
          "description": "The guid string build ID of the virtual machines to list.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        },
        {
          "name": "PageSize",
          "description": "The page size for the request.",
          "jsontype": "Number",
          "actualtype": "int32",
          "optional": true
        },
        {
          "name": "Region",
          "description": "The region of the virtual machines to list.",
          "jsontype": "String",
          "actualtype": "AzureRegion",
          "isenum": true,
          "optional": false
        },
        {
          "name": "SkipToken",
          "description": "The skip token for the paged request.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "ListVirtualMachineSummariesResponse": {
      "name": "ListVirtualMachineSummariesResponse",
      "className": "ListVirtualMachineSummariesResponse",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "isResult": true,
      "properties": [
        {
          "name": "PageSize",
          "description": "The page size on the response.",
          "jsontype": "Number",
          "actualtype": "int32",
          "optional": false
        },
        {
          "name": "SkipToken",
          "description": "The skip token for the paged response.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "VirtualMachines",
          "description": "The list of virtual machine summaries.",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "VirtualMachineSummary",
          "isclass": true,
          "optional": true
        }
      ]
    },
    "MatchmakingPlayer": {
      "name": "MatchmakingPlayer",
      "className": "MatchmakingPlayer",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "description": "A user in a matchmaking ticket.",
      "properties": [
        {
          "name": "Attributes",
          "description": "The user's attributes custom to the title.",
          "jsontype": "Object",
          "actualtype": "MatchmakingPlayerAttributes",
          "isclass": true,
          "optional": true
        },
        {
          "name": "Entity",
          "description": "The entity key of the matchmaking user.",
          "jsontype": "Object",
          "actualtype": "EntityKey",
          "isclass": true,
          "optional": false
        }
      ]
    },
    "MatchmakingPlayerAttributes": {
      "name": "MatchmakingPlayerAttributes",
      "className": "MatchmakingPlayerAttributes",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "description": "The matchmaking attributes for a user.",
      "properties": [
        {
          "name": "DataObject",
          "description": "A data object representing a user's attributes.",
          "jsontype": "Object",
          "actualtype": "object",
          "optional": true
        },
        {
          "name": "EscapedDataObject",
          "description": "An escaped data object representing a user's attributes.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "MatchmakingPlayerWithTeamAssignment": {
      "name": "MatchmakingPlayerWithTeamAssignment",
      "className": "MatchmakingPlayerWithTeamAssignment",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "description": "A player in a created matchmaking match with a team assignment.",
      "properties": [
        {
          "name": "Entity",
          "description": "The entity key of the matchmaking user.",
          "jsontype": "Object",
          "actualtype": "EntityKey",
          "isclass": true,
          "optional": false
        },
        {
          "name": "TeamId",
          "description": "The Id of the team the User has been assigned to by matchmaking.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "MatchmakingQueueConfig": {
      "name": "MatchmakingQueueConfig",
      "className": "MatchmakingQueueConfig",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "properties": [
        {
          "name": "BuildId",
          "description": "This is the buildId that will be used to allocate the thunderhead server for the match.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "MaxMatchSize",
          "description": "Maximum number of players in a match.",
          "jsontype": "Number",
          "actualtype": "uint32",
          "optional": false
        },
        {
          "name": "MinMatchSize",
          "description": "Minimum number of players in a match.",
          "jsontype": "Number",
          "actualtype": "uint32",
          "optional": false
        },
        {
          "name": "Name",
          "description": "Unique identifier for a Queue. Chosen by the developer.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        },
        {
          "name": "Rules",
          "description": "List of rules used to find an optimal match.",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "MatchmakingQueueRule",
          "isclass": true,
          "optional": true
        },
        {
          "name": "StatisticsVisibilityToPlayers",
          "description": "Controls which statistics are visible to players.",
          "jsontype": "Object",
          "actualtype": "StatisticsVisibilityToPlayers",
          "isclass": true,
          "optional": true
        },
        {
          "name": "Teams",
          "description": "The team configuration for a match. This may be null if there are no teams.",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "MatchmakingQueueTeam",
          "isclass": true,
          "optional": true
        },
        {
          "name": "ThunderheadEnabled",
          "description": "Boolean flag to enable thunderhead allocation for the queue.",
          "jsontype": "Boolean",
          "actualtype": "Boolean",
          "optional": false
        }
      ]
    },
    "MatchmakingQueueRule": {
      "name": "MatchmakingQueueRule",
      "className": "MatchmakingQueueRule",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "properties": [
        {
          "name": "Name",
          "description": "Friendly name chosen by developer.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        },
        {
          "name": "SecondsUntilOptional",
          "description": "How many seconds before this rule is no longer enforced (but tickets that comply with this rule will still be prioritized over those that don't). Leave blank if this rule is always enforced.",
          "jsontype": "Number",
          "actualtype": "uint32",
          "optional": true
        },
        {
          "name": "Type",
          "description": "Type of rule being described.",
          "jsontype": "String",
          "actualtype": "RuleType",
          "isenum": true,
          "optional": false
        }
      ]
    },
    "MatchmakingQueueTeam": {
      "name": "MatchmakingQueueTeam",
      "className": "MatchmakingQueueTeam",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "properties": [
        {
          "name": "MaxTeamSize",
          "description": "The maximum number of players required for the team.",
          "jsontype": "Number",
          "actualtype": "uint32",
          "optional": false
        },
        {
          "name": "MinTeamSize",
          "description": "The minimum number of players required for the team.",
          "jsontype": "Number",
          "actualtype": "uint32",
          "optional": false
        },
        {
          "name": "Name",
          "description": "A name to identify the team. This is case insensitive.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        }
      ]
    },
    "MultiplayerServerSummary": {
      "name": "MultiplayerServerSummary",
      "className": "MultiplayerServerSummary",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "properties": [
        {
          "name": "ConnectedPlayers",
          "description": "The connected players in the multiplayer server.",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "ConnectedPlayer",
          "isclass": true,
          "optional": true
        },
        {
          "name": "LastStateTransitionTime",
          "description": "The time (UTC) at which a change in the multiplayer server state was observed.",
          "jsontype": "String",
          "actualtype": "DateTime",
          "optional": true
        },
        {
          "name": "Region",
          "description": "The region the multiplayer server is located in.",
          "jsontype": "String",
          "actualtype": "AzureRegion",
          "isenum": true,
          "optional": true
        },
        {
          "name": "ServerId",
          "description": "The string server ID of the multiplayer server generated by PlayFab.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "SessionId",
          "description": "The title generated guid string session ID of the multiplayer server.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "State",
          "description": "The state of the multiplayer server.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "VmId",
          "description": "The virtual machine ID that the multiplayer server is located on.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "Port": {
      "name": "Port",
      "className": "Port",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "properties": [
        {
          "name": "Name",
          "description": "The name for the port.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        },
        {
          "name": "Num",
          "description": "The number for the port.",
          "jsontype": "Number",
          "actualtype": "int32",
          "optional": false
        },
        {
          "name": "Protocol",
          "description": "The protocol for the port.",
          "jsontype": "String",
          "actualtype": "ProtocolType",
          "isenum": true,
          "optional": false
        }
      ]
    },
    "ProtocolType": {
      "name": "ProtocolType",
      "className": "ProtocolType",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "isenum": true,
      "enumvalues": [
        {
          "name": "TCP"
        },
        {
          "name": "UDP"
        }
      ]
    },
    "QosServer": {
      "name": "QosServer",
      "className": "QosServer",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "properties": [
        {
          "name": "Region",
          "description": "The region the QoS server is located in.",
          "jsontype": "String",
          "actualtype": "AzureRegion",
          "isenum": true,
          "optional": true
        },
        {
          "name": "ServerUrl",
          "description": "The QoS server URL.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "RemoveMatchmakingQueueRequest": {
      "name": "RemoveMatchmakingQueueRequest",
      "className": "RemoveMatchmakingQueueRequest",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "description": "Deletes the configuration for a queue. This will permanently delete the \r\n                configuration and players will no longer be able to match in the queue.\r\n                All outstanding matchmaking tickets will be cancelled.",
      "isRequest": true,
      "properties": [
        {
          "name": "QueueName",
          "description": "The Id of the matchmaking queue to remove.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "RemoveMatchmakingQueueResult": {
      "name": "RemoveMatchmakingQueueResult",
      "className": "RemoveMatchmakingQueueResult",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isResult": true,
      "properties": []
    },
    "RequestMultiplayerServerRequest": {
      "name": "RequestMultiplayerServerRequest",
      "className": "RequestMultiplayerServerRequest",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "description": "Requests a multiplayer server session from a particular build in any of the given preferred regions.",
      "isRequest": true,
      "properties": [
        {
          "name": "BuildId",
          "description": "The guid string build ID of the multiplayer server to request.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        },
        {
          "name": "InitialPlayers",
          "description": "Initial list of players (potentially matchmade) allowed to connect to the game. The game server can use this list to validate players connecting to it.",
          "collection": "array",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "PreferredRegions",
          "description": "The preferred regions to request a multiplayer server from.",
          "collection": "array",
          "jsontype": "String",
          "actualtype": "AzureRegion",
          "isenum": true,
          "optional": false
        },
        {
          "name": "SessionCookie",
          "description": "Data encoded as a string that is passed to the game server when requested. This can be used to share a cryptographic secret for servers to authenticate clients or to communicate information such as game mode or map through the request flow.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "SessionId",
          "description": "A guid string session ID created track the multiplayer server session over its life.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        }
      ]
    },
    "RequestMultiplayerServerResponse": {
      "name": "RequestMultiplayerServerResponse",
      "className": "RequestMultiplayerServerResponse",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "isResult": true,
      "properties": [
        {
          "name": "ConnectedPlayers",
          "description": "The connected players in the multiplayer server.",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "ConnectedPlayer",
          "isclass": true,
          "optional": true
        },
        {
          "name": "FQDN",
          "description": "The fully qualified domain name of the virtual machine that is hosting this multiplayer server.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "IPV4Address",
          "description": "The IPv4 address of the virtual machine that is hosting this multiplayer server.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "LastStateTransitionTime",
          "description": "The time (UTC) at which a change in the multiplayer server state was observed.",
          "jsontype": "String",
          "actualtype": "DateTime",
          "optional": true
        },
        {
          "name": "Ports",
          "description": "The ports the multiplayer server uses.",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "Port",
          "isclass": true,
          "optional": true
        },
        {
          "name": "Region",
          "description": "The region the multiplayer server is located in.",
          "jsontype": "String",
          "actualtype": "AzureRegion",
          "isenum": true,
          "optional": true
        },
        {
          "name": "ServerId",
          "description": "The string server ID of the multiplayer server generated by PlayFab.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "SessionId",
          "description": "The guid string session ID of the multiplayer server.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "State",
          "description": "The state of the multiplayer server.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "VmId",
          "description": "The virtual machine ID that the multiplayer server is located on.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "RolloverContainerRegistryCredentialsRequest": {
      "name": "RolloverContainerRegistryCredentialsRequest",
      "className": "RolloverContainerRegistryCredentialsRequest",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "description": "Gets new credentials to the container registry where game developers can upload custom container images to before creating a new build.",
      "isRequest": true,
      "properties": []
    },
    "RolloverContainerRegistryCredentialsResponse": {
      "name": "RolloverContainerRegistryCredentialsResponse",
      "className": "RolloverContainerRegistryCredentialsResponse",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "isResult": true,
      "properties": [
        {
          "name": "DnsName",
          "description": "The url of the container registry.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "Password",
          "description": "The password for accessing the container registry.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "Username",
          "description": "The username for accessing the container registry.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "RuleType": {
      "name": "RuleType",
      "className": "RuleType",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isenum": true,
      "enumvalues": [
        {
          "name": "Unknown"
        },
        {
          "name": "DifferenceRule"
        },
        {
          "name": "StringEqualityRule"
        },
        {
          "name": "MatchTotalRule"
        },
        {
          "name": "SetIntersectionRule"
        },
        {
          "name": "TeamSizeBalanceRule"
        },
        {
          "name": "RegionSelectionRule"
        },
        {
          "name": "TeamDifferenceRule"
        },
        {
          "name": "TeamTicketSizeSimilarityRule"
        }
      ]
    },
    "ServerDetails": {
      "name": "ServerDetails",
      "className": "ServerDetails",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "properties": [
        {
          "name": "IPV4Address",
          "description": "The IPv4 address of the virtual machine that is hosting this multiplayer server.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        },
        {
          "name": "Ports",
          "description": "The ports the multiplayer server uses.",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "Port",
          "isclass": true,
          "optional": false
        }
      ]
    },
    "SetMatchmakingQueueRequest": {
      "name": "SetMatchmakingQueueRequest",
      "className": "SetMatchmakingQueueRequest",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "description": "Use this API to create or update matchmaking queue configurations. The queue\r\n                configuration defines the matchmaking rules. The matchmaking service will match\r\n                tickets together according to the configured rules. Queue resources are not\r\n                spun up by calling this API. Queues are created when the first ticket is submitted.",
      "isRequest": true,
      "properties": [
        {
          "name": "MatchmakingQueue",
          "description": "The matchmaking queue config.",
          "jsontype": "Object",
          "actualtype": "MatchmakingQueueConfig",
          "isclass": true,
          "optional": true
        }
      ]
    },
    "SetMatchmakingQueueResult": {
      "name": "SetMatchmakingQueueResult",
      "className": "SetMatchmakingQueueResult",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isResult": true,
      "properties": []
    },
    "ShutdownMultiplayerServerRequest": {
      "name": "ShutdownMultiplayerServerRequest",
      "className": "ShutdownMultiplayerServerRequest",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "description": "Executes the shutdown callback from the GSDK and terminates the multiplayer server session. The callback in the GSDK will allow for graceful shutdown with a 15 minute timeoutIf graceful shutdown has not been completed before 15 minutes have elapsed, the multiplayer server session will be forcefully terminated on it's own.",
      "isRequest": true,
      "properties": [
        {
          "name": "BuildId",
          "description": "The guid string build ID of the multiplayer server to delete.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        },
        {
          "name": "Region",
          "description": "The region of the multiplayer server to shut down.",
          "jsontype": "String",
          "actualtype": "AzureRegion",
          "isenum": true,
          "optional": false
        },
        {
          "name": "SessionId",
          "description": "A guid string session ID of the multiplayer server to shut down.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        }
      ]
    },
    "Statistics": {
      "name": "Statistics",
      "className": "Statistics",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "properties": [
        {
          "name": "Average",
          "description": "The average.",
          "jsontype": "Number",
          "actualtype": "double",
          "optional": false
        },
        {
          "name": "Percentile50",
          "description": "The 50th percentile.",
          "jsontype": "Number",
          "actualtype": "double",
          "optional": false
        },
        {
          "name": "Percentile90",
          "description": "The 90th percentile.",
          "jsontype": "Number",
          "actualtype": "double",
          "optional": false
        },
        {
          "name": "Percentile99",
          "description": "The 99th percentile.",
          "jsontype": "Number",
          "actualtype": "double",
          "optional": false
        }
      ]
    },
    "StatisticsVisibilityToPlayers": {
      "name": "StatisticsVisibilityToPlayers",
      "className": "StatisticsVisibilityToPlayers",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "properties": [
        {
          "name": "ShowNumberOfPlayersMatching",
          "description": "Whether to allow players to view the current number of players in the matchmaking queue.",
          "jsontype": "Boolean",
          "actualtype": "Boolean",
          "optional": false
        },
        {
          "name": "ShowTimeToMatch",
          "description": "Whether to allow players to view statistics representing the time it takes for tickets to find a match.",
          "jsontype": "Boolean",
          "actualtype": "Boolean",
          "optional": false
        }
      ]
    },
    "TitleMultiplayerServerEnabledStatus": {
      "name": "TitleMultiplayerServerEnabledStatus",
      "className": "TitleMultiplayerServerEnabledStatus",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "isenum": true,
      "enumvalues": [
        {
          "name": "Initializing"
        },
        {
          "name": "Enabled"
        },
        {
          "name": "Disabled"
        }
      ]
    },
    "UpdateBuildRegionsRequest": {
      "name": "UpdateBuildRegionsRequest",
      "className": "UpdateBuildRegionsRequest",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "description": "Updates a multiplayer server build's regions.",
      "isRequest": true,
      "properties": [
        {
          "name": "BuildId",
          "description": "The guid string ID of the build we want to update regions for.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        },
        {
          "name": "BuildRegions",
          "description": "The updated region configuration that should be applied to the specified build.",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "BuildRegionParams",
          "isclass": true,
          "optional": false
        }
      ]
    },
    "UploadCertificateRequest": {
      "name": "UploadCertificateRequest",
      "className": "UploadCertificateRequest",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "description": "Uploads a multiplayer server game certificate.",
      "isRequest": true,
      "properties": [
        {
          "name": "GameCertificate",
          "description": "The game certificate to upload.",
          "jsontype": "Object",
          "actualtype": "Certificate",
          "isclass": true,
          "optional": false
        }
      ]
    },
    "VirtualMachineSummary": {
      "name": "VirtualMachineSummary",
      "className": "VirtualMachineSummary",
      "classNameSpace": "PlayFab.Multiplayer.Models",
      "assembly": "PlayFab.Multiplayer.Models",
      "properties": [
        {
          "name": "HealthStatus",
          "description": "The virtual machine health status.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "State",
          "description": "The virtual machine state.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "VmId",
          "description": "The virtual machine ID.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    }
  },
  "subgroups": [
    {
      "name": "Matchmaking",
      "methods": [
        "CancelMatchmakingTicket",
        "CreateMatchmakingTicket",
        "CreateServerMatchmakingTicket",
        "GetMatch",
        "GetMatchmakingTicket",
        "GetQueueStatistics",
        "JoinMatchmakingTicket"
      ]
    },
    {
      "name": "Matchmaking Admin",
      "methods": [
        "GetMatchmakingQueue",
        "ListMatchmakingQueues",
        "RemoveMatchmakingQueue",
        "SetMatchmakingQueue"
      ]
    },
    {
      "name": "MultiplayerServer",
      "methods": [
        "CreateBuildWithCustomContainer",
        "CreateBuildWithManagedContainer",
        "CreateRemoteUser",
        "DeleteAsset",
        "DeleteBuild",
        "DeleteCertificate",
        "DeleteRemoteUser",
        "EnableMultiplayerServersForTitle",
        "GetAssetUploadUrl",
        "GetBuild",
        "GetCognitiveServicesToken",
        "GetContainerRegistryCredentials",
        "GetMultiplayerServerDetails",
        "GetMultiplayerServerLogs",
        "GetRemoteLoginEndpoint",
        "GetTitleEnabledForMultiplayerServersStatus",
        "ListArchivedMultiplayerServers",
        "ListAssetSummaries",
        "ListBuildSummaries",
        "ListCertificateSummaries",
        "ListContainerImages",
        "ListContainerImageTags",
        "ListMultiplayerServers",
        "ListQosServers",
        "ListVirtualMachineSummaries",
        "RequestMultiplayerServer",
        "RolloverContainerRegistryCredentials",
        "ShutdownMultiplayerServer",
        "UpdateBuildRegions",
        "UploadCertificate"
      ]
    }
  ],
  "calls": [
    {
      "name": "CancelMatchmakingTicket",
      "summary": "Cancel a matchmaking ticket.",
      "requestDetails": "Only servers and ticket members can cancel a ticket. The ticket can be in four different states when it is cancelled. 1: the ticket is waiting for members to join it, and it has not started matching. If the ticket is cancelled at this stage, it will never match. 2: the ticket is matching. If the ticket is cancelled, it will stop matching. 3: the ticket is matched. A matched ticket cannot be cancelled. 4: the ticket is already cancelled and nothing happens. There may be race conditions between the ticket getting matched and the client making a cancellation request. The client must handle the possibility that the cancel request fails if a match is found before the cancellation request is processed. We do not allow resubmitting a cancelled ticket because players must consent to enter matchmaking again. Create a new ticket instead.",
      "subgroup": "Matchmaking",
      "titleTiers": null,
      "url": "/Match/CancelMatchmakingTicket",
      "auth": "EntityToken",
      "method": "POST",
      "request": "CancelMatchmakingTicketRequest",
      "requestExample": "{\r\n  \"TicketId\": \"1c4b0daa-150e-47ae-9923-d770c0f9b07c\",\r\n  \"QueueName\": \"custom123\"\r\n}",
      "result": "CancelMatchmakingTicketResult",
      "resultExample": "{\r\n  \"code\": 200,\r\n  \"status\": \"OK\",\r\n  \"data\": {}\r\n}",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "errors": [
        "MatchmakingCancelTicketServerIdentityInvalid",
        "MatchmakingCancelTicketUserIdentityMismatch",
        "MatchmakingEntityInvalid",
        "MatchmakingQueueNameMissing",
        "MatchmakingTicketAlreadyCompleted",
        "MatchmakingTicketIdIdMissing",
        "MatchmakingTicketIdMissing",
        "MatchmakingTicketNotFound",
        "MatchmakingTitleIdMissing"
      ]
    },
    {
      "name": "CreateBuildWithCustomContainer",
      "summary": "Creates a multiplayer server build with a custom container.",
      "requestDetails": "Creates a multiplayer server build with a custom container and returns information about the build creation request.",
      "subgroup": "MultiplayerServer",
      "titleTiers": null,
      "url": "/MultiplayerServer/CreateBuildWithCustomContainer",
      "auth": "EntityToken",
      "method": "POST",
      "request": "CreateBuildWithCustomContainerRequest",
      "requestExample": "{\r\n  \"ContainerRunCommand\": \"/data/Assets -startserver\",\r\n  \"GameAssetReferences\": [\r\n    {\r\n      \"FileName\": \"gameserver.zip\",\r\n      \"MountPath\": \"/data/Assets\"\r\n    }\r\n  ],\r\n  \"ContainerRepositoryName\": \"ContainerRepositoryName\",\r\n  \"ContainerTag\": \"ContainerTag\",\r\n  \"ContainerFlavor\": \"CustomLinux\",\r\n  \"BuildName\": \"GameBuildName\",\r\n  \"Metadata\": {\r\n    \"MetadataKey\": \"MetadataValue\"\r\n  },\r\n  \"VmSize\": \"Standard_D2_v2\",\r\n  \"MultiplayerServerCountPerVm\": 10,\r\n  \"Ports\": [\r\n    {\r\n      \"Name\": \"PortName\",\r\n      \"Num\": 1243,\r\n      \"Protocol\": \"TCP\"\r\n    }\r\n  ],\r\n  \"RegionConfigurations\": [\r\n    {\r\n      \"Region\": \"EastUs\",\r\n      \"MaxServers\": 10,\r\n      \"StandbyServers\": 5\r\n    },\r\n    {\r\n      \"Region\": \"WestUs\",\r\n      \"MaxServers\": 12,\r\n      \"StandbyServers\": 8\r\n    },\r\n    {\r\n      \"Region\": \"NorthEurope\",\r\n      \"MaxServers\": 7,\r\n      \"StandbyServers\": 3\r\n    }\r\n  ],\r\n  \"GameCertificateReferences\": [\r\n    {\r\n      \"Name\": \"CertName\",\r\n      \"GsdkAlias\": \"CertGsdkAlias\"\r\n    }\r\n  ]\r\n}",
      "result": "CreateBuildWithCustomContainerResponse",
      "resultExample": "{\r\n  \"code\": 200,\r\n  \"status\": \"OK\",\r\n  \"data\": {\r\n    \"ContainerRunCommand\": \"/data/Assets -startserver\",\r\n    \"BuildId\": \"21781fa8-096d-4d9c-b699-75433d579285\",\r\n    \"BuildName\": \"GameBuildName\",\r\n    \"CreationTime\": \"2014-04-07T09:04:28Z\",\r\n    \"Metadata\": {\r\n      \"MetadataKey\": \"MetadataValue\"\r\n    },\r\n    \"VmSize\": \"Standard_D2_v2\",\r\n    \"ContainerFlavor\": \"CustomLinux\",\r\n    \"Ports\": [\r\n      {\r\n        \"Name\": \"PortName\",\r\n        \"Num\": 1243,\r\n        \"Protocol\": \"TCP\"\r\n      }\r\n    ],\r\n    \"RegionConfigurations\": [\r\n      {\r\n        \"Region\": \"EastUs\",\r\n        \"Status\": \"Initializing\",\r\n        \"MaxServers\": 10,\r\n        \"StandbyServers\": 5\r\n      },\r\n      {\r\n        \"Region\": \"WestUs\",\r\n        \"Status\": \"Succeeded\",\r\n        \"MaxServers\": 12,\r\n        \"StandbyServers\": 8\r\n      },\r\n      {\r\n        \"Region\": \"NorthEurope\",\r\n        \"Status\": \"Unhealthy\",\r\n        \"MaxServers\": 7,\r\n        \"StandbyServers\": 3\r\n      }\r\n    ],\r\n    \"GameAssetReferences\": [\r\n      {\r\n        \"FileName\": \"gameserver.zip\",\r\n        \"MountPath\": \"/data/Assets\"\r\n      }\r\n    ],\r\n    \"GameCertificateReferences\": [\r\n      {\r\n        \"Name\": \"CertName\",\r\n        \"GsdkAlias\": \"CertGsdkAlias\"\r\n      }\r\n    ],\r\n    \"MultiplayerServerCountPerVm\": 10\r\n  }\r\n}",
      "seeAlso": [
        "MultiplayerServer/CreateBuildWithManagedContainer",
        "MultiplayerServer/DeleteBuild",
        "MultiplayerServer/GetBuild",
        "MultiplayerServer/ListBuildSummaries"
      ],
      "errors": [
        "MultiplayerServerBadRequest",
        "MultiplayerServerConflict",
        "MultiplayerServerForbidden",
        "MultiplayerServerInternalServerError",
        "MultiplayerServerUnauthorized"
      ]
    },
    {
      "name": "CreateBuildWithManagedContainer",
      "summary": "Creates a multiplayer server build with a managed container.",
      "requestDetails": "Creates a multiplayer server build with a managed container and returns information about the build creation request.",
      "subgroup": "MultiplayerServer",
      "titleTiers": null,
      "url": "/MultiplayerServer/CreateBuildWithManagedContainer",
      "auth": "EntityToken",
      "method": "POST",
      "request": "CreateBuildWithManagedContainerRequest",
      "requestExample": "{\r\n  \"StartMultiplayerServerCommand\": \"C:\\\\Assets\\\\gameserver.exe -startserver\",\r\n  \"GameAssetReferences\": [\r\n    {\r\n      \"FileName\": \"gameserver.zip\",\r\n      \"MountPath\": \"C:\\\\Asset\\\\\"\r\n    }\r\n  ],\r\n  \"ContainerFlavor\": \"ManagedWindowsServerCore\",\r\n  \"BuildName\": \"GameBuildName\",\r\n  \"Metadata\": {\r\n    \"MetadataKey\": \"MetadataValue\"\r\n  },\r\n  \"VmSize\": \"Standard_D2_v2\",\r\n  \"MultiplayerServerCountPerVm\": 10,\r\n  \"Ports\": [\r\n    {\r\n      \"Name\": \"PortName\",\r\n      \"Num\": 1243,\r\n      \"Protocol\": \"TCP\"\r\n    }\r\n  ],\r\n  \"RegionConfigurations\": [\r\n    {\r\n      \"Region\": \"EastUs\",\r\n      \"MaxServers\": 10,\r\n      \"StandbyServers\": 5\r\n    },\r\n    {\r\n      \"Region\": \"WestUs\",\r\n      \"MaxServers\": 12,\r\n      \"StandbyServers\": 8\r\n    },\r\n    {\r\n      \"Region\": \"NorthEurope\",\r\n      \"MaxServers\": 7,\r\n      \"StandbyServers\": 3\r\n    }\r\n  ],\r\n  \"GameCertificateReferences\": [\r\n    {\r\n      \"Name\": \"CertName\",\r\n      \"GsdkAlias\": \"CertGsdkAlias\"\r\n    }\r\n  ]\r\n}",
      "result": "CreateBuildWithManagedContainerResponse",
      "resultExample": "{\r\n  \"code\": 200,\r\n  \"status\": \"OK\",\r\n  \"data\": {\r\n    \"StartMultiplayerServerCommand\": \"C:\\\\Assets\\\\gameserver.exe -startserver\",\r\n    \"BuildId\": \"21781fa8-096d-4d9c-b699-75433d579285\",\r\n    \"BuildName\": \"GameBuildName\",\r\n    \"CreationTime\": \"2014-04-07T09:04:28Z\",\r\n    \"Metadata\": {\r\n      \"MetadataKey\": \"MetadataValue\"\r\n    },\r\n    \"VmSize\": \"Standard_D2_v2\",\r\n    \"ContainerFlavor\": \"ManagedWindowsServerCore\",\r\n    \"Ports\": [\r\n      {\r\n        \"Name\": \"PortName\",\r\n        \"Num\": 1243,\r\n        \"Protocol\": \"TCP\"\r\n      }\r\n    ],\r\n    \"RegionConfigurations\": [\r\n      {\r\n        \"Region\": \"EastUs\",\r\n        \"Status\": \"Initializing\",\r\n        \"MaxServers\": 10,\r\n        \"StandbyServers\": 5\r\n      },\r\n      {\r\n        \"Region\": \"WestUs\",\r\n        \"Status\": \"Succeeded\",\r\n        \"MaxServers\": 12,\r\n        \"StandbyServers\": 8\r\n      },\r\n      {\r\n        \"Region\": \"NorthEurope\",\r\n        \"Status\": \"Unhealthy\",\r\n        \"MaxServers\": 7,\r\n        \"StandbyServers\": 3\r\n      }\r\n    ],\r\n    \"GameAssetReferences\": [\r\n      {\r\n        \"FileName\": \"gameserver.zip\",\r\n        \"MountPath\": \"C:\\\\Asset\\\\\"\r\n      }\r\n    ],\r\n    \"GameCertificateReferences\": [\r\n      {\r\n        \"Name\": \"CertName\",\r\n        \"GsdkAlias\": \"CertGsdkAlias\"\r\n      }\r\n    ],\r\n    \"MultiplayerServerCountPerVm\": 10\r\n  }\r\n}",
      "seeAlso": [
        "MultiplayerServer/DeleteBuild",
        "MultiplayerServer/GetBuild",
        "MultiplayerServer/ListBuildSummaries"
      ],
      "errors": [
        "MultiplayerServerBadRequest",
        "MultiplayerServerConflict",
        "MultiplayerServerForbidden",
        "MultiplayerServerInternalServerError",
        "MultiplayerServerUnauthorized"
      ]
    },
    {
      "name": "CreateMatchmakingTicket",
      "summary": "Create a matchmaking ticket as a client.",
      "requestDetails": "The client specifies the creator's attributes and optionally a list of other users to match with.",
      "subgroup": "Matchmaking",
      "titleTiers": null,
      "url": "/Match/CreateMatchmakingTicket",
      "auth": "EntityToken",
      "method": "POST",
      "request": "CreateMatchmakingTicketRequest",
      "requestExample": "{\r\n  \"Creator\": {},\r\n  \"MembersToMatchWith\": [],\r\n  \"GiveUpAfterSeconds\": 100,\r\n  \"QueueName\": \"custom123\"\r\n}",
      "result": "CreateMatchmakingTicketResult",
      "resultExample": "{\r\n  \"code\": 200,\r\n  \"status\": \"OK\",\r\n  \"data\": {\r\n    \"TicketId\": \"1c4b0daa-150e-47ae-9923-d770c0f9b07c\"\r\n  }\r\n}",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "errors": [
        "MatchmakingCreateRequestCreatorIdMissing",
        "MatchmakingCreateRequestCreatorMissing",
        "MatchmakingCreateRequestGiveUpAfterInvalid",
        "MatchmakingCreateRequestMissing",
        "MatchmakingCreateTicketClientIdentityInvalid",
        "MatchmakingEntityInvalid",
        "MatchmakingPlayerAttributesInvalid",
        "MatchmakingPlayerIdentityMismatch",
        "MatchmakingPlayerIdMissing",
        "MatchmakingQueueNameMissing",
        "MatchmakingTicketIdMissing",
        "MatchmakingTitleIdMissing"
      ]
    },
    {
      "name": "CreateRemoteUser",
      "summary": "Creates a remote user to log on to a VM for a multiplayer server build.",
      "requestDetails": "Creates a remote user to log on to a VM for a multiplayer server build in a specific region. Returns user credential information necessary to log on.",
      "subgroup": "MultiplayerServer",
      "titleTiers": null,
      "url": "/MultiplayerServer/CreateRemoteUser",
      "auth": "EntityToken",
      "method": "POST",
      "request": "CreateRemoteUserRequest",
      "requestExample": "{\r\n  \"BuildId\": \"21781fa8-096d-4d9c-b699-75433d579285\",\r\n  \"Region\": \"SouthCentralUs\",\r\n  \"VmId\": \"VmID1\",\r\n  \"Username\": \"AUsername\",\r\n  \"ExpirationTime\": \"2014-04-07T09:04:28Z\"\r\n}",
      "result": "CreateRemoteUserResponse",
      "resultExample": "",
      "seeAlso": [
        "MultiplayerServer/DeleteRemoteUser",
        "MultiplayerServer/GetRemoteLoginEndpoint"
      ],
      "errors": [
        "MultiplayerServerBadRequest",
        "MultiplayerServerConflict",
        "MultiplayerServerForbidden",
        "MultiplayerServerInternalServerError",
        "MultiplayerServerNoContent",
        "MultiplayerServerNotFound",
        "MultiplayerServerTooManyRequests",
        "MultiplayerServerUnauthorized",
        "MultiplayerServerUnavailable"
      ]
    },
    {
      "name": "CreateServerMatchmakingTicket",
      "summary": "Create a matchmaking ticket as a server. The matchmaking service automatically starts matching the ticket against other matchmaking tickets.",
      "requestDetails": "The server specifies all the members and their attributes.",
      "subgroup": "Matchmaking",
      "titleTiers": null,
      "url": "/Match/CreateServerMatchmakingTicket",
      "auth": "EntityToken",
      "method": "POST",
      "request": "CreateServerMatchmakingTicketRequest",
      "requestExample": "{\r\n  \"Members\": [],\r\n  \"GiveUpAfterSeconds\": 100,\r\n  \"QueueName\": \"custom123\"\r\n}",
      "result": "CreateMatchmakingTicketResult",
      "resultExample": "{\r\n  \"code\": 200,\r\n  \"status\": \"OK\",\r\n  \"data\": {\r\n    \"TicketId\": \"1c4b0daa-150e-47ae-9923-d770c0f9b07c\"\r\n  }\r\n}",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "errors": [
        "MatchmakingCreateRequestGiveUpAfterInvalid",
        "MatchmakingCreateRequestUserListMissing",
        "MatchmakingCreateTicketServerIdentityInvalid",
        "MatchmakingEntityInvalid",
        "MatchmakingMemberProfileInvalid",
        "MatchmakingPlayerAttributesInvalid",
        "MatchmakingPlayerIdMissing",
        "MatchmakingQueueNameMissing",
        "MatchmakingTicketIdMissing",
        "MatchmakingTitleIdMissing"
      ]
    },
    {
      "name": "DeleteAsset",
      "summary": "Deletes a multiplayer server game asset for a title.",
      "requestDetails": "Deletes a multiplayer server game asset for a title.",
      "subgroup": "MultiplayerServer",
      "titleTiers": null,
      "url": "/MultiplayerServer/DeleteAsset",
      "auth": "EntityToken",
      "method": "POST",
      "request": "DeleteAssetRequest",
      "requestExample": "{\r\n  \"FileName\": \"gameserver.zip\"\r\n}",
      "result": "EmptyResponse",
      "resultExample": "",
      "seeAlso": [
        "MultiplayerServer/GetAssetUploadUrl",
        "MultiplayerServer/ListAssetSummaries"
      ],
      "errors": [
        "MultiplayerServerBadRequest",
        "MultiplayerServerConflict",
        "MultiplayerServerForbidden",
        "MultiplayerServerInternalServerError",
        "MultiplayerServerNoContent",
        "MultiplayerServerNotFound",
        "MultiplayerServerTooManyRequests",
        "MultiplayerServerUnauthorized",
        "MultiplayerServerUnavailable"
      ]
    },
    {
      "name": "DeleteBuild",
      "summary": "Deletes a multiplayer server build.",
      "requestDetails": "Deletes a multiplayer server build.",
      "subgroup": "MultiplayerServer",
      "titleTiers": null,
      "url": "/MultiplayerServer/DeleteBuild",
      "auth": "EntityToken",
      "method": "POST",
      "request": "DeleteBuildRequest",
      "requestExample": "{\r\n  \"BuildId\": \"21781fa8-096d-4d9c-b699-75433d579285\"\r\n}",
      "result": "EmptyResponse",
      "resultExample": "",
      "seeAlso": [
        "MultiplayerServer/CreateBuildWithManagedContainer",
        "MultiplayerServer/GetBuild",
        "MultiplayerServer/ListBuildSummaries"
      ],
      "errors": [
        "MultiplayerServerConflict",
        "MultiplayerServerForbidden",
        "MultiplayerServerInternalServerError",
        "MultiplayerServerNotFound",
        "MultiplayerServerTooManyRequests",
        "MultiplayerServerUnauthorized"
      ]
    },
    {
      "name": "DeleteCertificate",
      "summary": "Deletes a multiplayer server game certificate.",
      "requestDetails": "Deletes a multiplayer server game certificate.",
      "subgroup": "MultiplayerServer",
      "titleTiers": null,
      "url": "/MultiplayerServer/DeleteCertificate",
      "auth": "EntityToken",
      "method": "POST",
      "request": "DeleteCertificateRequest",
      "requestExample": "{\r\n  \"Name\": \"GameCertificate1\"\r\n}",
      "result": "EmptyResponse",
      "resultExample": "",
      "seeAlso": [
        "MultiplayerServer/ListCertificateSummaries",
        "MultiplayerServer/UploadCertificate"
      ],
      "errors": [
        "MultiplayerServerBadRequest",
        "MultiplayerServerConflict",
        "MultiplayerServerForbidden",
        "MultiplayerServerInternalServerError",
        "MultiplayerServerNoContent",
        "MultiplayerServerNotFound",
        "MultiplayerServerTooManyRequests",
        "MultiplayerServerUnauthorized",
        "MultiplayerServerUnavailable"
      ]
    },
    {
      "name": "DeleteRemoteUser",
      "summary": "Deletes a remote user to log on to a VM for a multiplayer server build.",
      "requestDetails": "Deletes a remote user to log on to a VM for a multiplayer server build in a specific region. Returns user credential information necessary to log on.",
      "subgroup": "MultiplayerServer",
      "titleTiers": null,
      "url": "/MultiplayerServer/DeleteRemoteUser",
      "auth": "EntityToken",
      "method": "POST",
      "request": "DeleteRemoteUserRequest",
      "requestExample": "{\r\n  \"BuildId\": \"21781fa8-096d-4d9c-b699-75433d579285\",\r\n  \"Region\": \"SouthCentralUs\",\r\n  \"VmId\": \"VmID1\",\r\n  \"Username\": \"AUsername\"\r\n}",
      "result": "EmptyResponse",
      "resultExample": "",
      "seeAlso": [
        "MultiplayerServer/CreateRemoteUser",
        "MultiplayerServer/GetRemoteLoginEndpoint"
      ],
      "errors": [
        "MultiplayerServerBadRequest",
        "MultiplayerServerConflict",
        "MultiplayerServerForbidden",
        "MultiplayerServerInternalServerError",
        "MultiplayerServerNoContent",
        "MultiplayerServerNotFound",
        "MultiplayerServerTooManyRequests",
        "MultiplayerServerUnauthorized",
        "MultiplayerServerUnavailable"
      ]
    },
    {
      "name": "EnableMultiplayerServersForTitle",
      "summary": "Enables the multiplayer server feature for a title.",
      "requestDetails": "Enables the multiplayer server feature for a title and returns the enabled status. The enabled status can be Initializing, Enabled, and Disabled. It can up to 20 minutes or more for the title to be enabled for the feature. On average, it can take up to 20 minutes for the title to be enabled for the feature.",
      "subgroup": "MultiplayerServer",
      "titleTiers": null,
      "url": "/MultiplayerServer/EnableMultiplayerServersForTitle",
      "auth": "EntityToken",
      "method": "POST",
      "request": "EnableMultiplayerServersForTitleRequest",
      "requestExample": "{}",
      "result": "EnableMultiplayerServersForTitleResponse",
      "resultExample": "{\r\n  \"code\": 200,\r\n  \"status\": \"OK\",\r\n  \"data\": {\r\n    \"Status\": \"Initializing\"\r\n  }\r\n}",
      "seeAlso": [
        "MultiplayerServer/GetTitleEnabledForMultiplayerServersStatus"
      ],
      "errors": [
        "CannotEnableMultiplayerServersForTitle",
        "MultiplayerServerBadRequest",
        "MultiplayerServerForbidden",
        "MultiplayerServerInternalServerError",
        "MultiplayerServerUnauthorized"
      ]
    },
    {
      "name": "GetAssetUploadUrl",
      "summary": "Gets the URL to upload assets to.",
      "requestDetails": "Gets the URL to upload assets to.",
      "subgroup": "MultiplayerServer",
      "titleTiers": null,
      "url": "/MultiplayerServer/GetAssetUploadUrl",
      "auth": "EntityToken",
      "method": "POST",
      "request": "GetAssetUploadUrlRequest",
      "requestExample": "{\r\n  \"FileName\": \"gameserver.zip\"\r\n}",
      "result": "GetAssetUploadUrlResponse",
      "resultExample": "{\r\n  \"code\": 200,\r\n  \"status\": \"OK\",\r\n  \"data\": {\r\n    \"FileName\": \"gameserver.zip\",\r\n    \"AssetUploadUrl\": \"https://2mxyjirehzyc6.blob.core.windows.net/gameassets/gameserver.zip?sv=2015-04-05&ss=b&srt=sco&sp=rw&st=2018-08-21T20%3A27%3A47.5613204Z&se=2018-08-22T01%3A27%3A47.5613204Z&spr=https&sig=SJH%2B1rgFm6%2F6EkUWVPCI5pSR49W5EbZ4L51sDBlkAtE%3D&api-version=2017-07-29\"\r\n  }\r\n}",
      "seeAlso": [
        "MultiplayerServer/ListAssetSummaries",
        "MultiplayerServer/ListCertificateSummaries",
        "MultiplayerServer/UploadCertificate"
      ],
      "errors": [
        "MultiplayerServerBadRequest",
        "MultiplayerServerConflict",
        "MultiplayerServerForbidden",
        "MultiplayerServerInternalServerError",
        "MultiplayerServerNoContent",
        "MultiplayerServerNotFound",
        "MultiplayerServerTooManyRequests",
        "MultiplayerServerUnauthorized",
        "MultiplayerServerUnavailable"
      ]
    },
    {
      "name": "GetBuild",
      "summary": "Gets a multiplayer server build.",
      "requestDetails": "Returns the details about a multiplayer server build.",
      "subgroup": "MultiplayerServer",
      "titleTiers": null,
      "url": "/MultiplayerServer/GetBuild",
      "auth": "EntityToken",
      "method": "POST",
      "request": "GetBuildRequest",
      "requestExample": "{\r\n  \"BuildId\": \"53781fa8-006d-4e9c-b733-57433d579285\"\r\n}",
      "result": "GetBuildResponse",
      "resultExample": "{\r\n  \"code\": 200,\r\n  \"status\": \"OK\",\r\n  \"data\": {\r\n    \"BuildId\": \"21781fa8-096d-4d9c-b699-75433d579285\",\r\n    \"BuildName\": \"GameBuildName\",\r\n    \"BuildStatus\": \"Deployed\",\r\n    \"CreationTime\": \"2014-04-07T09:04:28Z\",\r\n    \"Metadata\": {\r\n      \"MetadataKey\": \"MetadataValue\"\r\n    },\r\n    \"VmSize\": \"Standard_D2_v2\",\r\n    \"ContainerFlavor\": \"ManagedWindowsServerCore\",\r\n    \"Ports\": [\r\n      {\r\n        \"Name\": \"PortName\",\r\n        \"Num\": 1243,\r\n        \"Protocol\": \"TCP\"\r\n      }\r\n    ],\r\n    \"RegionConfigurations\": [\r\n      {\r\n        \"Region\": \"EastUs\",\r\n        \"Status\": \"Initializing\",\r\n        \"MaxServers\": 10,\r\n        \"StandbyServers\": 5\r\n      },\r\n      {\r\n        \"Region\": \"WestUs\",\r\n        \"Status\": \"Succeeded\",\r\n        \"MaxServers\": 12,\r\n        \"StandbyServers\": 8\r\n      },\r\n      {\r\n        \"Region\": \"NorthEurope\",\r\n        \"Status\": \"Unhealthy\",\r\n        \"MaxServers\": 7,\r\n        \"StandbyServers\": 3\r\n      }\r\n    ],\r\n    \"GameAssetReferences\": [\r\n      {\r\n        \"FileName\": \"gameserver.zip\",\r\n        \"MountPath\": \"C:\\\\Asset\\\\\"\r\n      }\r\n    ],\r\n    \"GameCertificateReferences\": [\r\n      {\r\n        \"Name\": \"CertName\",\r\n        \"GsdkAlias\": \"CertGsdkAlias\"\r\n      }\r\n    ],\r\n    \"StartMultiplayerServerCommand\": \"C:\\\\Assets\\\\gameserver.exe -startserver\",\r\n    \"MultiplayerServerCountPerVm\": 10\r\n  }\r\n}",
      "seeAlso": [
        "MultiplayerServer/CreateBuildWithManagedContainer",
        "MultiplayerServer/DeleteBuild",
        "MultiplayerServer/ListBuildSummaries"
      ],
      "errors": [
        "MultiplayerServerBadRequest",
        "MultiplayerServerConflict",
        "MultiplayerServerForbidden",
        "MultiplayerServerInternalServerError",
        "MultiplayerServerNotFound",
        "MultiplayerServerUnauthorized"
      ]
    },
    {
      "name": "GetCognitiveServicesToken",
      "summary": "Gets a token for the cognitive services based on the specified service type.",
      "requestDetails": "Gets a token for the cognitive services where translation queries can be sent to.",
      "subgroup": "MultiplayerServer",
      "titleTiers": null,
      "url": "/MultiplayerServer/GetCognitiveServicesToken",
      "auth": "EntityToken",
      "method": "POST",
      "request": "GetCognitiveServicesTokenRequest",
      "requestExample": "{\r\n  \"CognitiveServicesType\": \"SpeechToText\",\r\n  \"Region\": \"AustraliaEast\"\r\n}",
      "result": "GetCognitiveServicesTokenResponse",
      "resultExample": "{\r\n  \"code\": 200,\r\n  \"status\": \"OK\",\r\n  \"data\": {\r\n    \"Token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c\",\r\n    \"ServiceEndpoint\": \"https://westus.stt.speech.microsoft.com/speech/recognition/conversation/cognitiveservices/v1\"\r\n  }\r\n}",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "errors": [
        "MultiplayerServerBadRequest",
        "MultiplayerServerConflict",
        "MultiplayerServerForbidden",
        "MultiplayerServerInternalServerError",
        "MultiplayerServerNoContent",
        "MultiplayerServerNotFound",
        "MultiplayerServerTooManyRequests",
        "MultiplayerServerUnauthorized",
        "MultiplayerServerUnavailable"
      ]
    },
    {
      "name": "GetContainerRegistryCredentials",
      "summary": "Gets the credentials to the container registry.",
      "requestDetails": "Gets credentials to the container registry where game developers can upload custom container images to before creating a new build.",
      "subgroup": "MultiplayerServer",
      "titleTiers": null,
      "url": "/MultiplayerServer/GetContainerRegistryCredentials",
      "auth": "EntityToken",
      "method": "POST",
      "request": "GetContainerRegistryCredentialsRequest",
      "requestExample": "{}",
      "result": "GetContainerRegistryCredentialsResponse",
      "resultExample": "{\r\n  \"code\": 200,\r\n  \"status\": \"OK\",\r\n  \"data\": {\r\n    \"DnsName\": \"registry.azurecr.io\",\r\n    \"Username\": \"RegistryUser\",\r\n    \"Password\": \"RegistryPassword\"\r\n  }\r\n}",
      "seeAlso": [
        "MultiplayerServer/CreateBuildWithCustomContainer",
        "MultiplayerServer/RolloverContainerRegistryCredentials"
      ],
      "errors": [
        "MultiplayerServerBadRequest",
        "MultiplayerServerConflict",
        "MultiplayerServerForbidden",
        "MultiplayerServerInternalServerError",
        "MultiplayerServerNoContent",
        "MultiplayerServerNotFound",
        "MultiplayerServerTooManyRequests",
        "MultiplayerServerUnauthorized",
        "MultiplayerServerUnavailable"
      ]
    },
    {
      "name": "GetMatch",
      "summary": "Get a match.",
      "requestDetails": "When matchmaking has successfully matched together a collection of tickets, it produces a 'match' with an Id. The match contains all of the players that were matched together, and their team assigments. Only servers and ticket members can get the match.",
      "subgroup": "Matchmaking",
      "titleTiers": null,
      "url": "/Match/GetMatch",
      "auth": "EntityToken",
      "method": "POST",
      "request": "GetMatchRequest",
      "requestExample": "{\r\n  \"MatchId\": \"4e0c5fd7-80e9-4744-b0ce-061a7f067ff5\",\r\n  \"QueueName\": \"custom123\",\r\n  \"EscapeObject\": false\r\n}",
      "result": "GetMatchResult",
      "resultExample": "{\r\n  \"code\": 200,\r\n  \"status\": \"OK\",\r\n  \"data\": {\r\n    \"MatchId\": \"4e0c5fd7-80e9-4744-b0ce-061a7f067ff5\",\r\n    \"Members\": [],\r\n    \"RegionPreferences\": [\r\n      \"Region1\",\r\n      \"Region2\"\r\n    ],\r\n    \"ServerDetails\": {\r\n      \"IPV4Address\": \"10.250.24.54\",\r\n      \"Ports\": [\r\n        {\r\n          \"Name\": \"PortName\",\r\n          \"Num\": 1243,\r\n          \"Protocol\": \"TCP\"\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "errors": [
        "MatchmakingEntityInvalid",
        "MatchmakingMatchIdIdMissing",
        "MatchmakingMatchIdMissing",
        "MatchmakingMatchNotFound",
        "MatchmakingQueueNameMissing",
        "MatchmakingTitleIdMissing"
      ]
    },
    {
      "name": "GetMatchmakingQueue",
      "summary": "Get a matchmaking queue configuration.",
      "requestDetails": "Gets the current configuration for a queue.",
      "subgroup": "Matchmaking Admin",
      "titleTiers": null,
      "url": "/Match/GetMatchmakingQueue",
      "auth": "EntityToken",
      "method": "POST",
      "request": "GetMatchmakingQueueRequest",
      "requestExample": "{\r\n  \"QueueName\": \"custom123\"\r\n}",
      "result": "GetMatchmakingQueueResult",
      "resultExample": "",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "errors": [
        "MatchmakingQueueConfigNotFound",
        "NotAuthorized"
      ]
    },
    {
      "name": "GetMatchmakingTicket",
      "summary": "Get a matchmaking ticket by ticket Id.",
      "requestDetails": "The ticket includes the invited players, their attributes if they have joined, the ticket status, the match Id when applicable, etc. Only servers, the ticket creator and the invited players can get the ticket.",
      "subgroup": "Matchmaking",
      "titleTiers": null,
      "url": "/Match/GetMatchmakingTicket",
      "auth": "EntityToken",
      "method": "POST",
      "request": "GetMatchmakingTicketRequest",
      "requestExample": "{\r\n  \"TicketId\": \"1c4b0daa-150e-47ae-9923-d770c0f9b07c\",\r\n  \"QueueName\": \"custom123\",\r\n  \"EscapeObject\": false\r\n}",
      "result": "GetMatchmakingTicketResult",
      "resultExample": "{\r\n  \"code\": 200,\r\n  \"status\": \"OK\",\r\n  \"data\": {\r\n    \"TicketId\": \"1c4b0daa-150e-47ae-9923-d770c0f9b07c\",\r\n    \"QueueName\": \"custom123\",\r\n    \"MatchId\": \"4e0c5fd7-80e9-4744-b0ce-061a7f067ff5\",\r\n    \"Created\": \"2016-08-23T12:33:14Z\",\r\n    \"Status\": \"MATCHED\",\r\n    \"GiveUpAfterSeconds\": 100,\r\n    \"MembersToMatchWith\": [\r\n      {\r\n        \"Id\": \"123123123\",\r\n        \"Type\": \"title_player_acount\",\r\n        \"TypeString\": \"title_player_acount\"\r\n      }\r\n    ],\r\n    \"Members\": [],\r\n    \"Creator\": {\r\n      \"Id\": \"123123123\",\r\n      \"Type\": \"title_player_acount\",\r\n      \"TypeString\": \"title_player_acount\"\r\n    }\r\n  }\r\n}",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "errors": [
        "MatchmakingEntityInvalid",
        "MatchmakingGetMatchIdentityMismatch",
        "MatchmakingGetTicketUserMismatch",
        "MatchmakingQueueNameMissing",
        "MatchmakingTicketIdIdMissing",
        "MatchmakingTicketIdMissing",
        "MatchmakingTicketNotFound",
        "MatchmakingTitleIdMissing"
      ]
    },
    {
      "name": "GetMultiplayerServerDetails",
      "summary": "Gets multiplayer server session details for a build.",
      "requestDetails": "Gets multiplayer server session details for a build in a specific region.",
      "subgroup": "MultiplayerServer",
      "titleTiers": null,
      "url": "/MultiplayerServer/GetMultiplayerServerDetails",
      "auth": "EntityToken",
      "method": "POST",
      "request": "GetMultiplayerServerDetailsRequest",
      "requestExample": "{\r\n  \"BuildId\": \"21781fa8-096d-4d9c-b699-75433d579285\",\r\n  \"SessionId\": \"02bdef0e-e01e-4b29-8efe-ff9f47a06d8c\",\r\n  \"Region\": \"SouthCentralUs\"\r\n}",
      "result": "GetMultiplayerServerDetailsResponse",
      "resultExample": "{\r\n  \"code\": 200,\r\n  \"status\": \"OK\",\r\n  \"data\": {\r\n    \"SessionId\": \"02bdef0e-e01e-4b29-8efe-ff9f47a06d8c\",\r\n    \"ServerId\": \"AMultiplayerGameServer\",\r\n    \"VmId\": \"VmID1\",\r\n    \"IPV4Address\": \"10.250.24.54\",\r\n    \"Ports\": [\r\n      {\r\n        \"Name\": \"PortName\",\r\n        \"Num\": 1243,\r\n        \"Protocol\": \"TCP\"\r\n      }\r\n    ],\r\n    \"Region\": \"SouthCentralUs\",\r\n    \"State\": \"Active\",\r\n    \"ConnectedPlayers\": [\r\n      {\r\n        \"PlayerId\": \"10931352888739351331\"\r\n      },\r\n      {\r\n        \"PlayerId\": \"10271352123739051532\"\r\n      }\r\n    ]\r\n  }\r\n}",
      "seeAlso": [
        "MultiplayerServer/RequestMultiplayerServer"
      ],
      "errors": [
        "MultiplayerServerBadRequest",
        "MultiplayerServerForbidden",
        "MultiplayerServerInternalServerError",
        "MultiplayerServerNotFound",
        "MultiplayerServerUnauthorized",
        "MultiplayerServerUnavailable"
      ]
    },
    {
      "name": "GetMultiplayerServerLogs",
      "summary": "Gets multiplayer server logs.",
      "requestDetails": "Gets multiplayer server logs for a specific server id in a region.",
      "subgroup": "MultiplayerServer",
      "titleTiers": null,
      "url": "/MultiplayerServer/GetMultiplayerServerLogs",
      "auth": "EntityToken",
      "method": "POST",
      "request": "GetMultiplayerServerLogsRequest",
      "requestExample": "{\r\n  \"Region\": \"SouthCentralUs\",\r\n  \"ServerId\": \"SomeServerId\"\r\n}",
      "result": "GetMultiplayerServerLogsResponse",
      "resultExample": "{\r\n  \"code\": 200,\r\n  \"status\": \"OK\",\r\n  \"data\": {\r\n    \"LogDownloadUrl\": \"TheLogDownloadUrl\"\r\n  }\r\n}",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "seeAlso": [
        "MultiplayerServer/GetMultiplayerServerDetails",
        "MultiplayerServer/RequestMultiplayerServer"
      ],
      "errors": [
        "MultiplayerServerBadRequest",
        "MultiplayerServerConflict",
        "MultiplayerServerForbidden",
        "MultiplayerServerInternalServerError",
        "MultiplayerServerNoContent",
        "MultiplayerServerNotFound",
        "MultiplayerServerTooManyRequests",
        "MultiplayerServerUnauthorized",
        "MultiplayerServerUnavailable"
      ]
    },
    {
      "name": "GetQueueStatistics",
      "summary": "Get the statistics for a queue.",
      "requestDetails": "Returns the matchmaking statistics for a queue. These include the number of players matching and the statistics related to the time to match statistics in seconds (average and percentiles). Statistics are refreshed once every 5 minutes. Servers can access all statistics no matter what the ClientStatisticsVisibility is configured to. Clients can access statistics according to the ClientStatisticsVisibility. Client requests are forbidden if all visibility fields are false.",
      "subgroup": "Matchmaking",
      "titleTiers": null,
      "url": "/Match/GetQueueStatistics",
      "auth": "EntityToken",
      "method": "POST",
      "request": "GetQueueStatisticsRequest",
      "requestExample": "{\r\n  \"QueueName\": \"custom123\"\r\n}",
      "result": "GetQueueStatisticsResult",
      "resultExample": "{\r\n  \"code\": 200,\r\n  \"status\": \"OK\",\r\n  \"data\": {\r\n    \"NumberOfPlayersMatching\": 563,\r\n    \"TimeToMatchStatisticsInSeconds\": {\r\n      \"Average\": 2.2,\r\n      \"Percentile50\": 2.1,\r\n      \"Percentile90\": 2.21,\r\n      \"Percentile99\": 3.0\r\n    }\r\n  }\r\n}",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "errors": [
        "MatchmakingEntityInvalid",
        "MatchmakingGetStatisticsIdentityInvalid",
        "MatchmakingQueueConfigNotFound",
        "MatchmakingQueueNameMissing",
        "MatchmakingStatisticsIdMissing",
        "MatchmakingTitleIdMissing",
        "NotAuthorized"
      ]
    },
    {
      "name": "GetRemoteLoginEndpoint",
      "summary": "Gets a remote login endpoint to a VM that is hosting a multiplayer server build.",
      "requestDetails": "Gets a remote login endpoint to a VM that is hosting a multiplayer server build in a specific region.",
      "subgroup": "MultiplayerServer",
      "titleTiers": null,
      "url": "/MultiplayerServer/GetRemoteLoginEndpoint",
      "auth": "EntityToken",
      "method": "POST",
      "request": "GetRemoteLoginEndpointRequest",
      "requestExample": "{\r\n  \"BuildId\": \"21781fa8-096d-4d9c-b699-75433d579285\",\r\n  \"Region\": \"SouthCentralUs\",\r\n  \"VmId\": \"VmID1\"\r\n}",
      "result": "GetRemoteLoginEndpointResponse",
      "resultExample": "{\r\n  \"code\": 200,\r\n  \"status\": \"OK\",\r\n  \"data\": {\r\n    \"IPV4Address\": \"10.250.24.54\",\r\n    \"Port\": 1234\r\n  }\r\n}",
      "seeAlso": [
        "MultiplayerServer/CreateRemoteUser"
      ],
      "errors": [
        "MultiplayerServerBadRequest",
        "MultiplayerServerConflict",
        "MultiplayerServerForbidden",
        "MultiplayerServerInternalServerError",
        "MultiplayerServerNoContent",
        "MultiplayerServerNotFound",
        "MultiplayerServerTooManyRequests",
        "MultiplayerServerUnauthorized",
        "MultiplayerServerUnavailable"
      ]
    },
    {
      "name": "GetTitleEnabledForMultiplayerServersStatus",
      "summary": "Gets the status of whether a title is enabled for the multiplayer server feature.",
      "requestDetails": "Gets the status of whether a title is enabled for the multiplayer server feature. The enabled status can be Initializing, Enabled, and Disabled.",
      "subgroup": "MultiplayerServer",
      "titleTiers": null,
      "url": "/MultiplayerServer/GetTitleEnabledForMultiplayerServersStatus",
      "auth": "EntityToken",
      "method": "POST",
      "request": "GetTitleEnabledForMultiplayerServersStatusRequest",
      "requestExample": "{}",
      "result": "GetTitleEnabledForMultiplayerServersStatusResponse",
      "resultExample": "{\r\n  \"code\": 200,\r\n  \"status\": \"OK\",\r\n  \"data\": {\r\n    \"Status\": \"Disabled\"\r\n  }\r\n}",
      "seeAlso": [
        "MultiplayerServer/EnableMultiplayerServersForTitle"
      ],
      "errors": [
        "MultiplayerServerBadRequest",
        "MultiplayerServerForbidden",
        "MultiplayerServerInternalServerError",
        "MultiplayerServerNotFound",
        "MultiplayerServerUnauthorized"
      ]
    },
    {
      "name": "JoinMatchmakingTicket",
      "summary": "Join a matchmaking ticket.",
      "requestDetails": "Add the player to a matchmaking ticket and specify all of its matchmaking attributes. Players can join a ticket if and only if their EntityKeys are already listed in the ticket's Members list. The matchmaking service automatically starts matching the ticket against other matchmaking tickets once all players have joined the ticket. It is not possible to join a ticket once it has started matching.",
      "subgroup": "Matchmaking",
      "titleTiers": null,
      "url": "/Match/JoinMatchmakingTicket",
      "auth": "EntityToken",
      "method": "POST",
      "request": "JoinMatchmakingTicketRequest",
      "requestExample": "{\r\n  \"TicketId\": \"1c4b0daa-150e-47ae-9923-d770c0f9b07c\",\r\n  \"QueueName\": \"custom123\",\r\n  \"Member\": {}\r\n}",
      "result": "JoinMatchmakingTicketResult",
      "resultExample": "{\r\n  \"code\": 200,\r\n  \"status\": \"OK\",\r\n  \"data\": {}\r\n}",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "errors": [
        "MatchmakingAlreadyJoinedTicket",
        "MatchmakingEntityInvalid",
        "MatchmakingJoinRequestUserMissing",
        "MatchmakingJoinTicketServerIdentityInvalid",
        "MatchmakingJoinTicketUserIdentityMismatch",
        "MatchmakingMemberProfileInvalid",
        "MatchmakingPlayerAttributesInvalid",
        "MatchmakingPlayerIdentityMismatch",
        "MatchmakingPlayerIdMissing",
        "MatchmakingQueueNameMissing",
        "MatchmakingTicketAlreadyCompleted",
        "MatchmakingTicketIdIdMissing",
        "MatchmakingTicketIdMissing",
        "MatchmakingTicketNotFound",
        "MatchmakingTitleIdMissing"
      ]
    },
    {
      "name": "ListArchivedMultiplayerServers",
      "summary": "Lists archived multiplayer server sessions for a build.",
      "requestDetails": "Returns a list of archived multiplayer servers for a build in a specific region.",
      "subgroup": "MultiplayerServer",
      "titleTiers": null,
      "url": "/MultiplayerServer/ListArchivedMultiplayerServers",
      "auth": "EntityToken",
      "method": "POST",
      "request": "ListMultiplayerServersRequest",
      "requestExample": "{\r\n  \"BuildId\": \"21781fa8-096d-4d9c-b699-75433d579285\",\r\n  \"Region\": \"SouthCentralUs\"\r\n}",
      "result": "ListMultiplayerServersResponse",
      "resultExample": "{\r\n  \"code\": 200,\r\n  \"status\": \"OK\",\r\n  \"data\": {\r\n    \"MultiplayerServerSummaries\": [\r\n      {\r\n        \"ServerId\": \"AMultiplayerGameServer\",\r\n        \"SessionId\": \"02bdef0e-e01e-4b29-8efe-ff9f47a06d8c\",\r\n        \"VmId\": \"VmID1\",\r\n        \"Region\": \"SouthCentralUs\",\r\n        \"State\": \"Active\",\r\n        \"ConnectedPlayers\": [\r\n          {\r\n            \"PlayerId\": \"10931352888739351331\"\r\n          },\r\n          {\r\n            \"PlayerId\": \"10271352123739051532\"\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"ServerId\": \"SomeOtherMultiplayerGameServer\",\r\n        \"SessionId\": \"82bdef0e-a21e-3b29-8efe-ff9e57a08c1d\",\r\n        \"VmId\": \"VmID2\",\r\n        \"Region\": \"SouthCentralUs\",\r\n        \"State\": \"Terminated\",\r\n        \"ConnectedPlayers\": []\r\n      }\r\n    ],\r\n    \"PageSize\": 0\r\n  }\r\n}",
      "seeAlso": [
        "MultiplayerServer/RequestMultiplayerServer"
      ],
      "errors": [
        "MultiplayerServerBadRequest",
        "MultiplayerServerForbidden",
        "MultiplayerServerInternalServerError",
        "MultiplayerServerNotFound",
        "MultiplayerServerUnauthorized",
        "MultiplayerServerUnavailable"
      ]
    },
    {
      "name": "ListAssetSummaries",
      "summary": "Lists multiplayer server game assets for a title.",
      "requestDetails": "Returns a list of multiplayer server game asset summaries for a title.",
      "subgroup": "MultiplayerServer",
      "titleTiers": null,
      "url": "/MultiplayerServer/ListAssetSummaries",
      "auth": "EntityToken",
      "method": "POST",
      "request": "ListAssetSummariesRequest",
      "requestExample": "{\r\n  \"PageSize\": 10\r\n}",
      "result": "ListAssetSummariesResponse",
      "resultExample": "{\r\n  \"code\": 200,\r\n  \"status\": \"OK\",\r\n  \"data\": {\r\n    \"AssetSummaries\": [\r\n      {\r\n        \"FileName\": \"gameserver.zip\",\r\n        \"Metadata\": {\r\n          \"MetadataKey\": \"MetaDataValue\"\r\n        }\r\n      }\r\n    ],\r\n    \"PageSize\": 10\r\n  }\r\n}",
      "seeAlso": [
        "MultiplayerServer/GetAssetUploadUrl",
        "MultiplayerServer/ListCertificateSummaries",
        "MultiplayerServer/UploadCertificate"
      ],
      "errors": [
        "MultiplayerServerBadRequest",
        "MultiplayerServerConflict",
        "MultiplayerServerForbidden",
        "MultiplayerServerInternalServerError",
        "MultiplayerServerNoContent",
        "MultiplayerServerNotFound",
        "MultiplayerServerTooManyRequests",
        "MultiplayerServerUnauthorized",
        "MultiplayerServerUnavailable"
      ]
    },
    {
      "name": "ListBuildSummaries",
      "summary": "Lists summarized details of all multiplayer server builds for a title.",
      "requestDetails": "Returns a list of summarized details of all multiplayer server builds for a title.",
      "subgroup": "MultiplayerServer",
      "titleTiers": null,
      "url": "/MultiplayerServer/ListBuildSummaries",
      "auth": "EntityToken",
      "method": "POST",
      "request": "ListBuildSummariesRequest",
      "requestExample": "{\r\n  \"PageSize\": 10\r\n}",
      "result": "ListBuildSummariesResponse",
      "resultExample": "",
      "seeAlso": [
        "MultiplayerServer/CreateBuildWithManagedContainer",
        "MultiplayerServer/DeleteBuild",
        "MultiplayerServer/GetBuild"
      ],
      "errors": [
        "MultiplayerServerBadRequest",
        "MultiplayerServerForbidden",
        "MultiplayerServerInternalServerError",
        "MultiplayerServerNotFound",
        "MultiplayerServerUnauthorized"
      ]
    },
    {
      "name": "ListCertificateSummaries",
      "summary": "Lists multiplayer server game certificates for a title.",
      "requestDetails": "Returns a list of multiplayer server game certificates for a title.",
      "subgroup": "MultiplayerServer",
      "titleTiers": null,
      "url": "/MultiplayerServer/ListCertificateSummaries",
      "auth": "EntityToken",
      "method": "POST",
      "request": "ListCertificateSummariesRequest",
      "requestExample": "{\r\n  \"PageSize\": 10\r\n}",
      "result": "ListCertificateSummariesResponse",
      "resultExample": "{\r\n  \"code\": 200,\r\n  \"status\": \"OK\",\r\n  \"data\": {\r\n    \"CertificateSummaries\": [\r\n      {\r\n        \"Name\": \"GameCertificate1\",\r\n        \"Thumbprint\": \"Thumbprint1\"\r\n      },\r\n      {\r\n        \"Name\": \"GameCertificate2\",\r\n        \"Thumbprint\": \"Thumbprint2\"\r\n      }\r\n    ],\r\n    \"PageSize\": 10\r\n  }\r\n}",
      "seeAlso": [
        "MultiplayerServer/DeleteCertificate",
        "MultiplayerServer/UploadCertificate"
      ],
      "errors": [
        "MultiplayerServerBadRequest",
        "MultiplayerServerConflict",
        "MultiplayerServerForbidden",
        "MultiplayerServerInternalServerError",
        "MultiplayerServerNoContent",
        "MultiplayerServerNotFound",
        "MultiplayerServerTooManyRequests",
        "MultiplayerServerUnauthorized",
        "MultiplayerServerUnavailable"
      ]
    },
    {
      "name": "ListContainerImages",
      "summary": "Lists custom container images for a title.",
      "requestDetails": "Returns a list of the container images that have been uploaded to the container registry for a title.",
      "subgroup": "MultiplayerServer",
      "titleTiers": null,
      "url": "/MultiplayerServer/ListContainerImages",
      "auth": "EntityToken",
      "method": "POST",
      "request": "ListContainerImagesRequest",
      "requestExample": "{\r\n  \"PageSize\": 10\r\n}",
      "result": "ListContainerImagesResponse",
      "resultExample": "{\r\n  \"code\": 200,\r\n  \"status\": \"OK\",\r\n  \"data\": {\r\n    \"Images\": [\r\n      \"ImageName1\",\r\n      \"ImageName2\"\r\n    ],\r\n    \"PageSize\": 10\r\n  }\r\n}",
      "seeAlso": [
        "MultiplayerServer/GetContainerRegistryCredentials",
        "MultiplayerServer/ListContainerImageTags"
      ],
      "errors": [
        "MultiplayerServerBadRequest",
        "MultiplayerServerConflict",
        "MultiplayerServerForbidden",
        "MultiplayerServerInternalServerError",
        "MultiplayerServerNoContent",
        "MultiplayerServerNotFound",
        "MultiplayerServerTooManyRequests",
        "MultiplayerServerUnauthorized",
        "MultiplayerServerUnavailable"
      ]
    },
    {
      "name": "ListContainerImageTags",
      "summary": "Lists the tags for a custom container image.",
      "requestDetails": "Returns a list of the tags for a particular container image that exists in the container registry for a title.",
      "subgroup": "MultiplayerServer",
      "titleTiers": null,
      "url": "/MultiplayerServer/ListContainerImageTags",
      "auth": "EntityToken",
      "method": "POST",
      "request": "ListContainerImageTagsRequest",
      "requestExample": "{\r\n  \"ImageName\": \"imageName1\"\r\n}",
      "result": "ListContainerImageTagsResponse",
      "resultExample": "{\r\n  \"code\": 200,\r\n  \"status\": \"OK\",\r\n  \"data\": {\r\n    \"Tags\": [\r\n      \"ImageTag1\",\r\n      \"ImageTag2\"\r\n    ]\r\n  }\r\n}",
      "seeAlso": [
        "MultiplayerServer/ListContainerImages"
      ],
      "errors": [
        "MultiplayerServerBadRequest",
        "MultiplayerServerConflict",
        "MultiplayerServerForbidden",
        "MultiplayerServerInternalServerError",
        "MultiplayerServerNoContent",
        "MultiplayerServerNotFound",
        "MultiplayerServerTooManyRequests",
        "MultiplayerServerUnauthorized",
        "MultiplayerServerUnavailable"
      ]
    },
    {
      "name": "ListMatchmakingQueues",
      "summary": "List all matchmaking queue configs.",
      "requestDetails": "Gets a list of all the matchmaking queue configurations for the title.",
      "subgroup": "Matchmaking Admin",
      "titleTiers": null,
      "url": "/Match/ListMatchmakingQueues",
      "auth": "EntityToken",
      "method": "POST",
      "request": "ListMatchmakingQueuesRequest",
      "requestExample": "{}",
      "result": "ListMatchmakingQueuesResult",
      "resultExample": "",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "errors": [
        "NotAuthorized"
      ]
    },
    {
      "name": "ListMultiplayerServers",
      "summary": "Lists multiplayer server sessions for a build.",
      "requestDetails": "Returns a list of multiplayer servers for a build in a specific region.",
      "subgroup": "MultiplayerServer",
      "titleTiers": null,
      "url": "/MultiplayerServer/ListMultiplayerServers",
      "auth": "EntityToken",
      "method": "POST",
      "request": "ListMultiplayerServersRequest",
      "requestExample": "{\r\n  \"BuildId\": \"21781fa8-096d-4d9c-b699-75433d579285\",\r\n  \"Region\": \"SouthCentralUs\"\r\n}",
      "result": "ListMultiplayerServersResponse",
      "resultExample": "{\r\n  \"code\": 200,\r\n  \"status\": \"OK\",\r\n  \"data\": {\r\n    \"MultiplayerServerSummaries\": [\r\n      {\r\n        \"ServerId\": \"AMultiplayerGameServer\",\r\n        \"SessionId\": \"02bdef0e-e01e-4b29-8efe-ff9f47a06d8c\",\r\n        \"VmId\": \"VmID1\",\r\n        \"Region\": \"SouthCentralUs\",\r\n        \"State\": \"Active\",\r\n        \"ConnectedPlayers\": [\r\n          {\r\n            \"PlayerId\": \"10931352888739351331\"\r\n          },\r\n          {\r\n            \"PlayerId\": \"10271352123739051532\"\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"ServerId\": \"SomeOtherMultiplayerGameServer\",\r\n        \"SessionId\": \"82bdef0e-a21e-3b29-8efe-ff9e57a08c1d\",\r\n        \"VmId\": \"VmID2\",\r\n        \"Region\": \"SouthCentralUs\",\r\n        \"State\": \"Terminated\",\r\n        \"ConnectedPlayers\": []\r\n      }\r\n    ],\r\n    \"PageSize\": 0\r\n  }\r\n}",
      "seeAlso": [
        "MultiplayerServer/RequestMultiplayerServer"
      ],
      "errors": [
        "MultiplayerServerBadRequest",
        "MultiplayerServerForbidden",
        "MultiplayerServerInternalServerError",
        "MultiplayerServerNotFound",
        "MultiplayerServerUnauthorized",
        "MultiplayerServerUnavailable"
      ]
    },
    {
      "name": "ListQosServers",
      "summary": "Lists quality of service servers.",
      "requestDetails": "Returns a list of quality of service servers.",
      "subgroup": "MultiplayerServer",
      "titleTiers": null,
      "url": "/MultiplayerServer/ListQosServers",
      "auth": "None",
      "method": "POST",
      "request": "ListQosServersRequest",
      "requestExample": "{}",
      "result": "ListQosServersResponse",
      "resultExample": "{\r\n  \"code\": 200,\r\n  \"status\": \"OK\",\r\n  \"data\": {\r\n    \"QosServers\": [\r\n      {\r\n        \"ServerUrl\": \"xblcxplatqos-wus-9-18-2-0.cloudapp.net\",\r\n        \"Region\": \"WestUs\"\r\n      },\r\n      {\r\n        \"ServerUrl\": \"xblcxplatqos-wus-9-18-2-0.cloudapp.net\",\r\n        \"Region\": \"SouthCentralUs\"\r\n      },\r\n      {\r\n        \"ServerUrl\": \"xblcxplatqos-wus-9-18-2-0.cloudapp.net\",\r\n        \"Region\": \"EastUs\"\r\n      },\r\n      {\r\n        \"ServerUrl\": \"xblcxplatqos-wus-9-18-2-0.cloudapp.net\",\r\n        \"Region\": \"NorthEurope\"\r\n      },\r\n      {\r\n        \"ServerUrl\": \"xblcxplatqos-wus-9-18-2-0.cloudapp.net\",\r\n        \"Region\": \"WestEurope\"\r\n      }\r\n    ],\r\n    \"PageSize\": 10\r\n  }\r\n}",
      "errors": [
        "MultiplayerServerBadRequest",
        "MultiplayerServerForbidden",
        "MultiplayerServerInternalServerError",
        "MultiplayerServerUnauthorized"
      ]
    },
    {
      "name": "ListVirtualMachineSummaries",
      "summary": "Lists virtual machines for a title.",
      "requestDetails": "Returns a list of virtual machines for a title.",
      "subgroup": "MultiplayerServer",
      "titleTiers": null,
      "url": "/MultiplayerServer/ListVirtualMachineSummaries",
      "auth": "EntityToken",
      "method": "POST",
      "request": "ListVirtualMachineSummariesRequest",
      "requestExample": "{\r\n  \"BuildId\": \"21781fa8-096d-4d9c-b699-75433d579285\",\r\n  \"Region\": \"SouthCentralUs\",\r\n  \"PageSize\": 10\r\n}",
      "result": "ListVirtualMachineSummariesResponse",
      "resultExample": "{\r\n  \"code\": 200,\r\n  \"status\": \"OK\",\r\n  \"data\": {\r\n    \"VirtualMachines\": [\r\n      {\r\n        \"VmId\": \"VmID1\",\r\n        \"State\": \"Running\",\r\n        \"HealthStatus\": \"Healthy\"\r\n      },\r\n      {\r\n        \"VmId\": \"VmID2\",\r\n        \"State\": \"Propping\",\r\n        \"HealthStatus\": \"Healthy\"\r\n      }\r\n    ],\r\n    \"PageSize\": 10\r\n  }\r\n}",
      "errors": [
        "MultiplayerServerBadRequest",
        "MultiplayerServerForbidden",
        "MultiplayerServerInternalServerError",
        "MultiplayerServerNotFound",
        "MultiplayerServerUnauthorized",
        "MultiplayerServerUnavailable"
      ]
    },
    {
      "name": "RemoveMatchmakingQueue",
      "summary": "Remove a matchmaking queue config.",
      "requestDetails": "Deletes the configuration for a queue. This will permanently delete the configuration and players will no longer be able to match in the queue. All outstanding matchmaking tickets will be cancelled.",
      "subgroup": "Matchmaking Admin",
      "titleTiers": null,
      "url": "/Match/RemoveMatchmakingQueue",
      "auth": "EntityToken",
      "method": "POST",
      "request": "RemoveMatchmakingQueueRequest",
      "requestExample": "{\r\n  \"QueueName\": \"custom123\"\r\n}",
      "result": "RemoveMatchmakingQueueResult",
      "resultExample": "",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "errors": [
        "NotAuthorized"
      ]
    },
    {
      "name": "RequestMultiplayerServer",
      "summary": "Request a multiplayer server session. Accepts tokens for title and if game client accesss is enabled, allows game client to request a server with player entity token.",
      "requestDetails": "Requests a multiplayer server session from a particular build in any of the given preferred regions.",
      "subgroup": "MultiplayerServer",
      "titleTiers": null,
      "url": "/MultiplayerServer/RequestMultiplayerServer",
      "auth": "EntityToken",
      "method": "POST",
      "request": "RequestMultiplayerServerRequest",
      "requestExample": "{\r\n  \"BuildId\": \"21781fa8-096d-4d9c-b699-75433d579285\",\r\n  \"SessionId\": \"02bdef0e-e01e-4b29-8efe-ff9f47a06d8c\",\r\n  \"SessionCookie\": \"U2Vzc2lvbkNvb2tpZQ==\",\r\n  \"InitialPlayers\": [\r\n    \"gamer1\",\r\n    \"gamer2\"\r\n  ],\r\n  \"PreferredRegions\": [\r\n    \"SouthCentralUs\",\r\n    \"WestUs\"\r\n  ]\r\n}",
      "result": "RequestMultiplayerServerResponse",
      "resultExample": "{\r\n  \"code\": 200,\r\n  \"status\": \"OK\",\r\n  \"data\": {\r\n    \"SessionId\": \"02bdef0e-e01e-4b29-8efe-ff9f47a06d8c\",\r\n    \"ServerId\": \"AMultiplayerGameServer\",\r\n    \"VmId\": \"80c00b02-a559-4961-9b31-4a04b39e26a6\",\r\n    \"IPV4Address\": \"10.250.24.54\",\r\n    \"FQDN\": \"vm.azure.cloudapp.net\",\r\n    \"Ports\": [\r\n      {\r\n        \"Name\": \"PortName\",\r\n        \"Num\": 1243,\r\n        \"Protocol\": \"TCP\"\r\n      }\r\n    ],\r\n    \"Region\": \"SouthCentralUs\",\r\n    \"State\": \"Active\",\r\n    \"ConnectedPlayers\": [\r\n      {\r\n        \"PlayerId\": \"10931352888739351331\"\r\n      },\r\n      {\r\n        \"PlayerId\": \"10271352123739051532\"\r\n      }\r\n    ]\r\n  }\r\n}",
      "seeAlso": [
        "MultiplayerServer/GetMultiplayerServerDetails"
      ],
      "errors": [
        "APINotEnabledForGameClientAccess",
        "MultiplayerServerBadRequest",
        "MultiplayerServerForbidden",
        "MultiplayerServerInternalServerError",
        "MultiplayerServerNotFound",
        "MultiplayerServerTooManyRequests",
        "MultiplayerServerUnauthorized",
        "MultiplayerServerUnavailable"
      ]
    },
    {
      "name": "RolloverContainerRegistryCredentials",
      "summary": "Rolls over the credentials to the container registry.",
      "requestDetails": "Gets new credentials to the container registry where game developers can upload custom container images to before creating a new build.",
      "subgroup": "MultiplayerServer",
      "titleTiers": null,
      "url": "/MultiplayerServer/RolloverContainerRegistryCredentials",
      "auth": "EntityToken",
      "method": "POST",
      "request": "RolloverContainerRegistryCredentialsRequest",
      "requestExample": "{}",
      "result": "RolloverContainerRegistryCredentialsResponse",
      "resultExample": "{\r\n  \"code\": 200,\r\n  \"status\": \"OK\",\r\n  \"data\": {\r\n    \"DnsName\": \"registry.azurecr.io\",\r\n    \"Username\": \"RegistryUser\",\r\n    \"Password\": \"NewRegistryPassword\"\r\n  }\r\n}",
      "seeAlso": [
        "MultiplayerServer/GetContainerRegistryCredentials"
      ],
      "errors": [
        "MultiplayerServerBadRequest",
        "MultiplayerServerConflict",
        "MultiplayerServerForbidden",
        "MultiplayerServerInternalServerError",
        "MultiplayerServerNoContent",
        "MultiplayerServerNotFound",
        "MultiplayerServerTooManyRequests",
        "MultiplayerServerUnauthorized",
        "MultiplayerServerUnavailable"
      ]
    },
    {
      "name": "SetMatchmakingQueue",
      "summary": "Create or update a matchmaking queue configuration.",
      "requestDetails": "Use this API to create or update matchmaking queue configurations. The queue configuration defines the matchmaking rules. The matchmaking service will match tickets together according to the configured rules. Queue resources are not spun up by calling this API. Queues are created when the first ticket is submitted.",
      "subgroup": "Matchmaking Admin",
      "titleTiers": null,
      "url": "/Match/SetMatchmakingQueue",
      "auth": "EntityToken",
      "method": "POST",
      "request": "SetMatchmakingQueueRequest",
      "requestExample": "{\r\n  \"MatchmakingQueue\": {\r\n    \"Name\": \"ExampleQueueName\",\r\n    \"MinMatchSize\": 7,\r\n    \"MaxMatchSize\": 8,\r\n    \"ThunderheadEnabled\": true,\r\n    \"BuildId\": \"065a3208-39af-4691-8794-5f774c367ac2\",\r\n    \"Rules\": [\r\n      {\r\n        \"Type\": \"DifferenceRule\",\r\n        \"Difference\": 10.0,\r\n        \"MergeFunction\": \"Average\",\r\n        \"DefaultAttributeValue\": 0.0,\r\n        \"Expansion\": {\r\n          \"Delta\": 0.5,\r\n          \"Limit\": 20.0,\r\n          \"Type\": \"Linear\",\r\n          \"SecondsBetweenExpansions\": 5\r\n        },\r\n        \"Attribute\": {\r\n          \"Path\": \"ExampleAttributeDifference\",\r\n          \"Source\": \"User\"\r\n        },\r\n        \"AttributeNotSpecifiedBehavior\": \"UseDefault\",\r\n        \"Weight\": 1.0,\r\n        \"Name\": \"ExampleName0\",\r\n        \"SecondsUntilOptional\": 50\r\n      },\r\n      {\r\n        \"Type\": \"StringEqualityRule\",\r\n        \"DefaultAttributeValue\": \"ExampleDefault\",\r\n        \"Expansion\": {\r\n          \"EnabledOverrides\": [\r\n            false,\r\n            true,\r\n            true,\r\n            false\r\n          ],\r\n          \"Type\": \"Custom\",\r\n          \"SecondsBetweenExpansions\": 5\r\n        },\r\n        \"Attribute\": {\r\n          \"Path\": \"ExampleAttributeStringEquality\",\r\n          \"Source\": \"User\"\r\n        },\r\n        \"AttributeNotSpecifiedBehavior\": \"UseDefault\",\r\n        \"Weight\": 1.0,\r\n        \"Name\": \"ExampleName1\",\r\n        \"SecondsUntilOptional\": 50\r\n      },\r\n      {\r\n        \"Type\": \"MatchTotalRule\",\r\n        \"Attribute\": {\r\n          \"Path\": \"ExampleAttribute\",\r\n          \"Source\": \"User\"\r\n        },\r\n        \"Min\": 2.0,\r\n        \"Max\": 4.0,\r\n        \"Weight\": 1.0,\r\n        \"Expansion\": {\r\n          \"MinOverrides\": [\r\n            2.0,\r\n            null,\r\n            null\r\n          ],\r\n          \"MaxOverrides\": [\r\n            4.0,\r\n            4.0,\r\n            null\r\n          ],\r\n          \"Type\": \"Custom\",\r\n          \"SecondsBetweenExpansions\": 5\r\n        },\r\n        \"Name\": \"ExampleName2\",\r\n        \"SecondsUntilOptional\": 50\r\n      },\r\n      {\r\n        \"Type\": \"SetIntersectionRule\",\r\n        \"DefaultAttributeValue\": [\r\n          \"a\",\r\n          \"b\",\r\n          \"c\"\r\n        ],\r\n        \"MinIntersectionSize\": 2,\r\n        \"Expansion\": {\r\n          \"Delta\": 2,\r\n          \"Type\": \"Linear\",\r\n          \"SecondsBetweenExpansions\": 5\r\n        },\r\n        \"Attribute\": {\r\n          \"Path\": \"ExampleAttributeSetIntersection\",\r\n          \"Source\": \"User\"\r\n        },\r\n        \"AttributeNotSpecifiedBehavior\": \"UseDefault\",\r\n        \"Weight\": 1.0,\r\n        \"Name\": \"ExampleName3\",\r\n        \"SecondsUntilOptional\": 50\r\n      },\r\n      {\r\n        \"Type\": \"TeamSizeBalanceRule\",\r\n        \"Difference\": 1,\r\n        \"Expansion\": {\r\n          \"Delta\": 1,\r\n          \"Limit\": 5,\r\n          \"Type\": \"Linear\",\r\n          \"SecondsBetweenExpansions\": 5\r\n        },\r\n        \"Name\": \"ExampleName4\",\r\n        \"SecondsUntilOptional\": 50\r\n      },\r\n      {\r\n        \"Type\": \"RegionSelectionRule\",\r\n        \"MaxLatency\": 250,\r\n        \"Path\": \"Latencies\",\r\n        \"Expansion\": {\r\n          \"Delta\": 10,\r\n          \"Limit\": 300,\r\n          \"Type\": \"Linear\",\r\n          \"SecondsBetweenExpansions\": 5\r\n        },\r\n        \"Weight\": 1.0,\r\n        \"Name\": \"ExampleName5\",\r\n        \"SecondsUntilOptional\": 50\r\n      },\r\n      {\r\n        \"Type\": \"TeamDifferenceRule\",\r\n        \"Attribute\": {\r\n          \"Path\": \"ExampleAttribute\",\r\n          \"Source\": \"User\"\r\n        },\r\n        \"Difference\": 2.0,\r\n        \"DefaultAttributeValue\": 0.0,\r\n        \"Expansion\": {\r\n          \"Delta\": 1.0,\r\n          \"Limit\": 5.0,\r\n          \"Type\": \"Linear\",\r\n          \"SecondsBetweenExpansions\": 5\r\n        },\r\n        \"Name\": \"ExampleName6\",\r\n        \"SecondsUntilOptional\": 50\r\n      },\r\n      {\r\n        \"Type\": \"TeamTicketSizeSimilarityRule\",\r\n        \"Name\": \"TeamTicketSizeSimilarityRuleExample7\",\r\n        \"SecondsUntilOptional\": 180\r\n      }\r\n    ],\r\n    \"Teams\": [\r\n      {\r\n        \"Name\": \"monster\",\r\n        \"MinTeamSize\": 1,\r\n        \"MaxTeamSize\": 1\r\n      },\r\n      {\r\n        \"Name\": \"hunters\",\r\n        \"MinTeamSize\": 4,\r\n        \"MaxTeamSize\": 8\r\n      }\r\n    ],\r\n    \"StatisticsVisibilityToPlayers\": {\r\n      \"ShowNumberOfPlayersMatching\": true,\r\n      \"ShowTimeToMatch\": true\r\n    }\r\n  }\r\n}",
      "result": "SetMatchmakingQueueResult",
      "resultExample": "",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "errors": [
        "MatchmakingQueueConfigInvalid",
        "NotAuthorized"
      ]
    },
    {
      "name": "ShutdownMultiplayerServer",
      "summary": "Shuts down a multiplayer server session.",
      "requestDetails": "Executes the shutdown callback from the GSDK and terminates the multiplayer server session. The callback in the GSDK will allow for graceful shutdown with a 15 minute timeoutIf graceful shutdown has not been completed before 15 minutes have elapsed, the multiplayer server session will be forcefully terminated on it's own.",
      "subgroup": "MultiplayerServer",
      "titleTiers": null,
      "url": "/MultiplayerServer/ShutdownMultiplayerServer",
      "auth": "EntityToken",
      "method": "POST",
      "request": "ShutdownMultiplayerServerRequest",
      "requestExample": "{\r\n  \"BuildId\": \"21781fa8-096d-4d9c-b699-75433d579285\",\r\n  \"Region\": \"SouthCentralUs\",\r\n  \"SessionId\": \"02bdef0e-e01e-4b29-8efe-ff9f47a06d8c\"\r\n}",
      "result": "EmptyResponse",
      "resultExample": "",
      "seeAlso": [
        "MultiplayerServer/GetMultiplayerServerDetails",
        "MultiplayerServer/RequestMultiplayerServer"
      ],
      "errors": [
        "MultiplayerServerForbidden",
        "MultiplayerServerInternalServerError",
        "MultiplayerServerNoContent",
        "MultiplayerServerNotFound",
        "MultiplayerServerTooManyRequests",
        "MultiplayerServerUnauthorized"
      ]
    },
    {
      "name": "UpdateBuildRegions",
      "summary": "Updates a multiplayer server build's regions.",
      "requestDetails": "Updates a multiplayer server build's regions.",
      "subgroup": "MultiplayerServer",
      "titleTiers": null,
      "url": "/MultiplayerServer/UpdateBuildRegions",
      "auth": "EntityToken",
      "method": "POST",
      "request": "UpdateBuildRegionsRequest",
      "requestExample": "{\r\n  \"BuildId\": \"21781fa8-096d-4d9c-b699-75433d579285\",\r\n  \"BuildRegions\": [\r\n    {\r\n      \"Region\": \"EastUs\",\r\n      \"MaxServers\": 10,\r\n      \"StandbyServers\": 5\r\n    },\r\n    {\r\n      \"Region\": \"WestUs\",\r\n      \"MaxServers\": 12,\r\n      \"StandbyServers\": 8\r\n    },\r\n    {\r\n      \"Region\": \"NorthEurope\",\r\n      \"MaxServers\": 7,\r\n      \"StandbyServers\": 3\r\n    }\r\n  ]\r\n}",
      "result": "EmptyResponse",
      "resultExample": "",
      "seeAlso": [
        "MultiplayerServer/DeleteBuild",
        "MultiplayerServer/GetBuild",
        "MultiplayerServer/ListBuildSummaries"
      ],
      "errors": [
        "MultiplayerServerBadRequest",
        "MultiplayerServerConflict",
        "MultiplayerServerForbidden",
        "MultiplayerServerInternalServerError",
        "MultiplayerServerUnauthorized"
      ]
    },
    {
      "name": "UploadCertificate",
      "summary": "Uploads a multiplayer server game certificate.",
      "requestDetails": "Uploads a multiplayer server game certificate.",
      "subgroup": "MultiplayerServer",
      "titleTiers": null,
      "url": "/MultiplayerServer/UploadCertificate",
      "auth": "EntityToken",
      "method": "POST",
      "request": "UploadCertificateRequest",
      "requestExample": "{\r\n  \"GameCertificate\": {\r\n    \"Name\": \"GameCertificate1\",\r\n    \"Base64EncodedValue\": \"UGxheUZhYlJvY2tzISEhTGV0J3NtYWtlYWxvdG9mZ2FtZXMh\",\r\n    \"Password\": \"PasswordForPFXCertificate\"\r\n  }\r\n}",
      "result": "EmptyResponse",
      "resultExample": "",
      "seeAlso": [
        "MultiplayerServer/DeleteCertificate",
        "MultiplayerServer/ListCertificateSummaries"
      ],
      "errors": [
        "MultiplayerServerBadRequest",
        "MultiplayerServerConflict",
        "MultiplayerServerForbidden",
        "MultiplayerServerInternalServerError",
        "MultiplayerServerNoContent",
        "MultiplayerServerNotFound",
        "MultiplayerServerTooManyRequests",
        "MultiplayerServerUnauthorized",
        "MultiplayerServerUnavailable"
      ]
    }
  ],
  "errors": {
    "Success": {
      "id": 0,
      "name": "Success"
    },
    "UnkownError": {
      "id": 500,
      "name": "UnkownError"
    },
    "InvalidParams": {
      "id": 1000,
      "name": "InvalidParams"
    },
    "AccountNotFound": {
      "id": 1001,
      "name": "AccountNotFound"
    },
    "AccountBanned": {
      "id": 1002,
      "name": "AccountBanned"
    },
    "InvalidUsernameOrPassword": {
      "id": 1003,
      "name": "InvalidUsernameOrPassword"
    },
    "InvalidTitleId": {
      "id": 1004,
      "name": "InvalidTitleId"
    },
    "InvalidEmailAddress": {
      "id": 1005,
      "name": "InvalidEmailAddress"
    },
    "EmailAddressNotAvailable": {
      "id": 1006,
      "name": "EmailAddressNotAvailable"
    },
    "InvalidUsername": {
      "id": 1007,
      "name": "InvalidUsername"
    },
    "InvalidPassword": {
      "id": 1008,
      "name": "InvalidPassword"
    },
    "UsernameNotAvailable": {
      "id": 1009,
      "name": "UsernameNotAvailable"
    },
    "InvalidSteamTicket": {
      "id": 1010,
      "name": "InvalidSteamTicket"
    },
    "AccountAlreadyLinked": {
      "id": 1011,
      "name": "AccountAlreadyLinked"
    },
    "LinkedAccountAlreadyClaimed": {
      "id": 1012,
      "name": "LinkedAccountAlreadyClaimed"
    },
    "InvalidFacebookToken": {
      "id": 1013,
      "name": "InvalidFacebookToken"
    },
    "AccountNotLinked": {
      "id": 1014,
      "name": "AccountNotLinked"
    },
    "FailedByPaymentProvider": {
      "id": 1015,
      "name": "FailedByPaymentProvider"
    },
    "CouponCodeNotFound": {
      "id": 1016,
      "name": "CouponCodeNotFound"
    },
    "InvalidContainerItem": {
      "id": 1017,
      "name": "InvalidContainerItem"
    },
    "ContainerNotOwned": {
      "id": 1018,
      "name": "ContainerNotOwned"
    },
    "KeyNotOwned": {
      "id": 1019,
      "name": "KeyNotOwned"
    },
    "InvalidItemIdInTable": {
      "id": 1020,
      "name": "InvalidItemIdInTable"
    },
    "InvalidReceipt": {
      "id": 1021,
      "name": "InvalidReceipt"
    },
    "ReceiptAlreadyUsed": {
      "id": 1022,
      "name": "ReceiptAlreadyUsed"
    },
    "ReceiptCancelled": {
      "id": 1023,
      "name": "ReceiptCancelled"
    },
    "GameNotFound": {
      "id": 1024,
      "name": "GameNotFound"
    },
    "GameModeNotFound": {
      "id": 1025,
      "name": "GameModeNotFound"
    },
    "InvalidGoogleToken": {
      "id": 1026,
      "name": "InvalidGoogleToken"
    },
    "UserIsNotPartOfDeveloper": {
      "id": 1027,
      "name": "UserIsNotPartOfDeveloper"
    },
    "InvalidTitleForDeveloper": {
      "id": 1028,
      "name": "InvalidTitleForDeveloper"
    },
    "TitleNameConflicts": {
      "id": 1029,
      "name": "TitleNameConflicts"
    },
    "UserisNotValid": {
      "id": 1030,
      "name": "UserisNotValid"
    },
    "ValueAlreadyExists": {
      "id": 1031,
      "name": "ValueAlreadyExists"
    },
    "BuildNotFound": {
      "id": 1032,
      "name": "BuildNotFound"
    },
    "PlayerNotInGame": {
      "id": 1033,
      "name": "PlayerNotInGame"
    },
    "InvalidTicket": {
      "id": 1034,
      "name": "InvalidTicket"
    },
    "InvalidDeveloper": {
      "id": 1035,
      "name": "InvalidDeveloper"
    },
    "InvalidOrderInfo": {
      "id": 1036,
      "name": "InvalidOrderInfo"
    },
    "RegistrationIncomplete": {
      "id": 1037,
      "name": "RegistrationIncomplete"
    },
    "InvalidPlatform": {
      "id": 1038,
      "name": "InvalidPlatform"
    },
    "UnknownError": {
      "id": 1039,
      "name": "UnknownError"
    },
    "SteamApplicationNotOwned": {
      "id": 1040,
      "name": "SteamApplicationNotOwned"
    },
    "WrongSteamAccount": {
      "id": 1041,
      "name": "WrongSteamAccount"
    },
    "TitleNotActivated": {
      "id": 1042,
      "name": "TitleNotActivated"
    },
    "RegistrationSessionNotFound": {
      "id": 1043,
      "name": "RegistrationSessionNotFound"
    },
    "NoSuchMod": {
      "id": 1044,
      "name": "NoSuchMod"
    },
    "FileNotFound": {
      "id": 1045,
      "name": "FileNotFound"
    },
    "DuplicateEmail": {
      "id": 1046,
      "name": "DuplicateEmail"
    },
    "ItemNotFound": {
      "id": 1047,
      "name": "ItemNotFound"
    },
    "ItemNotOwned": {
      "id": 1048,
      "name": "ItemNotOwned"
    },
    "ItemNotRecycleable": {
      "id": 1049,
      "name": "ItemNotRecycleable"
    },
    "ItemNotAffordable": {
      "id": 1050,
      "name": "ItemNotAffordable"
    },
    "InvalidVirtualCurrency": {
      "id": 1051,
      "name": "InvalidVirtualCurrency"
    },
    "WrongVirtualCurrency": {
      "id": 1052,
      "name": "WrongVirtualCurrency"
    },
    "WrongPrice": {
      "id": 1053,
      "name": "WrongPrice"
    },
    "NonPositiveValue": {
      "id": 1054,
      "name": "NonPositiveValue"
    },
    "InvalidRegion": {
      "id": 1055,
      "name": "InvalidRegion"
    },
    "RegionAtCapacity": {
      "id": 1056,
      "name": "RegionAtCapacity"
    },
    "ServerFailedToStart": {
      "id": 1057,
      "name": "ServerFailedToStart"
    },
    "NameNotAvailable": {
      "id": 1058,
      "name": "NameNotAvailable"
    },
    "InsufficientFunds": {
      "id": 1059,
      "name": "InsufficientFunds"
    },
    "InvalidDeviceID": {
      "id": 1060,
      "name": "InvalidDeviceID"
    },
    "InvalidPushNotificationToken": {
      "id": 1061,
      "name": "InvalidPushNotificationToken"
    },
    "NoRemainingUses": {
      "id": 1062,
      "name": "NoRemainingUses"
    },
    "InvalidPaymentProvider": {
      "id": 1063,
      "name": "InvalidPaymentProvider"
    },
    "PurchaseInitializationFailure": {
      "id": 1064,
      "name": "PurchaseInitializationFailure"
    },
    "DuplicateUsername": {
      "id": 1065,
      "name": "DuplicateUsername"
    },
    "InvalidBuyerInfo": {
      "id": 1066,
      "name": "InvalidBuyerInfo"
    },
    "NoGameModeParamsSet": {
      "id": 1067,
      "name": "NoGameModeParamsSet"
    },
    "BodyTooLarge": {
      "id": 1068,
      "name": "BodyTooLarge"
    },
    "ReservedWordInBody": {
      "id": 1069,
      "name": "ReservedWordInBody"
    },
    "InvalidTypeInBody": {
      "id": 1070,
      "name": "InvalidTypeInBody"
    },
    "InvalidRequest": {
      "id": 1071,
      "name": "InvalidRequest"
    },
    "ReservedEventName": {
      "id": 1072,
      "name": "ReservedEventName"
    },
    "InvalidUserStatistics": {
      "id": 1073,
      "name": "InvalidUserStatistics"
    },
    "NotAuthenticated": {
      "id": 1074,
      "name": "NotAuthenticated"
    },
    "StreamAlreadyExists": {
      "id": 1075,
      "name": "StreamAlreadyExists"
    },
    "ErrorCreatingStream": {
      "id": 1076,
      "name": "ErrorCreatingStream"
    },
    "StreamNotFound": {
      "id": 1077,
      "name": "StreamNotFound"
    },
    "InvalidAccount": {
      "id": 1078,
      "name": "InvalidAccount"
    },
    "PurchaseDoesNotExist": {
      "id": 1080,
      "name": "PurchaseDoesNotExist"
    },
    "InvalidPurchaseTransactionStatus": {
      "id": 1081,
      "name": "InvalidPurchaseTransactionStatus"
    },
    "APINotEnabledForGameClientAccess": {
      "id": 1082,
      "name": "APINotEnabledForGameClientAccess"
    },
    "NoPushNotificationARNForTitle": {
      "id": 1083,
      "name": "NoPushNotificationARNForTitle"
    },
    "BuildAlreadyExists": {
      "id": 1084,
      "name": "BuildAlreadyExists"
    },
    "BuildPackageDoesNotExist": {
      "id": 1085,
      "name": "BuildPackageDoesNotExist"
    },
    "CustomAnalyticsEventsNotEnabledForTitle": {
      "id": 1087,
      "name": "CustomAnalyticsEventsNotEnabledForTitle"
    },
    "InvalidSharedGroupId": {
      "id": 1088,
      "name": "InvalidSharedGroupId"
    },
    "NotAuthorized": {
      "id": 1089,
      "name": "NotAuthorized"
    },
    "MissingTitleGoogleProperties": {
      "id": 1090,
      "name": "MissingTitleGoogleProperties"
    },
    "InvalidItemProperties": {
      "id": 1091,
      "name": "InvalidItemProperties"
    },
    "InvalidPSNAuthCode": {
      "id": 1092,
      "name": "InvalidPSNAuthCode"
    },
    "InvalidItemId": {
      "id": 1093,
      "name": "InvalidItemId"
    },
    "PushNotEnabledForAccount": {
      "id": 1094,
      "name": "PushNotEnabledForAccount"
    },
    "PushServiceError": {
      "id": 1095,
      "name": "PushServiceError"
    },
    "ReceiptDoesNotContainInAppItems": {
      "id": 1096,
      "name": "ReceiptDoesNotContainInAppItems"
    },
    "ReceiptContainsMultipleInAppItems": {
      "id": 1097,
      "name": "ReceiptContainsMultipleInAppItems"
    },
    "InvalidBundleID": {
      "id": 1098,
      "name": "InvalidBundleID"
    },
    "JavascriptException": {
      "id": 1099,
      "name": "JavascriptException"
    },
    "InvalidSessionTicket": {
      "id": 1100,
      "name": "InvalidSessionTicket"
    },
    "UnableToConnectToDatabase": {
      "id": 1101,
      "name": "UnableToConnectToDatabase"
    },
    "InternalServerError": {
      "id": 1110,
      "name": "InternalServerError"
    },
    "InvalidReportDate": {
      "id": 1111,
      "name": "InvalidReportDate"
    },
    "ReportNotAvailable": {
      "id": 1112,
      "name": "ReportNotAvailable"
    },
    "DatabaseThroughputExceeded": {
      "id": 1113,
      "name": "DatabaseThroughputExceeded"
    },
    "InvalidGameTicket": {
      "id": 1115,
      "name": "InvalidGameTicket"
    },
    "ExpiredGameTicket": {
      "id": 1116,
      "name": "ExpiredGameTicket"
    },
    "GameTicketDoesNotMatchLobby": {
      "id": 1117,
      "name": "GameTicketDoesNotMatchLobby"
    },
    "LinkedDeviceAlreadyClaimed": {
      "id": 1118,
      "name": "LinkedDeviceAlreadyClaimed"
    },
    "DeviceAlreadyLinked": {
      "id": 1119,
      "name": "DeviceAlreadyLinked"
    },
    "DeviceNotLinked": {
      "id": 1120,
      "name": "DeviceNotLinked"
    },
    "PartialFailure": {
      "id": 1121,
      "name": "PartialFailure"
    },
    "PublisherNotSet": {
      "id": 1122,
      "name": "PublisherNotSet"
    },
    "ServiceUnavailable": {
      "id": 1123,
      "name": "ServiceUnavailable"
    },
    "VersionNotFound": {
      "id": 1124,
      "name": "VersionNotFound"
    },
    "RevisionNotFound": {
      "id": 1125,
      "name": "RevisionNotFound"
    },
    "InvalidPublisherId": {
      "id": 1126,
      "name": "InvalidPublisherId"
    },
    "DownstreamServiceUnavailable": {
      "id": 1127,
      "name": "DownstreamServiceUnavailable"
    },
    "APINotIncludedInTitleUsageTier": {
      "id": 1128,
      "name": "APINotIncludedInTitleUsageTier"
    },
    "DAULimitExceeded": {
      "id": 1129,
      "name": "DAULimitExceeded"
    },
    "APIRequestLimitExceeded": {
      "id": 1130,
      "name": "APIRequestLimitExceeded"
    },
    "InvalidAPIEndpoint": {
      "id": 1131,
      "name": "InvalidAPIEndpoint"
    },
    "BuildNotAvailable": {
      "id": 1132,
      "name": "BuildNotAvailable"
    },
    "ConcurrentEditError": {
      "id": 1133,
      "name": "ConcurrentEditError"
    },
    "ContentNotFound": {
      "id": 1134,
      "name": "ContentNotFound"
    },
    "CharacterNotFound": {
      "id": 1135,
      "name": "CharacterNotFound"
    },
    "CloudScriptNotFound": {
      "id": 1136,
      "name": "CloudScriptNotFound"
    },
    "ContentQuotaExceeded": {
      "id": 1137,
      "name": "ContentQuotaExceeded"
    },
    "InvalidCharacterStatistics": {
      "id": 1138,
      "name": "InvalidCharacterStatistics"
    },
    "PhotonNotEnabledForTitle": {
      "id": 1139,
      "name": "PhotonNotEnabledForTitle"
    },
    "PhotonApplicationNotFound": {
      "id": 1140,
      "name": "PhotonApplicationNotFound"
    },
    "PhotonApplicationNotAssociatedWithTitle": {
      "id": 1141,
      "name": "PhotonApplicationNotAssociatedWithTitle"
    },
    "InvalidEmailOrPassword": {
      "id": 1142,
      "name": "InvalidEmailOrPassword"
    },
    "FacebookAPIError": {
      "id": 1143,
      "name": "FacebookAPIError"
    },
    "InvalidContentType": {
      "id": 1144,
      "name": "InvalidContentType"
    },
    "KeyLengthExceeded": {
      "id": 1145,
      "name": "KeyLengthExceeded"
    },
    "DataLengthExceeded": {
      "id": 1146,
      "name": "DataLengthExceeded"
    },
    "TooManyKeys": {
      "id": 1147,
      "name": "TooManyKeys"
    },
    "FreeTierCannotHaveVirtualCurrency": {
      "id": 1148,
      "name": "FreeTierCannotHaveVirtualCurrency"
    },
    "MissingAmazonSharedKey": {
      "id": 1149,
      "name": "MissingAmazonSharedKey"
    },
    "AmazonValidationError": {
      "id": 1150,
      "name": "AmazonValidationError"
    },
    "InvalidPSNIssuerId": {
      "id": 1151,
      "name": "InvalidPSNIssuerId"
    },
    "PSNInaccessible": {
      "id": 1152,
      "name": "PSNInaccessible"
    },
    "ExpiredAuthToken": {
      "id": 1153,
      "name": "ExpiredAuthToken"
    },
    "FailedToGetEntitlements": {
      "id": 1154,
      "name": "FailedToGetEntitlements"
    },
    "FailedToConsumeEntitlement": {
      "id": 1155,
      "name": "FailedToConsumeEntitlement"
    },
    "TradeAcceptingUserNotAllowed": {
      "id": 1156,
      "name": "TradeAcceptingUserNotAllowed"
    },
    "TradeInventoryItemIsAssignedToCharacter": {
      "id": 1157,
      "name": "TradeInventoryItemIsAssignedToCharacter"
    },
    "TradeInventoryItemIsBundle": {
      "id": 1158,
      "name": "TradeInventoryItemIsBundle"
    },
    "TradeStatusNotValidForCancelling": {
      "id": 1159,
      "name": "TradeStatusNotValidForCancelling"
    },
    "TradeStatusNotValidForAccepting": {
      "id": 1160,
      "name": "TradeStatusNotValidForAccepting"
    },
    "TradeDoesNotExist": {
      "id": 1161,
      "name": "TradeDoesNotExist"
    },
    "TradeCancelled": {
      "id": 1162,
      "name": "TradeCancelled"
    },
    "TradeAlreadyFilled": {
      "id": 1163,
      "name": "TradeAlreadyFilled"
    },
    "TradeWaitForStatusTimeout": {
      "id": 1164,
      "name": "TradeWaitForStatusTimeout"
    },
    "TradeInventoryItemExpired": {
      "id": 1165,
      "name": "TradeInventoryItemExpired"
    },
    "TradeMissingOfferedAndAcceptedItems": {
      "id": 1166,
      "name": "TradeMissingOfferedAndAcceptedItems"
    },
    "TradeAcceptedItemIsBundle": {
      "id": 1167,
      "name": "TradeAcceptedItemIsBundle"
    },
    "TradeAcceptedItemIsStackable": {
      "id": 1168,
      "name": "TradeAcceptedItemIsStackable"
    },
    "TradeInventoryItemInvalidStatus": {
      "id": 1169,
      "name": "TradeInventoryItemInvalidStatus"
    },
    "TradeAcceptedCatalogItemInvalid": {
      "id": 1170,
      "name": "TradeAcceptedCatalogItemInvalid"
    },
    "TradeAllowedUsersInvalid": {
      "id": 1171,
      "name": "TradeAllowedUsersInvalid"
    },
    "TradeInventoryItemDoesNotExist": {
      "id": 1172,
      "name": "TradeInventoryItemDoesNotExist"
    },
    "TradeInventoryItemIsConsumed": {
      "id": 1173,
      "name": "TradeInventoryItemIsConsumed"
    },
    "TradeInventoryItemIsStackable": {
      "id": 1174,
      "name": "TradeInventoryItemIsStackable"
    },
    "TradeAcceptedItemsMismatch": {
      "id": 1175,
      "name": "TradeAcceptedItemsMismatch"
    },
    "InvalidKongregateToken": {
      "id": 1176,
      "name": "InvalidKongregateToken"
    },
    "FeatureNotConfiguredForTitle": {
      "id": 1177,
      "name": "FeatureNotConfiguredForTitle"
    },
    "NoMatchingCatalogItemForReceipt": {
      "id": 1178,
      "name": "NoMatchingCatalogItemForReceipt"
    },
    "InvalidCurrencyCode": {
      "id": 1179,
      "name": "InvalidCurrencyCode"
    },
    "NoRealMoneyPriceForCatalogItem": {
      "id": 1180,
      "name": "NoRealMoneyPriceForCatalogItem"
    },
    "TradeInventoryItemIsNotTradable": {
      "id": 1181,
      "name": "TradeInventoryItemIsNotTradable"
    },
    "TradeAcceptedCatalogItemIsNotTradable": {
      "id": 1182,
      "name": "TradeAcceptedCatalogItemIsNotTradable"
    },
    "UsersAlreadyFriends": {
      "id": 1183,
      "name": "UsersAlreadyFriends"
    },
    "LinkedIdentifierAlreadyClaimed": {
      "id": 1184,
      "name": "LinkedIdentifierAlreadyClaimed"
    },
    "CustomIdNotLinked": {
      "id": 1185,
      "name": "CustomIdNotLinked"
    },
    "TotalDataSizeExceeded": {
      "id": 1186,
      "name": "TotalDataSizeExceeded"
    },
    "DeleteKeyConflict": {
      "id": 1187,
      "name": "DeleteKeyConflict"
    },
    "InvalidXboxLiveToken": {
      "id": 1188,
      "name": "InvalidXboxLiveToken"
    },
    "ExpiredXboxLiveToken": {
      "id": 1189,
      "name": "ExpiredXboxLiveToken"
    },
    "ResettableStatisticVersionRequired": {
      "id": 1190,
      "name": "ResettableStatisticVersionRequired"
    },
    "NotAuthorizedByTitle": {
      "id": 1191,
      "name": "NotAuthorizedByTitle"
    },
    "NoPartnerEnabled": {
      "id": 1192,
      "name": "NoPartnerEnabled"
    },
    "InvalidPartnerResponse": {
      "id": 1193,
      "name": "InvalidPartnerResponse"
    },
    "APINotEnabledForGameServerAccess": {
      "id": 1194,
      "name": "APINotEnabledForGameServerAccess"
    },
    "StatisticNotFound": {
      "id": 1195,
      "name": "StatisticNotFound"
    },
    "StatisticNameConflict": {
      "id": 1196,
      "name": "StatisticNameConflict"
    },
    "StatisticVersionClosedForWrites": {
      "id": 1197,
      "name": "StatisticVersionClosedForWrites"
    },
    "StatisticVersionInvalid": {
      "id": 1198,
      "name": "StatisticVersionInvalid"
    },
    "APIClientRequestRateLimitExceeded": {
      "id": 1199,
      "name": "APIClientRequestRateLimitExceeded"
    },
    "InvalidJSONContent": {
      "id": 1200,
      "name": "InvalidJSONContent"
    },
    "InvalidDropTable": {
      "id": 1201,
      "name": "InvalidDropTable"
    },
    "StatisticVersionAlreadyIncrementedForScheduledInterval": {
      "id": 1202,
      "name": "StatisticVersionAlreadyIncrementedForScheduledInterval"
    },
    "StatisticCountLimitExceeded": {
      "id": 1203,
      "name": "StatisticCountLimitExceeded"
    },
    "StatisticVersionIncrementRateExceeded": {
      "id": 1204,
      "name": "StatisticVersionIncrementRateExceeded"
    },
    "ContainerKeyInvalid": {
      "id": 1205,
      "name": "ContainerKeyInvalid"
    },
    "CloudScriptExecutionTimeLimitExceeded": {
      "id": 1206,
      "name": "CloudScriptExecutionTimeLimitExceeded"
    },
    "NoWritePermissionsForEvent": {
      "id": 1207,
      "name": "NoWritePermissionsForEvent"
    },
    "CloudScriptFunctionArgumentSizeExceeded": {
      "id": 1208,
      "name": "CloudScriptFunctionArgumentSizeExceeded"
    },
    "CloudScriptAPIRequestCountExceeded": {
      "id": 1209,
      "name": "CloudScriptAPIRequestCountExceeded"
    },
    "CloudScriptAPIRequestError": {
      "id": 1210,
      "name": "CloudScriptAPIRequestError"
    },
    "CloudScriptHTTPRequestError": {
      "id": 1211,
      "name": "CloudScriptHTTPRequestError"
    },
    "InsufficientGuildRole": {
      "id": 1212,
      "name": "InsufficientGuildRole"
    },
    "GuildNotFound": {
      "id": 1213,
      "name": "GuildNotFound"
    },
    "OverLimit": {
      "id": 1214,
      "name": "OverLimit"
    },
    "EventNotFound": {
      "id": 1215,
      "name": "EventNotFound"
    },
    "InvalidEventField": {
      "id": 1216,
      "name": "InvalidEventField"
    },
    "InvalidEventName": {
      "id": 1217,
      "name": "InvalidEventName"
    },
    "CatalogNotConfigured": {
      "id": 1218,
      "name": "CatalogNotConfigured"
    },
    "OperationNotSupportedForPlatform": {
      "id": 1219,
      "name": "OperationNotSupportedForPlatform"
    },
    "SegmentNotFound": {
      "id": 1220,
      "name": "SegmentNotFound"
    },
    "StoreNotFound": {
      "id": 1221,
      "name": "StoreNotFound"
    },
    "InvalidStatisticName": {
      "id": 1222,
      "name": "InvalidStatisticName"
    },
    "TitleNotQualifiedForLimit": {
      "id": 1223,
      "name": "TitleNotQualifiedForLimit"
    },
    "InvalidServiceLimitLevel": {
      "id": 1224,
      "name": "InvalidServiceLimitLevel"
    },
    "ServiceLimitLevelInTransition": {
      "id": 1225,
      "name": "ServiceLimitLevelInTransition"
    },
    "CouponAlreadyRedeemed": {
      "id": 1226,
      "name": "CouponAlreadyRedeemed"
    },
    "GameServerBuildSizeLimitExceeded": {
      "id": 1227,
      "name": "GameServerBuildSizeLimitExceeded"
    },
    "GameServerBuildCountLimitExceeded": {
      "id": 1228,
      "name": "GameServerBuildCountLimitExceeded"
    },
    "VirtualCurrencyCountLimitExceeded": {
      "id": 1229,
      "name": "VirtualCurrencyCountLimitExceeded"
    },
    "VirtualCurrencyCodeExists": {
      "id": 1230,
      "name": "VirtualCurrencyCodeExists"
    },
    "TitleNewsItemCountLimitExceeded": {
      "id": 1231,
      "name": "TitleNewsItemCountLimitExceeded"
    },
    "InvalidTwitchToken": {
      "id": 1232,
      "name": "InvalidTwitchToken"
    },
    "TwitchResponseError": {
      "id": 1233,
      "name": "TwitchResponseError"
    },
    "ProfaneDisplayName": {
      "id": 1234,
      "name": "ProfaneDisplayName"
    },
    "UserAlreadyAdded": {
      "id": 1235,
      "name": "UserAlreadyAdded"
    },
    "InvalidVirtualCurrencyCode": {
      "id": 1236,
      "name": "InvalidVirtualCurrencyCode"
    },
    "VirtualCurrencyCannotBeDeleted": {
      "id": 1237,
      "name": "VirtualCurrencyCannotBeDeleted"
    },
    "IdentifierAlreadyClaimed": {
      "id": 1238,
      "name": "IdentifierAlreadyClaimed"
    },
    "IdentifierNotLinked": {
      "id": 1239,
      "name": "IdentifierNotLinked"
    },
    "InvalidContinuationToken": {
      "id": 1240,
      "name": "InvalidContinuationToken"
    },
    "ExpiredContinuationToken": {
      "id": 1241,
      "name": "ExpiredContinuationToken"
    },
    "InvalidSegment": {
      "id": 1242,
      "name": "InvalidSegment"
    },
    "InvalidSessionId": {
      "id": 1243,
      "name": "InvalidSessionId"
    },
    "SessionLogNotFound": {
      "id": 1244,
      "name": "SessionLogNotFound"
    },
    "InvalidSearchTerm": {
      "id": 1245,
      "name": "InvalidSearchTerm"
    },
    "TwoFactorAuthenticationTokenRequired": {
      "id": 1246,
      "name": "TwoFactorAuthenticationTokenRequired"
    },
    "GameServerHostCountLimitExceeded": {
      "id": 1247,
      "name": "GameServerHostCountLimitExceeded"
    },
    "PlayerTagCountLimitExceeded": {
      "id": 1248,
      "name": "PlayerTagCountLimitExceeded"
    },
    "RequestAlreadyRunning": {
      "id": 1249,
      "name": "RequestAlreadyRunning"
    },
    "ActionGroupNotFound": {
      "id": 1250,
      "name": "ActionGroupNotFound"
    },
    "MaximumSegmentBulkActionJobsRunning": {
      "id": 1251,
      "name": "MaximumSegmentBulkActionJobsRunning"
    },
    "NoActionsOnPlayersInSegmentJob": {
      "id": 1252,
      "name": "NoActionsOnPlayersInSegmentJob"
    },
    "DuplicateStatisticName": {
      "id": 1253,
      "name": "DuplicateStatisticName"
    },
    "ScheduledTaskNameConflict": {
      "id": 1254,
      "name": "ScheduledTaskNameConflict"
    },
    "ScheduledTaskCreateConflict": {
      "id": 1255,
      "name": "ScheduledTaskCreateConflict"
    },
    "InvalidScheduledTaskName": {
      "id": 1256,
      "name": "InvalidScheduledTaskName"
    },
    "InvalidTaskSchedule": {
      "id": 1257,
      "name": "InvalidTaskSchedule"
    },
    "SteamNotEnabledForTitle": {
      "id": 1258,
      "name": "SteamNotEnabledForTitle"
    },
    "LimitNotAnUpgradeOption": {
      "id": 1259,
      "name": "LimitNotAnUpgradeOption"
    },
    "NoSecretKeyEnabledForCloudScript": {
      "id": 1260,
      "name": "NoSecretKeyEnabledForCloudScript"
    },
    "TaskNotFound": {
      "id": 1261,
      "name": "TaskNotFound"
    },
    "TaskInstanceNotFound": {
      "id": 1262,
      "name": "TaskInstanceNotFound"
    },
    "InvalidIdentityProviderId": {
      "id": 1263,
      "name": "InvalidIdentityProviderId"
    },
    "MisconfiguredIdentityProvider": {
      "id": 1264,
      "name": "MisconfiguredIdentityProvider"
    },
    "InvalidScheduledTaskType": {
      "id": 1265,
      "name": "InvalidScheduledTaskType"
    },
    "BillingInformationRequired": {
      "id": 1266,
      "name": "BillingInformationRequired"
    },
    "LimitedEditionItemUnavailable": {
      "id": 1267,
      "name": "LimitedEditionItemUnavailable"
    },
    "InvalidAdPlacementAndReward": {
      "id": 1268,
      "name": "InvalidAdPlacementAndReward"
    },
    "AllAdPlacementViewsAlreadyConsumed": {
      "id": 1269,
      "name": "AllAdPlacementViewsAlreadyConsumed"
    },
    "GoogleOAuthNotConfiguredForTitle": {
      "id": 1270,
      "name": "GoogleOAuthNotConfiguredForTitle"
    },
    "GoogleOAuthError": {
      "id": 1271,
      "name": "GoogleOAuthError"
    },
    "UserNotFriend": {
      "id": 1272,
      "name": "UserNotFriend"
    },
    "InvalidSignature": {
      "id": 1273,
      "name": "InvalidSignature"
    },
    "InvalidPublicKey": {
      "id": 1274,
      "name": "InvalidPublicKey"
    },
    "GoogleOAuthNoIdTokenIncludedInResponse": {
      "id": 1275,
      "name": "GoogleOAuthNoIdTokenIncludedInResponse"
    },
    "StatisticUpdateInProgress": {
      "id": 1276,
      "name": "StatisticUpdateInProgress"
    },
    "LeaderboardVersionNotAvailable": {
      "id": 1277,
      "name": "LeaderboardVersionNotAvailable"
    },
    "StatisticAlreadyHasPrizeTable": {
      "id": 1279,
      "name": "StatisticAlreadyHasPrizeTable"
    },
    "PrizeTableHasOverlappingRanks": {
      "id": 1280,
      "name": "PrizeTableHasOverlappingRanks"
    },
    "PrizeTableHasMissingRanks": {
      "id": 1281,
      "name": "PrizeTableHasMissingRanks"
    },
    "PrizeTableRankStartsAtZero": {
      "id": 1282,
      "name": "PrizeTableRankStartsAtZero"
    },
    "InvalidStatistic": {
      "id": 1283,
      "name": "InvalidStatistic"
    },
    "ExpressionParseFailure": {
      "id": 1284,
      "name": "ExpressionParseFailure"
    },
    "ExpressionInvokeFailure": {
      "id": 1285,
      "name": "ExpressionInvokeFailure"
    },
    "ExpressionTooLong": {
      "id": 1286,
      "name": "ExpressionTooLong"
    },
    "DataUpdateRateExceeded": {
      "id": 1287,
      "name": "DataUpdateRateExceeded"
    },
    "RestrictedEmailDomain": {
      "id": 1288,
      "name": "RestrictedEmailDomain"
    },
    "EncryptionKeyDisabled": {
      "id": 1289,
      "name": "EncryptionKeyDisabled"
    },
    "EncryptionKeyMissing": {
      "id": 1290,
      "name": "EncryptionKeyMissing"
    },
    "EncryptionKeyBroken": {
      "id": 1291,
      "name": "EncryptionKeyBroken"
    },
    "NoSharedSecretKeyConfigured": {
      "id": 1292,
      "name": "NoSharedSecretKeyConfigured"
    },
    "SecretKeyNotFound": {
      "id": 1293,
      "name": "SecretKeyNotFound"
    },
    "PlayerSecretAlreadyConfigured": {
      "id": 1294,
      "name": "PlayerSecretAlreadyConfigured"
    },
    "APIRequestsDisabledForTitle": {
      "id": 1295,
      "name": "APIRequestsDisabledForTitle"
    },
    "InvalidSharedSecretKey": {
      "id": 1296,
      "name": "InvalidSharedSecretKey"
    },
    "PrizeTableHasNoRanks": {
      "id": 1297,
      "name": "PrizeTableHasNoRanks"
    },
    "ProfileDoesNotExist": {
      "id": 1298,
      "name": "ProfileDoesNotExist"
    },
    "ContentS3OriginBucketNotConfigured": {
      "id": 1299,
      "name": "ContentS3OriginBucketNotConfigured"
    },
    "InvalidEnvironmentForReceipt": {
      "id": 1300,
      "name": "InvalidEnvironmentForReceipt"
    },
    "EncryptedRequestNotAllowed": {
      "id": 1301,
      "name": "EncryptedRequestNotAllowed"
    },
    "SignedRequestNotAllowed": {
      "id": 1302,
      "name": "SignedRequestNotAllowed"
    },
    "RequestViewConstraintParamsNotAllowed": {
      "id": 1303,
      "name": "RequestViewConstraintParamsNotAllowed"
    },
    "BadPartnerConfiguration": {
      "id": 1304,
      "name": "BadPartnerConfiguration"
    },
    "XboxBPCertificateFailure": {
      "id": 1305,
      "name": "XboxBPCertificateFailure"
    },
    "XboxXASSExchangeFailure": {
      "id": 1306,
      "name": "XboxXASSExchangeFailure"
    },
    "InvalidEntityId": {
      "id": 1307,
      "name": "InvalidEntityId"
    },
    "StatisticValueAggregationOverflow": {
      "id": 1308,
      "name": "StatisticValueAggregationOverflow"
    },
    "EmailMessageFromAddressIsMissing": {
      "id": 1309,
      "name": "EmailMessageFromAddressIsMissing"
    },
    "EmailMessageToAddressIsMissing": {
      "id": 1310,
      "name": "EmailMessageToAddressIsMissing"
    },
    "SmtpServerAuthenticationError": {
      "id": 1311,
      "name": "SmtpServerAuthenticationError"
    },
    "SmtpServerLimitExceeded": {
      "id": 1312,
      "name": "SmtpServerLimitExceeded"
    },
    "SmtpServerInsufficientStorage": {
      "id": 1313,
      "name": "SmtpServerInsufficientStorage"
    },
    "SmtpServerCommunicationError": {
      "id": 1314,
      "name": "SmtpServerCommunicationError"
    },
    "SmtpServerGeneralFailure": {
      "id": 1315,
      "name": "SmtpServerGeneralFailure"
    },
    "EmailClientTimeout": {
      "id": 1316,
      "name": "EmailClientTimeout"
    },
    "EmailClientCanceledTask": {
      "id": 1317,
      "name": "EmailClientCanceledTask"
    },
    "EmailTemplateMissing": {
      "id": 1318,
      "name": "EmailTemplateMissing"
    },
    "InvalidHostForTitleId": {
      "id": 1319,
      "name": "InvalidHostForTitleId"
    },
    "EmailConfirmationTokenDoesNotExist": {
      "id": 1320,
      "name": "EmailConfirmationTokenDoesNotExist"
    },
    "EmailConfirmationTokenExpired": {
      "id": 1321,
      "name": "EmailConfirmationTokenExpired"
    },
    "AccountDeleted": {
      "id": 1322,
      "name": "AccountDeleted"
    },
    "PlayerSecretNotConfigured": {
      "id": 1323,
      "name": "PlayerSecretNotConfigured"
    },
    "InvalidSignatureTime": {
      "id": 1324,
      "name": "InvalidSignatureTime"
    },
    "NoContactEmailAddressFound": {
      "id": 1325,
      "name": "NoContactEmailAddressFound"
    },
    "InvalidAuthToken": {
      "id": 1326,
      "name": "InvalidAuthToken"
    },
    "AuthTokenDoesNotExist": {
      "id": 1327,
      "name": "AuthTokenDoesNotExist"
    },
    "AuthTokenExpired": {
      "id": 1328,
      "name": "AuthTokenExpired"
    },
    "AuthTokenAlreadyUsedToResetPassword": {
      "id": 1329,
      "name": "AuthTokenAlreadyUsedToResetPassword"
    },
    "MembershipNameTooLong": {
      "id": 1330,
      "name": "MembershipNameTooLong"
    },
    "MembershipNotFound": {
      "id": 1331,
      "name": "MembershipNotFound"
    },
    "GoogleServiceAccountInvalid": {
      "id": 1332,
      "name": "GoogleServiceAccountInvalid"
    },
    "GoogleServiceAccountParseFailure": {
      "id": 1333,
      "name": "GoogleServiceAccountParseFailure"
    },
    "EntityTokenMissing": {
      "id": 1334,
      "name": "EntityTokenMissing"
    },
    "EntityTokenInvalid": {
      "id": 1335,
      "name": "EntityTokenInvalid"
    },
    "EntityTokenExpired": {
      "id": 1336,
      "name": "EntityTokenExpired"
    },
    "EntityTokenRevoked": {
      "id": 1337,
      "name": "EntityTokenRevoked"
    },
    "InvalidProductForSubscription": {
      "id": 1338,
      "name": "InvalidProductForSubscription"
    },
    "XboxInaccessible": {
      "id": 1339,
      "name": "XboxInaccessible"
    },
    "SubscriptionAlreadyTaken": {
      "id": 1340,
      "name": "SubscriptionAlreadyTaken"
    },
    "SmtpAddonNotEnabled": {
      "id": 1341,
      "name": "SmtpAddonNotEnabled"
    },
    "APIConcurrentRequestLimitExceeded": {
      "id": 1342,
      "name": "APIConcurrentRequestLimitExceeded"
    },
    "XboxRejectedXSTSExchangeRequest": {
      "id": 1343,
      "name": "XboxRejectedXSTSExchangeRequest"
    },
    "VariableNotDefined": {
      "id": 1344,
      "name": "VariableNotDefined"
    },
    "TemplateVersionNotDefined": {
      "id": 1345,
      "name": "TemplateVersionNotDefined"
    },
    "FileTooLarge": {
      "id": 1346,
      "name": "FileTooLarge"
    },
    "TitleDeleted": {
      "id": 1347,
      "name": "TitleDeleted"
    },
    "TitleContainsUserAccounts": {
      "id": 1348,
      "name": "TitleContainsUserAccounts"
    },
    "TitleDeletionPlayerCleanupFailure": {
      "id": 1349,
      "name": "TitleDeletionPlayerCleanupFailure"
    },
    "EntityFileOperationPending": {
      "id": 1350,
      "name": "EntityFileOperationPending"
    },
    "NoEntityFileOperationPending": {
      "id": 1351,
      "name": "NoEntityFileOperationPending"
    },
    "EntityProfileVersionMismatch": {
      "id": 1352,
      "name": "EntityProfileVersionMismatch"
    },
    "TemplateVersionTooOld": {
      "id": 1353,
      "name": "TemplateVersionTooOld"
    },
    "MembershipDefinitionInUse": {
      "id": 1354,
      "name": "MembershipDefinitionInUse"
    },
    "PaymentPageNotConfigured": {
      "id": 1355,
      "name": "PaymentPageNotConfigured"
    },
    "FailedLoginAttemptRateLimitExceeded": {
      "id": 1356,
      "name": "FailedLoginAttemptRateLimitExceeded"
    },
    "EntityBlockedByGroup": {
      "id": 1357,
      "name": "EntityBlockedByGroup"
    },
    "RoleDoesNotExist": {
      "id": 1358,
      "name": "RoleDoesNotExist"
    },
    "EntityIsAlreadyMember": {
      "id": 1359,
      "name": "EntityIsAlreadyMember"
    },
    "DuplicateRoleId": {
      "id": 1360,
      "name": "DuplicateRoleId"
    },
    "GroupInvitationNotFound": {
      "id": 1361,
      "name": "GroupInvitationNotFound"
    },
    "GroupApplicationNotFound": {
      "id": 1362,
      "name": "GroupApplicationNotFound"
    },
    "OutstandingInvitationAcceptedInstead": {
      "id": 1363,
      "name": "OutstandingInvitationAcceptedInstead"
    },
    "OutstandingApplicationAcceptedInstead": {
      "id": 1364,
      "name": "OutstandingApplicationAcceptedInstead"
    },
    "RoleIsGroupDefaultMember": {
      "id": 1365,
      "name": "RoleIsGroupDefaultMember"
    },
    "RoleIsGroupAdmin": {
      "id": 1366,
      "name": "RoleIsGroupAdmin"
    },
    "RoleNameNotAvailable": {
      "id": 1367,
      "name": "RoleNameNotAvailable"
    },
    "GroupNameNotAvailable": {
      "id": 1368,
      "name": "GroupNameNotAvailable"
    },
    "EmailReportAlreadySent": {
      "id": 1369,
      "name": "EmailReportAlreadySent"
    },
    "EmailReportRecipientBlacklisted": {
      "id": 1370,
      "name": "EmailReportRecipientBlacklisted"
    },
    "EventNamespaceNotAllowed": {
      "id": 1371,
      "name": "EventNamespaceNotAllowed"
    },
    "EventEntityNotAllowed": {
      "id": 1372,
      "name": "EventEntityNotAllowed"
    },
    "InvalidEntityType": {
      "id": 1373,
      "name": "InvalidEntityType"
    },
    "NullTokenResultFromAad": {
      "id": 1374,
      "name": "NullTokenResultFromAad"
    },
    "InvalidTokenResultFromAad": {
      "id": 1375,
      "name": "InvalidTokenResultFromAad"
    },
    "NoValidCertificateForAad": {
      "id": 1376,
      "name": "NoValidCertificateForAad"
    },
    "InvalidCertificateForAad": {
      "id": 1377,
      "name": "InvalidCertificateForAad"
    },
    "DuplicateDropTableId": {
      "id": 1378,
      "name": "DuplicateDropTableId"
    },
    "MultiplayerServerError": {
      "id": 1379,
      "name": "MultiplayerServerError"
    },
    "MultiplayerServerTooManyRequests": {
      "id": 1380,
      "name": "MultiplayerServerTooManyRequests"
    },
    "MultiplayerServerNoContent": {
      "id": 1381,
      "name": "MultiplayerServerNoContent"
    },
    "MultiplayerServerBadRequest": {
      "id": 1382,
      "name": "MultiplayerServerBadRequest"
    },
    "MultiplayerServerUnauthorized": {
      "id": 1383,
      "name": "MultiplayerServerUnauthorized"
    },
    "MultiplayerServerForbidden": {
      "id": 1384,
      "name": "MultiplayerServerForbidden"
    },
    "MultiplayerServerNotFound": {
      "id": 1385,
      "name": "MultiplayerServerNotFound"
    },
    "MultiplayerServerConflict": {
      "id": 1386,
      "name": "MultiplayerServerConflict"
    },
    "MultiplayerServerInternalServerError": {
      "id": 1387,
      "name": "MultiplayerServerInternalServerError"
    },
    "MultiplayerServerUnavailable": {
      "id": 1388,
      "name": "MultiplayerServerUnavailable"
    },
    "ExplicitContentDetected": {
      "id": 1389,
      "name": "ExplicitContentDetected"
    },
    "PIIContentDetected": {
      "id": 1390,
      "name": "PIIContentDetected"
    },
    "InvalidScheduledTaskParameter": {
      "id": 1391,
      "name": "InvalidScheduledTaskParameter"
    },
    "PerEntityEventRateLimitExceeded": {
      "id": 1392,
      "name": "PerEntityEventRateLimitExceeded"
    },
    "TitleDefaultLanguageNotSet": {
      "id": 1393,
      "name": "TitleDefaultLanguageNotSet"
    },
    "EmailTemplateMissingDefaultVersion": {
      "id": 1394,
      "name": "EmailTemplateMissingDefaultVersion"
    },
    "FacebookInstantGamesIdNotLinked": {
      "id": 1395,
      "name": "FacebookInstantGamesIdNotLinked"
    },
    "InvalidFacebookInstantGamesSignature": {
      "id": 1396,
      "name": "InvalidFacebookInstantGamesSignature"
    },
    "FacebookInstantGamesAuthNotConfiguredForTitle": {
      "id": 1397,
      "name": "FacebookInstantGamesAuthNotConfiguredForTitle"
    },
    "EntityProfileConstraintValidationFailed": {
      "id": 1398,
      "name": "EntityProfileConstraintValidationFailed"
    },
    "TelemetryIngestionKeyPending": {
      "id": 1399,
      "name": "TelemetryIngestionKeyPending"
    },
    "TelemetryIngestionKeyNotFound": {
      "id": 1400,
      "name": "TelemetryIngestionKeyNotFound"
    },
    "StatisticTagRequired": {
      "id": 1401,
      "name": "StatisticTagRequired"
    },
    "StatisticTagInvalid": {
      "id": 1402,
      "name": "StatisticTagInvalid"
    },
    "DataIntegrityError": {
      "id": 1403,
      "name": "DataIntegrityError"
    },
    "MatchmakingEntityInvalid": {
      "id": 2001,
      "name": "MatchmakingEntityInvalid"
    },
    "MatchmakingPlayerAttributesInvalid": {
      "id": 2002,
      "name": "MatchmakingPlayerAttributesInvalid"
    },
    "MatchmakingCreateRequestMissing": {
      "id": 2003,
      "name": "MatchmakingCreateRequestMissing"
    },
    "MatchmakingCreateRequestCreatorMissing": {
      "id": 2004,
      "name": "MatchmakingCreateRequestCreatorMissing"
    },
    "MatchmakingCreateRequestCreatorIdMissing": {
      "id": 2005,
      "name": "MatchmakingCreateRequestCreatorIdMissing"
    },
    "MatchmakingCreateRequestUserListMissing": {
      "id": 2006,
      "name": "MatchmakingCreateRequestUserListMissing"
    },
    "MatchmakingCreateRequestGiveUpAfterInvalid": {
      "id": 2007,
      "name": "MatchmakingCreateRequestGiveUpAfterInvalid"
    },
    "MatchmakingTicketIdMissing": {
      "id": 2008,
      "name": "MatchmakingTicketIdMissing"
    },
    "MatchmakingMatchIdMissing": {
      "id": 2009,
      "name": "MatchmakingMatchIdMissing"
    },
    "MatchmakingMatchIdIdMissing": {
      "id": 2010,
      "name": "MatchmakingMatchIdIdMissing"
    },
    "MatchmakingQueueNameMissing": {
      "id": 2011,
      "name": "MatchmakingQueueNameMissing"
    },
    "MatchmakingTitleIdMissing": {
      "id": 2012,
      "name": "MatchmakingTitleIdMissing"
    },
    "MatchmakingTicketIdIdMissing": {
      "id": 2013,
      "name": "MatchmakingTicketIdIdMissing"
    },
    "MatchmakingPlayerIdMissing": {
      "id": 2014,
      "name": "MatchmakingPlayerIdMissing"
    },
    "MatchmakingJoinRequestUserMissing": {
      "id": 2015,
      "name": "MatchmakingJoinRequestUserMissing"
    },
    "MatchmakingQueueConfigNotFound": {
      "id": 2016,
      "name": "MatchmakingQueueConfigNotFound"
    },
    "MatchmakingMatchNotFound": {
      "id": 2017,
      "name": "MatchmakingMatchNotFound"
    },
    "MatchmakingTicketNotFound": {
      "id": 2018,
      "name": "MatchmakingTicketNotFound"
    },
    "MatchmakingCreateTicketServerIdentityInvalid": {
      "id": 2019,
      "name": "MatchmakingCreateTicketServerIdentityInvalid"
    },
    "MatchmakingCreateTicketClientIdentityInvalid": {
      "id": 2020,
      "name": "MatchmakingCreateTicketClientIdentityInvalid"
    },
    "MatchmakingGetTicketUserMismatch": {
      "id": 2021,
      "name": "MatchmakingGetTicketUserMismatch"
    },
    "MatchmakingJoinTicketServerIdentityInvalid": {
      "id": 2022,
      "name": "MatchmakingJoinTicketServerIdentityInvalid"
    },
    "MatchmakingJoinTicketUserIdentityMismatch": {
      "id": 2023,
      "name": "MatchmakingJoinTicketUserIdentityMismatch"
    },
    "MatchmakingCancelTicketServerIdentityInvalid": {
      "id": 2024,
      "name": "MatchmakingCancelTicketServerIdentityInvalid"
    },
    "MatchmakingCancelTicketUserIdentityMismatch": {
      "id": 2025,
      "name": "MatchmakingCancelTicketUserIdentityMismatch"
    },
    "MatchmakingGetMatchIdentityMismatch": {
      "id": 2026,
      "name": "MatchmakingGetMatchIdentityMismatch"
    },
    "MatchmakingPlayerIdentityMismatch": {
      "id": 2027,
      "name": "MatchmakingPlayerIdentityMismatch"
    },
    "MatchmakingAlreadyJoinedTicket": {
      "id": 2028,
      "name": "MatchmakingAlreadyJoinedTicket"
    },
    "MatchmakingTicketAlreadyCompleted": {
      "id": 2029,
      "name": "MatchmakingTicketAlreadyCompleted"
    },
    "MatchmakingQueueNameInvalid": {
      "id": 2030,
      "name": "MatchmakingQueueNameInvalid"
    },
    "MatchmakingQueueConfigInvalid": {
      "id": 2031,
      "name": "MatchmakingQueueConfigInvalid"
    },
    "MatchmakingMemberProfileInvalid": {
      "id": 2032,
      "name": "MatchmakingMemberProfileInvalid"
    },
    "WriteAttemptedDuringExport": {
      "id": 2033,
      "name": "WriteAttemptedDuringExport"
    },
    "NintendoSwitchDeviceIdNotLinked": {
      "id": 2034,
      "name": "NintendoSwitchDeviceIdNotLinked"
    },
    "MatchmakingNotEnabled": {
      "id": 2035,
      "name": "MatchmakingNotEnabled"
    },
    "MatchmakingGetStatisticsIdentityInvalid": {
      "id": 2036,
      "name": "MatchmakingGetStatisticsIdentityInvalid"
    },
    "MatchmakingStatisticsIdMissing": {
      "id": 2037,
      "name": "MatchmakingStatisticsIdMissing"
    },
    "CannotEnableMultiplayerServersForTitle": {
      "id": 2038,
      "name": "CannotEnableMultiplayerServersForTitle"
    }
  },
  "errorList": [
    "Success",
    "UnkownError",
    "InvalidParams",
    "AccountNotFound",
    "AccountBanned",
    "InvalidUsernameOrPassword",
    "InvalidTitleId",
    "InvalidEmailAddress",
    "EmailAddressNotAvailable",
    "InvalidUsername",
    "InvalidPassword",
    "UsernameNotAvailable",
    "InvalidSteamTicket",
    "AccountAlreadyLinked",
    "LinkedAccountAlreadyClaimed",
    "InvalidFacebookToken",
    "AccountNotLinked",
    "FailedByPaymentProvider",
    "CouponCodeNotFound",
    "InvalidContainerItem",
    "ContainerNotOwned",
    "KeyNotOwned",
    "InvalidItemIdInTable",
    "InvalidReceipt",
    "ReceiptAlreadyUsed",
    "ReceiptCancelled",
    "GameNotFound",
    "GameModeNotFound",
    "InvalidGoogleToken",
    "UserIsNotPartOfDeveloper",
    "InvalidTitleForDeveloper",
    "TitleNameConflicts",
    "UserisNotValid",
    "ValueAlreadyExists",
    "BuildNotFound",
    "PlayerNotInGame",
    "InvalidTicket",
    "InvalidDeveloper",
    "InvalidOrderInfo",
    "RegistrationIncomplete",
    "InvalidPlatform",
    "UnknownError",
    "SteamApplicationNotOwned",
    "WrongSteamAccount",
    "TitleNotActivated",
    "RegistrationSessionNotFound",
    "NoSuchMod",
    "FileNotFound",
    "DuplicateEmail",
    "ItemNotFound",
    "ItemNotOwned",
    "ItemNotRecycleable",
    "ItemNotAffordable",
    "InvalidVirtualCurrency",
    "WrongVirtualCurrency",
    "WrongPrice",
    "NonPositiveValue",
    "InvalidRegion",
    "RegionAtCapacity",
    "ServerFailedToStart",
    "NameNotAvailable",
    "InsufficientFunds",
    "InvalidDeviceID",
    "InvalidPushNotificationToken",
    "NoRemainingUses",
    "InvalidPaymentProvider",
    "PurchaseInitializationFailure",
    "DuplicateUsername",
    "InvalidBuyerInfo",
    "NoGameModeParamsSet",
    "BodyTooLarge",
    "ReservedWordInBody",
    "InvalidTypeInBody",
    "InvalidRequest",
    "ReservedEventName",
    "InvalidUserStatistics",
    "NotAuthenticated",
    "StreamAlreadyExists",
    "ErrorCreatingStream",
    "StreamNotFound",
    "InvalidAccount",
    "PurchaseDoesNotExist",
    "InvalidPurchaseTransactionStatus",
    "APINotEnabledForGameClientAccess",
    "NoPushNotificationARNForTitle",
    "BuildAlreadyExists",
    "BuildPackageDoesNotExist",
    "CustomAnalyticsEventsNotEnabledForTitle",
    "InvalidSharedGroupId",
    "NotAuthorized",
    "MissingTitleGoogleProperties",
    "InvalidItemProperties",
    "InvalidPSNAuthCode",
    "InvalidItemId",
    "PushNotEnabledForAccount",
    "PushServiceError",
    "ReceiptDoesNotContainInAppItems",
    "ReceiptContainsMultipleInAppItems",
    "InvalidBundleID",
    "JavascriptException",
    "InvalidSessionTicket",
    "UnableToConnectToDatabase",
    "InternalServerError",
    "InvalidReportDate",
    "ReportNotAvailable",
    "DatabaseThroughputExceeded",
    "InvalidGameTicket",
    "ExpiredGameTicket",
    "GameTicketDoesNotMatchLobby",
    "LinkedDeviceAlreadyClaimed",
    "DeviceAlreadyLinked",
    "DeviceNotLinked",
    "PartialFailure",
    "PublisherNotSet",
    "ServiceUnavailable",
    "VersionNotFound",
    "RevisionNotFound",
    "InvalidPublisherId",
    "DownstreamServiceUnavailable",
    "APINotIncludedInTitleUsageTier",
    "DAULimitExceeded",
    "APIRequestLimitExceeded",
    "InvalidAPIEndpoint",
    "BuildNotAvailable",
    "ConcurrentEditError",
    "ContentNotFound",
    "CharacterNotFound",
    "CloudScriptNotFound",
    "ContentQuotaExceeded",
    "InvalidCharacterStatistics",
    "PhotonNotEnabledForTitle",
    "PhotonApplicationNotFound",
    "PhotonApplicationNotAssociatedWithTitle",
    "InvalidEmailOrPassword",
    "FacebookAPIError",
    "InvalidContentType",
    "KeyLengthExceeded",
    "DataLengthExceeded",
    "TooManyKeys",
    "FreeTierCannotHaveVirtualCurrency",
    "MissingAmazonSharedKey",
    "AmazonValidationError",
    "InvalidPSNIssuerId",
    "PSNInaccessible",
    "ExpiredAuthToken",
    "FailedToGetEntitlements",
    "FailedToConsumeEntitlement",
    "TradeAcceptingUserNotAllowed",
    "TradeInventoryItemIsAssignedToCharacter",
    "TradeInventoryItemIsBundle",
    "TradeStatusNotValidForCancelling",
    "TradeStatusNotValidForAccepting",
    "TradeDoesNotExist",
    "TradeCancelled",
    "TradeAlreadyFilled",
    "TradeWaitForStatusTimeout",
    "TradeInventoryItemExpired",
    "TradeMissingOfferedAndAcceptedItems",
    "TradeAcceptedItemIsBundle",
    "TradeAcceptedItemIsStackable",
    "TradeInventoryItemInvalidStatus",
    "TradeAcceptedCatalogItemInvalid",
    "TradeAllowedUsersInvalid",
    "TradeInventoryItemDoesNotExist",
    "TradeInventoryItemIsConsumed",
    "TradeInventoryItemIsStackable",
    "TradeAcceptedItemsMismatch",
    "InvalidKongregateToken",
    "FeatureNotConfiguredForTitle",
    "NoMatchingCatalogItemForReceipt",
    "InvalidCurrencyCode",
    "NoRealMoneyPriceForCatalogItem",
    "TradeInventoryItemIsNotTradable",
    "TradeAcceptedCatalogItemIsNotTradable",
    "UsersAlreadyFriends",
    "LinkedIdentifierAlreadyClaimed",
    "CustomIdNotLinked",
    "TotalDataSizeExceeded",
    "DeleteKeyConflict",
    "InvalidXboxLiveToken",
    "ExpiredXboxLiveToken",
    "ResettableStatisticVersionRequired",
    "NotAuthorizedByTitle",
    "NoPartnerEnabled",
    "InvalidPartnerResponse",
    "APINotEnabledForGameServerAccess",
    "StatisticNotFound",
    "StatisticNameConflict",
    "StatisticVersionClosedForWrites",
    "StatisticVersionInvalid",
    "APIClientRequestRateLimitExceeded",
    "InvalidJSONContent",
    "InvalidDropTable",
    "StatisticVersionAlreadyIncrementedForScheduledInterval",
    "StatisticCountLimitExceeded",
    "StatisticVersionIncrementRateExceeded",
    "ContainerKeyInvalid",
    "CloudScriptExecutionTimeLimitExceeded",
    "NoWritePermissionsForEvent",
    "CloudScriptFunctionArgumentSizeExceeded",
    "CloudScriptAPIRequestCountExceeded",
    "CloudScriptAPIRequestError",
    "CloudScriptHTTPRequestError",
    "InsufficientGuildRole",
    "GuildNotFound",
    "OverLimit",
    "EventNotFound",
    "InvalidEventField",
    "InvalidEventName",
    "CatalogNotConfigured",
    "OperationNotSupportedForPlatform",
    "SegmentNotFound",
    "StoreNotFound",
    "InvalidStatisticName",
    "TitleNotQualifiedForLimit",
    "InvalidServiceLimitLevel",
    "ServiceLimitLevelInTransition",
    "CouponAlreadyRedeemed",
    "GameServerBuildSizeLimitExceeded",
    "GameServerBuildCountLimitExceeded",
    "VirtualCurrencyCountLimitExceeded",
    "VirtualCurrencyCodeExists",
    "TitleNewsItemCountLimitExceeded",
    "InvalidTwitchToken",
    "TwitchResponseError",
    "ProfaneDisplayName",
    "UserAlreadyAdded",
    "InvalidVirtualCurrencyCode",
    "VirtualCurrencyCannotBeDeleted",
    "IdentifierAlreadyClaimed",
    "IdentifierNotLinked",
    "InvalidContinuationToken",
    "ExpiredContinuationToken",
    "InvalidSegment",
    "InvalidSessionId",
    "SessionLogNotFound",
    "InvalidSearchTerm",
    "TwoFactorAuthenticationTokenRequired",
    "GameServerHostCountLimitExceeded",
    "PlayerTagCountLimitExceeded",
    "RequestAlreadyRunning",
    "ActionGroupNotFound",
    "MaximumSegmentBulkActionJobsRunning",
    "NoActionsOnPlayersInSegmentJob",
    "DuplicateStatisticName",
    "ScheduledTaskNameConflict",
    "ScheduledTaskCreateConflict",
    "InvalidScheduledTaskName",
    "InvalidTaskSchedule",
    "SteamNotEnabledForTitle",
    "LimitNotAnUpgradeOption",
    "NoSecretKeyEnabledForCloudScript",
    "TaskNotFound",
    "TaskInstanceNotFound",
    "InvalidIdentityProviderId",
    "MisconfiguredIdentityProvider",
    "InvalidScheduledTaskType",
    "BillingInformationRequired",
    "LimitedEditionItemUnavailable",
    "InvalidAdPlacementAndReward",
    "AllAdPlacementViewsAlreadyConsumed",
    "GoogleOAuthNotConfiguredForTitle",
    "GoogleOAuthError",
    "UserNotFriend",
    "InvalidSignature",
    "InvalidPublicKey",
    "GoogleOAuthNoIdTokenIncludedInResponse",
    "StatisticUpdateInProgress",
    "LeaderboardVersionNotAvailable",
    "StatisticAlreadyHasPrizeTable",
    "PrizeTableHasOverlappingRanks",
    "PrizeTableHasMissingRanks",
    "PrizeTableRankStartsAtZero",
    "InvalidStatistic",
    "ExpressionParseFailure",
    "ExpressionInvokeFailure",
    "ExpressionTooLong",
    "DataUpdateRateExceeded",
    "RestrictedEmailDomain",
    "EncryptionKeyDisabled",
    "EncryptionKeyMissing",
    "EncryptionKeyBroken",
    "NoSharedSecretKeyConfigured",
    "SecretKeyNotFound",
    "PlayerSecretAlreadyConfigured",
    "APIRequestsDisabledForTitle",
    "InvalidSharedSecretKey",
    "PrizeTableHasNoRanks",
    "ProfileDoesNotExist",
    "ContentS3OriginBucketNotConfigured",
    "InvalidEnvironmentForReceipt",
    "EncryptedRequestNotAllowed",
    "SignedRequestNotAllowed",
    "RequestViewConstraintParamsNotAllowed",
    "BadPartnerConfiguration",
    "XboxBPCertificateFailure",
    "XboxXASSExchangeFailure",
    "InvalidEntityId",
    "StatisticValueAggregationOverflow",
    "EmailMessageFromAddressIsMissing",
    "EmailMessageToAddressIsMissing",
    "SmtpServerAuthenticationError",
    "SmtpServerLimitExceeded",
    "SmtpServerInsufficientStorage",
    "SmtpServerCommunicationError",
    "SmtpServerGeneralFailure",
    "EmailClientTimeout",
    "EmailClientCanceledTask",
    "EmailTemplateMissing",
    "InvalidHostForTitleId",
    "EmailConfirmationTokenDoesNotExist",
    "EmailConfirmationTokenExpired",
    "AccountDeleted",
    "PlayerSecretNotConfigured",
    "InvalidSignatureTime",
    "NoContactEmailAddressFound",
    "InvalidAuthToken",
    "AuthTokenDoesNotExist",
    "AuthTokenExpired",
    "AuthTokenAlreadyUsedToResetPassword",
    "MembershipNameTooLong",
    "MembershipNotFound",
    "GoogleServiceAccountInvalid",
    "GoogleServiceAccountParseFailure",
    "EntityTokenMissing",
    "EntityTokenInvalid",
    "EntityTokenExpired",
    "EntityTokenRevoked",
    "InvalidProductForSubscription",
    "XboxInaccessible",
    "SubscriptionAlreadyTaken",
    "SmtpAddonNotEnabled",
    "APIConcurrentRequestLimitExceeded",
    "XboxRejectedXSTSExchangeRequest",
    "VariableNotDefined",
    "TemplateVersionNotDefined",
    "FileTooLarge",
    "TitleDeleted",
    "TitleContainsUserAccounts",
    "TitleDeletionPlayerCleanupFailure",
    "EntityFileOperationPending",
    "NoEntityFileOperationPending",
    "EntityProfileVersionMismatch",
    "TemplateVersionTooOld",
    "MembershipDefinitionInUse",
    "PaymentPageNotConfigured",
    "FailedLoginAttemptRateLimitExceeded",
    "EntityBlockedByGroup",
    "RoleDoesNotExist",
    "EntityIsAlreadyMember",
    "DuplicateRoleId",
    "GroupInvitationNotFound",
    "GroupApplicationNotFound",
    "OutstandingInvitationAcceptedInstead",
    "OutstandingApplicationAcceptedInstead",
    "RoleIsGroupDefaultMember",
    "RoleIsGroupAdmin",
    "RoleNameNotAvailable",
    "GroupNameNotAvailable",
    "EmailReportAlreadySent",
    "EmailReportRecipientBlacklisted",
    "EventNamespaceNotAllowed",
    "EventEntityNotAllowed",
    "InvalidEntityType",
    "NullTokenResultFromAad",
    "InvalidTokenResultFromAad",
    "NoValidCertificateForAad",
    "InvalidCertificateForAad",
    "DuplicateDropTableId",
    "MultiplayerServerError",
    "MultiplayerServerTooManyRequests",
    "MultiplayerServerNoContent",
    "MultiplayerServerBadRequest",
    "MultiplayerServerUnauthorized",
    "MultiplayerServerForbidden",
    "MultiplayerServerNotFound",
    "MultiplayerServerConflict",
    "MultiplayerServerInternalServerError",
    "MultiplayerServerUnavailable",
    "ExplicitContentDetected",
    "PIIContentDetected",
    "InvalidScheduledTaskParameter",
    "PerEntityEventRateLimitExceeded",
    "TitleDefaultLanguageNotSet",
    "EmailTemplateMissingDefaultVersion",
    "FacebookInstantGamesIdNotLinked",
    "InvalidFacebookInstantGamesSignature",
    "FacebookInstantGamesAuthNotConfiguredForTitle",
    "EntityProfileConstraintValidationFailed",
    "TelemetryIngestionKeyPending",
    "TelemetryIngestionKeyNotFound",
    "StatisticTagRequired",
    "StatisticTagInvalid",
    "DataIntegrityError",
    "MatchmakingEntityInvalid",
    "MatchmakingPlayerAttributesInvalid",
    "MatchmakingCreateRequestMissing",
    "MatchmakingCreateRequestCreatorMissing",
    "MatchmakingCreateRequestCreatorIdMissing",
    "MatchmakingCreateRequestUserListMissing",
    "MatchmakingCreateRequestGiveUpAfterInvalid",
    "MatchmakingTicketIdMissing",
    "MatchmakingMatchIdMissing",
    "MatchmakingMatchIdIdMissing",
    "MatchmakingQueueNameMissing",
    "MatchmakingTitleIdMissing",
    "MatchmakingTicketIdIdMissing",
    "MatchmakingPlayerIdMissing",
    "MatchmakingJoinRequestUserMissing",
    "MatchmakingQueueConfigNotFound",
    "MatchmakingMatchNotFound",
    "MatchmakingTicketNotFound",
    "MatchmakingCreateTicketServerIdentityInvalid",
    "MatchmakingCreateTicketClientIdentityInvalid",
    "MatchmakingGetTicketUserMismatch",
    "MatchmakingJoinTicketServerIdentityInvalid",
    "MatchmakingJoinTicketUserIdentityMismatch",
    "MatchmakingCancelTicketServerIdentityInvalid",
    "MatchmakingCancelTicketUserIdentityMismatch",
    "MatchmakingGetMatchIdentityMismatch",
    "MatchmakingPlayerIdentityMismatch",
    "MatchmakingAlreadyJoinedTicket",
    "MatchmakingTicketAlreadyCompleted",
    "MatchmakingQueueNameInvalid",
    "MatchmakingQueueConfigInvalid",
    "MatchmakingMemberProfileInvalid",
    "WriteAttemptedDuringExport",
    "NintendoSwitchDeviceIdNotLinked",
    "MatchmakingNotEnabled",
    "MatchmakingGetStatisticsIdentityInvalid",
    "MatchmakingStatisticsIdMissing",
    "CannotEnableMultiplayerServersForTitle"
  ]
}